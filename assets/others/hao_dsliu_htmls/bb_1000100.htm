<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf8"><title>163 blogs的博客：Does That PDB File Match the Binary?</title>
<style type="text/css">
a{color: #000000;text-decoration : none;font-size: 10pt;}
a:hover {color: red;text-decoration : underline;}
.replyBox{padding:4px;border:1px solid #D8D8D8;}
</style></head><body><h2>Does That PDB File Match the Binary?</h2>
<p align="right">发布时间：2012-12-6 15:45
<br>分类名称：Debug_Crack</p><br>
<p><span style="font-family:宋体; font-size:12pt;"  >From: </span>   <span style="font-family:宋体; font-size:12pt;"  >http://www.wintellect.com/CS/blogs/jrobbins/archive/2011/06/28/does-that-pdb-file-match-the-binary.aspx </span></p><p><span style="font-family:宋体; font-size:12pt;"  >While you should always have your <a rel="nofollow" href="http://www.wintellect.com/CS/blogs/jrobbins/archive/2009/05/11/pdb-files-what-every-developer-must-know.aspx"  ><span style="color:blue; text-decoration:underline;"  >PDB files</span></a> in symbol servers, there are times when you're doing private (aka local) builds and moving those builds around hither and yon in a test environment where you can accidentally forget to copy over a binary's PDB file. That leads to the common question: short of starting a debugger, how can I check that a PDB file matches a particular binary?  </span></p><p><span style="font-family:宋体; font-size:12pt;"  >Obviously you can always take an educated guess if a PDB file matches a binary from the timestamp. That will work in most cases, but to completely check, you'll need to rely on <a rel="nofollow" href="http://msdn.microsoft.com/en-us/library/ff560157(VS.85).aspx"  ><span style="color:blue; text-decoration:underline;"  >SYMCHK.EXE</span></a>, a command line tool that comes with the <a rel="nofollow" href="http://msdn.microsoft.com/en-us/windows/hardware/gg463009"  ><span style="color:blue; text-decoration:underline;"  >Debugging Tools for Windows</span></a> (AKA WinDBG). The trick is to tell SYMCHK.EXE to use the PDB file directory as your symbol server. In the following example, I'm running the SYMCHK.EXE command from the same directory where my binary, RinjPlay.exe is located.  </span></p><p style="background: #c6d9f1;"  ><span style="color:black; font-family:Courier New;"  >symchk RinjPlay.exe /s .\</span><span style="font-family:宋体; font-size:12pt;"  >   </span></p><p><span style="font-family:宋体; font-size:12pt;"  >If the PDB matches the binary, you'll see the following output. </span></p><p style="background: #c6d9f1;"  ><span style="color:black; font-family:Courier New;"  >SYMCHK: FAILED files = 0</span><span style="font-family:宋体; font-size:12pt;"  ><br></span><span style="color:black; font-family:Courier New;"  >SYMCHK: PASSED + IGNORED files = 1 </span><span style="font-family:宋体; font-size:12pt;"  >   </span></p><p><span style="font-family:宋体; font-size:12pt;"  >If the PDB does not match, your output will look like the following. </span></p><p style="background: #c6d9f1;"  ><span style="color:black; font-family:Courier New;"  >SYMCHK: RinjPlay.exe&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FAILED&nbsp;&nbsp; - RinjPlay.pdb mismatched or not found</span><span style="font-family:宋体; font-size:12pt;"  ><br></span><span style="color:black; font-family:Courier New;"  >SYMCHK: FAILED files = 1</span><span style="font-family:宋体; font-size:12pt;"  ><br></span><span style="color:black; font-family:Courier New;"  >SYMCHK: PASSED + IGNORED files = 0 </span><span style="font-family:宋体; font-size:12pt;"  >   </span></p><p><span style="font-family:宋体; font-size:12pt;"  >As with any SYMCHK.EXE command, you can pass /v to get detailed output about your binary and PDB file matching. </span></p>
</body></html>