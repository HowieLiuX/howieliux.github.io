<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf8"><title>163 blogs的博客：The _CRTDBG_MAP_ALLOC macro does not work as expected</title>
<style type="text/css">
a{color: #000000;text-decoration : none;font-size: 10pt;}
a:hover {color: red;text-decoration : underline;}
.replyBox{padding:4px;border:1px solid #D8D8D8;}
</style></head><body><h2>The _CRTDBG_MAP_ALLOC macro does not work as expected</h2>
<p align="right">发布时间：2013-5-21 19:28
<br>分类名称：Debug_Crack</p><br>

<P>from:http://support.microsoft.com/kb/140858/en-us</P>
<P>SYMPTOMS <BR>When an object is allocated through use of the New operator and dumped through use of the debugging routines in the C Run-Time Library, the allocation is reported as occurring in the Crtdbg.h file line 512. </P><WBR>CAUSE <BR>This is caused by the definition of the overloaded operator New in the Crtdbg.h file: <BR><PRE>   #ifdef _CRTDBG_MAP_ALLOC
   inline void* __cdecl operator new(unsigned int s)
         { return ::operator new(s, _NORMAL_BLOCK, __FILE__, __LINE__); }
   #endif /* _CRTDBG_MAP_ALLOC */ 
<BR>Here __FILE__ and __LINE__ are macros defined by the compiler that report the current file name and line number. Macros are filled out by the preprocessor. Then the compiler replaces your call to New with this function. Therefore, the macros have already been filled out before they are inlined. Hence they will report the header file information. </PRE><PRE>MORE INFORMATION <BR>The Books On<WBR>line section titled "Using the Debug Heap from C++" in the Run-Time Library Reference states that defining the _CRTDBG_MAP_ALLOC symbol causes all instances of New in your co<WBR>de to be mapped properly to the debug version of New so as to record source file and line number information.<BR>While it is true that this will map calls to the debug version of New, it will not store the proper source file or line number information. There are two ways to mark the correct file name and line number:<BR>Call the debug version of the new operator directly -or-<BR>Create macros that replace the operator new in debug mode as in the following sample co<WBR>de.<BR>Sample Co<WBR>de<BR><PRE>   /* MyDbgNew.h
   /* Defines global operator new to allocate from
   /* client blocks
   */ 
   #ifdef _DEBUG
      #define MYDEBUG_NEW   new( _NORMAL_BLOCK, __FILE__, __LINE__)
       // Replace _NORMAL_BLOCK with _CLIENT_BLOCK if you want the
       //allocations to be of _CLIENT_BLOCK type
   #else
      #define MYDEBUG_NEW
   #endif // _DEBUG


   /* MyApp.cpp
   /*  Compile options needed: /Zi /D_DEBUG /MLd
   /*            or use a
   /*      Default Workspace for a Console Application to
   /*      build a Debug version
   */ 

   #include "crtdbg.h"
   #include "mydbgnew.h"

   #ifdef _DEBUG
   #define new MYDEBUG_NEW
   #endif

   void main( )  {
     char *p1;
     p1 =  new char[40];
     _CrtMemDumpAllObjectsSince( NULL );
   }
</PRE><BR><BR></PRE>
</body></html>