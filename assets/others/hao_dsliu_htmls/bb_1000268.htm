<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf8"><title>163 blogs的博客：Calculating Chrome Extension ID from your private key</title>
<style type="text/css">
a{color: #000000;text-decoration : none;font-size: 10pt;}
a:hover {color: red;text-decoration : underline;}
.replyBox{padding:4px;border:1px solid #D8D8D8;}
</style></head><body><h2>Calculating Chrome Extension ID from your private key</h2>
<p align="right">发布时间：2011-1-27 17:46
<br>分类名称：PKI</p><br>
<span style="font-family: MyriadPro-Regular, 'Myriad Pro Regular', MyriadPro, 'Myriad Pro', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 16px;"  ><p style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 0px;"  >Chrome Extensions files (those with the&nbsp;<code style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; font-weight: normal; font-family: monospace; line-height: 13px; color: rgb(255, 85, 0);"  >.crx</code>&nbsp;extension) are, in essence, signed ZIP files. The extension data is signed with your private key, while the public key is included in the&nbsp;<code style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; font-weight: normal; font-family: monospace; line-height: 13px; color: rgb(255, 85, 0);"  >.crx</code>. A hash of this public key is used as the extension identifier when you install the extension. This identifier is important because you need it if you want to generate an&nbsp;<a style="text-decoration: none; color: rgb(0, 0, 255); font-weight: normal;" rel="nofollow" href="http://code.google.com/chrome/extensions/autoupdate.html"  >update manifest</a>. (Of course, if you’re hosting your extension on the&nbsp;<a style="text-decoration: none; color: rgb(0, 0, 255); font-weight: normal;" rel="nofollow" href="https://chrome.google.com/extensions"  >extension gallery</a>&nbsp;you won’t have to worry about this.)</p><p style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 0px;"  >Let’s say you’re hosting your extension yourself and you want to&nbsp;<a style="text-decoration: none; color: rgb(0, 0, 255); font-weight: normal;" rel="nofollow" href="http://github.com/Constellation/crxmake"  >build</a>&nbsp;the&nbsp;<code style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; font-weight: normal; font-family: monospace; line-height: 13px; color: rgb(255, 85, 0);"  >.crx</code>&nbsp;file and the update manifest automatically. You could install the extension first and copy the identifier from the extensions list, but you can also calculate the identifier.</p><p style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 0px;"  >Chrome Extension developer Erik Kay&nbsp;<a style="text-decoration: none; color: rgb(0, 0, 255); font-weight: normal;" rel="nofollow" href="http://stackoverflow.com/questions/1882981/google-chrome-alphanumeric-hashes-to-identify-extensions/2050916#2050916"  >explains the format</a>&nbsp;on Stack Overflow:</p><blockquote style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 1em; padding-bottom: 0px; padding-left: 1em; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: rgb(238, 238, 238); background-position: initial initial; background-repeat: initial initial;"  ><p style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 1em; padding-right: 0px; padding-bottom: 1em; padding-left: 0px;"  >To be precise, it’s the first 128 bits of the SHA256 of an RSA public key encoded in base 16.</p><p style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 1em; padding-right: 0px; padding-bottom: 1em; padding-left: 0px;"  >Another random bit of trivia is that the encoding uses a-p instead of 0-9a-f. The reason is that leading numeric characters in the host field of an origin can wind up being treated as potential IP addresses by Chrome. We refer to it internally as “mpdecimal” after the guy who came up with it.</p></blockquote><p style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 0px;"  >Here’s a short Ruby script to do exactly this:</p><pre style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 1em; font-family: monospace; line-height: 13px; white-space: pre-wrap; word-wrap: break-word; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: rgb(238, 238, 238); background-position: initial initial; background-repeat: initial initial;"  ><code style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; font-weight: normal; font-family: monospace; line-height: 13px; color: rgb(255, 85, 0);"  >require "openssl" require "digest/sha2"  def pkey_to_id(pkey)   # Key algorithm, found in &lt;http://github.com/Constellation/crxmake&gt;.   algo = %w(30 81 9F 30 0D 06 09 2A 86 48 86 F7 0D 01 01 01 05 00 03 81 8D 00).map{ |s| s.hex }.pack("C*")   # Calculate public key, get hex hash of first 128 bits / 32 characters   hash = Digest::SHA256.hexdigest(algo + OpenSSL::PKey::RSA.new(pkey).public_key.to_der)[0...32]   # Shift hex from 0-9a-f to a-p   hash.unpack("C*").map{ |c| c &lt; 97 ? c + 49 : c + 10 }.pack("C*") end </code></pre><p style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 0px;"  >For example the extension id for this private key:</p><pre style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 1em; font-family: monospace; line-height: 13px; white-space: pre-wrap; word-wrap: break-word; background-image: initial; background-attachment: initial; background-origin: initial; background-clip: initial; background-color: rgb(238, 238, 238); background-position: initial initial; background-repeat: initial initial;"  ><code style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; font-weight: normal; font-family: monospace; line-height: 13px; color: rgb(255, 85, 0);"  >-----BEGIN PRIVATE KEY----- MIICdwIBADANBgkqhkiG9w0BAQEFAASCAmEwggJdAgEAAoGBANRvspoXYkKCTQple mUX/Umh8zgmmz7xJ/oUiQSca7vd/3eDvLRBTOy7o4NwRmIzDHr/AbDkVRzXDd6ale oGBj8ABvAf+3XAO7KdFsjIxmSfUI5M7F8EsqTDT+AR+YGiGOrF/9s4ganiqGSyIuk Fe1UWrxlUBHKcazzgSdpsOZ2pAgMBAAECgYBNHIJ7NpO/SqcGaBGGkq+pQ7USo8jk jwsQ1tVprBHbLtklm9cqoy12HSJceqvBx3/3QYtul2NhxZpOPFTAjxFCsaBP5I8rn fgFzdSvKZXtZmQ7DsYaglclYqSwhKtKM9j5xVbqEh4r0LXYAvM1dlRSJQrFtqhLiI Nc5jyWL2HHxQJBAPMWXG8BOwo0yM3eb27Foz6jjO92iQ+pHgWNFoW+QZIhVUGHkIH ESl94UF86k0uurVBO22oHNoeLAwZ1XLIulN8CQQDfuIbPu4WAGyshyT/rdk/MuRXd gcnbUkwKbyYfiKsSLpmMryM9ugFqyO+AQNIGA1xQHEP3znxUE/Y1tyE74NZ3AkBih dOc4gDN2Cry1Y6QdOX/A0ah34cZo8+ZLF/OgRgOZBgr4Qf+sFH8c8UPc6wzZm60N+ HSDW5abUsimPqi9SI9AkEAzhbaeXqxXHWqohEWRP5UPK8zqT3qiZOiYOpLIDlx/en XoXWk7TPwIkK//lG4J7nozBN9uUYJ2hoZcRomD1bruQJBAI49v2hvt24JV870F8Lf oEReK/26DpyMFfH7a4I4O2JkGX79M/aVXBbSbNlnl01Esoxsx9kYzksP4CpR7CdYH og= -----END PRIVATE KEY----- </code></pre><p style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 0px;"  >is&nbsp;<code style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; font-weight: normal; font-family: monospace; line-height: 13px; color: rgb(255, 85, 0);"  >cigbjabahnfnnmplhmjeolnhobhfjggp</code>.</p><p style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 0px;"  >The script uses&nbsp;<code style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; font-weight: normal; font-family: monospace; line-height: 13px; color: rgb(255, 85, 0);"  >OpenSSL::PKey::RSA.new(pkey).public_key</code>&nbsp;to calculate the public key for the given private key. It then adds the key algorithm (a subject of which I understand not much more than what is&nbsp;<a style="text-decoration: none; color: rgb(0, 0, 255); font-weight: normal;" rel="nofollow" href="http://en.wikipedia.org/wiki/Public-key_cryptography"  >described on Wikipedia</a>) and takes the SHA256 hash in hexadecimal form. Of this hash it takes the first 32 characters, corresponding to the first 128 bits of the SHA256 hash.</p><p style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 0px;"  >Finally we need to shift from&nbsp;<code style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; font-weight: normal; font-family: monospace; line-height: 13px; color: rgb(255, 85, 0);"  >0-9a-f</code>&nbsp;to&nbsp;<code style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; font-weight: normal; font-family: monospace; line-height: 13px; color: rgb(255, 85, 0);"  >a-p</code>. Technically this means that the extension id is not in hexadecimal format, but it is still in base 16.&nbsp;<code style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; font-weight: normal; font-family: monospace; line-height: 13px; color: rgb(255, 85, 0);"  >hash.unpack("C*")</code>&nbsp;gives an array of ASCII character codes for the string. Each character code in the original&nbsp;<code style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; font-weight: normal; font-family: monospace; line-height: 13px; color: rgb(255, 85, 0);"  >0-9a-f</code>&nbsp;format is mapped to the corresponding code in the&nbsp;<code style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; font-weight: normal; font-family: monospace; line-height: 13px; color: rgb(255, 85, 0);"  >a-p</code>&nbsp;format. We can exploit the ASCII table for this. Digits are character codes&nbsp;<code style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; font-weight: normal; font-family: monospace; line-height: 13px; color: rgb(255, 85, 0);"  >48</code>&nbsp;to&nbsp;<code style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; font-weight: normal; font-family: monospace; line-height: 13px; color: rgb(255, 85, 0);"  >57</code>, while lowercase characters start at&nbsp;<code style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; font-weight: normal; font-family: monospace; line-height: 13px; color: rgb(255, 85, 0);"  >97</code>. Therefore, we can simply add&nbsp;<code style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; font-weight: normal; font-family: monospace; line-height: 13px; color: rgb(255, 85, 0);"  >49</code>&nbsp;(the difference between&nbsp;<code style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; font-weight: normal; font-family: monospace; line-height: 13px; color: rgb(255, 85, 0);"  >97</code>&nbsp;and&nbsp;<code style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; font-weight: normal; font-family: monospace; line-height: 13px; color: rgb(255, 85, 0);"  >48</code>) to each number and, since we’re shifting by ten characters,&nbsp;<code style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; font-weight: normal; font-family: monospace; line-height: 13px; color: rgb(255, 85, 0);"  >10</code>&nbsp;to the letters&nbsp;<code style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; font-weight: normal; font-family: monospace; line-height: 13px; color: rgb(255, 85, 0);"  >a-f</code>. Finally we&nbsp;<code style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; font-weight: normal; font-family: monospace; line-height: 13px; color: rgb(255, 85, 0);"  >pack("C*")</code>&nbsp;the character codes back into the extension id.</p><p style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 0px;"  >I’ll be writing more about Chrome Extensions here, and am giving a talk on the subject at the<a style="text-decoration: none; color: rgb(0, 0, 255); font-weight: normal;" rel="nofollow" href="http://www.swdc-central.com/"  >Scandinavian Web Developer Conference</a>&nbsp;at the end of May in Stockholm. I’ll also give a brief Chrome Extensions Primer at the&nbsp;<a style="text-decoration: none; color: rgb(0, 0, 255); font-weight: normal;" rel="nofollow" href="http://www.meetup.com/The-Oresund-JavaScript-Meetup/calendar/12285248/"  >?resund JavaScript Meetup</a>&nbsp;in Malm? this Wednesday.</p><p style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 0px;"  >由 private key 得到 public key, 计算 “算法标识头 + public key” 的SHA256 hash值。取前面128bit，将其编码为base16编码。就得到了chrome 扩展的ID号。</p></span><wbr>
</body></html>