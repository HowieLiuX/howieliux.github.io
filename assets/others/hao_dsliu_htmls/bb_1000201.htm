<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf8"><title>163 blogs的博客：VIM (Splitting windows)</title>
<style type="text/css">
a{color: #000000;text-decoration : none;font-size: 10pt;}
a:hover {color: red;text-decoration : underline;}
.replyBox{padding:4px;border:1px solid #D8D8D8;}
</style></head><body><h2>VIM (Splitting windows)</h2>
<p align="right">发布时间：2011-8-12 17:58
<br>分类名称：Linux</p><br>
*usr_08.txt*&nbsp;&nbsp; &nbsp;For Vim version 7.2.&nbsp; Last change: 2006 Jul 18<br><br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; VIM USER MANUAL - by Bram Moolenaar<br><br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Splitting windows<br><br><br>Display two different files above each other.&nbsp; Or view two locations in the<br>file at the same time.&nbsp; See the difference between two files by putting them<br>side by side.&nbsp; All this is possible with split windows.<br><br>|08.1|&nbsp;&nbsp; &nbsp;Split a window<br>|08.2|&nbsp;&nbsp; &nbsp;Split a window on another file<br>|08.3|&nbsp;&nbsp; &nbsp;Window size<br>|08.4|&nbsp;&nbsp; &nbsp;Vertical splits<br>|08.5|&nbsp;&nbsp; &nbsp;Moving windows<br>|08.6|&nbsp;&nbsp; &nbsp;Commands for all windows<br>|08.7|&nbsp;&nbsp; &nbsp;Viewing differences with vimdiff<br>|08.8|&nbsp;&nbsp; &nbsp;Various<br>|08.9|&nbsp; Tab pages<br><br>&nbsp;&nbsp;&nbsp;&nbsp; Next chapter: |usr_09.txt|&nbsp; Using the GUI<br>&nbsp;Previous chapter: |usr_07.txt|&nbsp; Editing more than one file<br>Table of contents: |usr_toc.txt|<br><br>==============================================================================<br>*08.1*&nbsp;&nbsp; &nbsp;Split a window<br><br>The easiest way to open a new window is to use the following command: &gt;<br><br>&nbsp;&nbsp; &nbsp;:split<br><br>This command splits the screen into two windows and leaves the cursor in the<br>top one:<br><br>&nbsp;&nbsp; &nbsp;+----------------------------------+<br>&nbsp;&nbsp; &nbsp;|/* file one.c */&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|one.c=============================|<br>&nbsp;&nbsp; &nbsp;|/* file one.c */&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|one.c=============================|<br>&nbsp;&nbsp; &nbsp;|&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;+----------------------------------+<br><br>What you see here is two windows on the same file.&nbsp; The line with "====" is<br>that status line.&nbsp; It displays information about the window above it.&nbsp; (In<br>practice the status line will be in reverse video.)<br>&nbsp;&nbsp; The two windows allow you to view two parts of the same file.&nbsp; For example,<br>you could make the top window show the variable declarations of a program, and<br>the bottom one the code that uses these variables.<br><br>The CTRL-W w command can be used to jump between the windows.&nbsp; If you are in<br>the top window, CTRL-W w jumps to the window below it.&nbsp; If you are in the<br>bottom window it will jump to the first window.&nbsp; (CTRL-W CTRL-W does the same<br>thing, in case you let go of the CTRL key a bit later.)<br><br><br>CLOSE THE WINDOW<br><br>To close a window, use the command: &gt;<br><br>&nbsp;&nbsp; &nbsp;:close<br><br>Actually, any command that quits editing a file works, like ":quit" and "ZZ".<br>But ":close" prevents you from accidentally exiting Vim when you close the<br>last window.<br><br><br>CLOSING ALL OTHER WINDOWS<br><br>If you have opened a whole bunch of windows, but now want to concentrate on<br>one of them, this command will be useful: &gt;<br><br>&nbsp;&nbsp; &nbsp;:only<br><br>This closes all windows, except for the current one.&nbsp; If any of the other<br>windows has changes, you will get an error message and that window won't be<br>closed.<br><br>==============================================================================<br>*08.2*&nbsp;&nbsp; &nbsp;Split a window on another file<br><br>The following command opens a second window and starts editing the given file:<br>&gt;<br>&nbsp;&nbsp; &nbsp;:split two.c<br><br>If you were editing one.c, then the result looks like this:<br><br>&nbsp;&nbsp; &nbsp;+----------------------------------+<br>&nbsp;&nbsp; &nbsp;|/* file two.c */&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|two.c=============================|<br>&nbsp;&nbsp; &nbsp;|/* file one.c */&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|one.c=============================|<br>&nbsp;&nbsp; &nbsp;|&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;+----------------------------------+<br><br>To open a window on a new, empty file, use this: &gt;<br><br>&nbsp;&nbsp; &nbsp;:new<br><br>You can repeat the ":split" and ":new" commands to create as many windows as<br>you like.<br><br>==============================================================================<br>*08.3*&nbsp;&nbsp; &nbsp;Window size<br><br>The ":split" command can take a number argument.&nbsp; If specified, this will be<br>the height of the new window.&nbsp; For example, the following opens a new window<br>three lines high and starts editing the file alpha.c: &gt;<br><br>&nbsp;&nbsp; &nbsp;:3split alpha.c<br><br>For existing windows you can change the size in several ways.&nbsp; When you have a<br>working mouse, it is easy: Move the mouse pointer to the status line that<br>separates two windows, and drag it up or down.<br><br>To increase the size of a window: &gt;<br><br>&nbsp;&nbsp; &nbsp;CTRL-W +<br><br>To decrease it: &gt;<br><br>&nbsp;&nbsp; &nbsp;CTRL-W -<br><br>Both of these commands take a count and increase or decrease the window size<br>by that many lines.&nbsp; Thus "4 CTRL-W +" make the window four lines higher.<br><br>To set the window height to a specified number of lines: &gt;<br><br>&nbsp;&nbsp; &nbsp;{height}CTRL-W _<br><br>That's: a number {height}, CTRL-W and then an underscore (the - key with Shift<br>on English-US keyboards).<br>&nbsp;&nbsp; To make a window as high as it can be, use the CTRL-W _ command without a<br>count.<br><br><br>USING THE MOUSE<br><br>In Vim you can do many things very quickly from the keyboard.&nbsp; Unfortunately,<br>the window resizing commands require quite a bit of typing.&nbsp; In this case,<br>using the mouse is faster.&nbsp; Position the mouse pointer on a status line.&nbsp; Now<br>press the left mouse button and drag.&nbsp; The status line will move, thus making<br>the window on one side higher and the other smaller.<br><br><br>OPTIONS<br><br>The 'winheight' option can be set to a minimal desired height of a window and<br>'winminheight' to a hard minimum height.<br>&nbsp;&nbsp; Likewise, there is 'winwidth' for the minimal desired width and<br>'winminwidth' for the hard minimum width.<br>&nbsp;&nbsp; The 'equalalways' option, when set, makes Vim equalize the windows sizes<br>when a window is closed or opened.<br><br>==============================================================================<br>*08.4*&nbsp;&nbsp; &nbsp;Vertical splits<br><br>The ":split" command creates the new window above the current one.&nbsp; To make<br>the window appear at the left side, use: &gt;<br><br>&nbsp;&nbsp; &nbsp;:vsplit<br><br>or: &gt;<br>&nbsp;&nbsp; &nbsp;:vsplit two.c<br><br>The result looks something like this:<br><br>&nbsp;&nbsp; &nbsp;+--------------------------------------+<br>&nbsp;&nbsp; &nbsp;|/* file two.c */&nbsp;&nbsp; |/* file one.c */&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; |~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; |~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; |~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|two.c===============one.c=============|<br>&nbsp;&nbsp; &nbsp;|&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;+--------------------------------------+<br><br>Actually, the | lines in the middle will be in reverse video.&nbsp; This is called<br>the vertical separator.&nbsp; It separates the two windows left and right of it.<br><br>There is also the ":vnew" command, to open a vertically split window on a new,<br>empty file.&nbsp; Another way to do this: &gt;<br><br>&nbsp;&nbsp; &nbsp;:vertical new<br><br>The ":vertical" command can be inserted before another command that splits a<br>window.&nbsp; This will cause that command to split the window vertically instead<br>of horizontally.&nbsp; (If the command doesn't split a window, it works<br>unmodified.)<br><br><br>MOVING BETWEEN WINDOWS<br><br>Since you can split windows horizontally and vertically as much as you like,<br>you can create almost any layout of windows.&nbsp; Then you can use these commands<br>to move between them:<br><br>&nbsp;&nbsp; &nbsp;CTRL-W h&nbsp;&nbsp; &nbsp;move to the window on the left<br>&nbsp;&nbsp; &nbsp;CTRL-W j&nbsp;&nbsp; &nbsp;move to the window below<br>&nbsp;&nbsp; &nbsp;CTRL-W k&nbsp;&nbsp; &nbsp;move to the window above<br>&nbsp;&nbsp; &nbsp;CTRL-W l&nbsp;&nbsp; &nbsp;move to the window on the right<br><br>&nbsp;&nbsp; &nbsp;CTRL-W t&nbsp;&nbsp; &nbsp;move to the TOP window<br>&nbsp;&nbsp; &nbsp;CTRL-W b&nbsp;&nbsp; &nbsp;move to the BOTTOM window<br><br>You will notice the same letters as used for moving the cursor.&nbsp; And the<br>cursor keys can also be used, if you like.<br>&nbsp;&nbsp; More commands to move to other windows: |Q_wi|.<br><br>==============================================================================<br>*08.5*&nbsp;&nbsp; &nbsp;Moving windows<br><br>You have split a few windows, but now they are in the wrong place.&nbsp; Then you<br>need a command to move the window somewhere else.&nbsp; For example, you have three<br>windows like this:<br><br>&nbsp;&nbsp; &nbsp;+----------------------------------+<br>&nbsp;&nbsp; &nbsp;|/* file two.c */&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|two.c=============================|<br>&nbsp;&nbsp; &nbsp;|/* file three.c */&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|three.c===========================|<br>&nbsp;&nbsp; &nbsp;|/* file one.c */&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|one.c=============================|<br>&nbsp;&nbsp; &nbsp;|&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;+----------------------------------+<br><br>Clearly the last one should be at the top.&nbsp; Go to that window (using CTRL-W w)<br>and the type this command: &gt;<br><br>&nbsp;&nbsp; &nbsp;CTRL-W K<br><br>This uses the uppercase letter K.&nbsp; What happens is that the window is moved to<br>the very top.&nbsp; You will notice that K is again used for moving upwards.<br>&nbsp;&nbsp; When you have vertical splits, CTRL-W K will move the current window to the<br>top and make it occupy the full width of the Vim window.&nbsp; If this is your<br>layout:<br><br>&nbsp;&nbsp; &nbsp;+-------------------------------------------+<br>&nbsp;&nbsp; &nbsp;|/* two.c */&nbsp; |/* three.c */&nbsp; |/* one.c */&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|two.c=========three.c=========one.c========|<br>&nbsp;&nbsp; &nbsp;|&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;+-------------------------------------------+<br><br>Then using CTRL-W K in the middle window (three.c) will result in:<br><br>&nbsp;&nbsp; &nbsp;+-------------------------------------------+<br>&nbsp;&nbsp; &nbsp;|/* three.c */&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|three.c====================================|<br>&nbsp;&nbsp; &nbsp;|/* two.c */&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |/* one.c */&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|two.c==================one.c===============|<br>&nbsp;&nbsp; &nbsp;|&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;+-------------------------------------------+<br><br>The other three similar commands (you can probably guess these now):<br><br>&nbsp;&nbsp; &nbsp;CTRL-W H&nbsp;&nbsp; &nbsp;move window to the far left<br>&nbsp;&nbsp; &nbsp;CTRL-W J&nbsp;&nbsp; &nbsp;move window to the bottom<br>&nbsp;&nbsp; &nbsp;CTRL-W L&nbsp;&nbsp; &nbsp;move window to the far right<br><br>==============================================================================<br>*08.6*&nbsp;&nbsp; &nbsp;Commands for all windows<br><br>When you have several windows open and you want to quit Vim, you can close<br>each window separately.&nbsp; A quicker way is using this command: &gt;<br><br>&nbsp;&nbsp; &nbsp;:qall<br><br>This stands for "quit all".&nbsp; If any of the windows contain changes, Vim will<br>not exit.&nbsp; The cursor will automatically be positioned in a window with<br>changes.&nbsp; You can then either use ":write" to save the changes, or ":quit!" to<br>throw them away.<br><br>If you know there are windows with changes, and you want to save all these<br>changes, use this command: &gt;<br><br>&nbsp;&nbsp; &nbsp;:wall<br><br>This stands for "write all".&nbsp; But actually, it only writes files with<br>changes.&nbsp; Vim knows it doesn't make sense to write files that were not<br>changed.<br>&nbsp;&nbsp; And then there is the combination of ":qall" and ":wall": the "write and<br>quit all" command: &gt;<br><br>&nbsp;&nbsp; &nbsp;:wqall<br><br>This writes all modified files and quits Vim.<br>&nbsp;&nbsp; Finally, there is a command that quits Vim and throws away all changes: &gt;<br><br>&nbsp;&nbsp; &nbsp;:qall!<br><br>Be careful, there is no way to undo this command!<br><br><br>OPENING A WINDOW FOR ALL ARGUMENTS<br><br>To make Vim open a window for each file, start it with the "-o" argument: &gt;<br><br>&nbsp;&nbsp; &nbsp;vim -o one.txt two.txt three.txt<br><br>This results in:<br><br>&nbsp;&nbsp; &nbsp;+-------------------------------+<br>&nbsp;&nbsp; &nbsp;|file one.txt&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;|<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;|<br>&nbsp;&nbsp; &nbsp;|one.txt========================|<br>&nbsp;&nbsp; &nbsp;|file two.txt&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;|<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;|<br>&nbsp;&nbsp; &nbsp;|two.txt========================|<br>&nbsp;&nbsp; &nbsp;|file three.txt&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;|<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;|<br>&nbsp;&nbsp; &nbsp;|three.txt======================|<br>&nbsp;&nbsp; &nbsp;|&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;|<br>&nbsp;&nbsp; &nbsp;+-------------------------------+<br><br>The "-O" argument is used to get vertically split windows.<br>&nbsp;&nbsp; When Vim is already running, the ":all" command opens a window for each<br>file in the argument list.&nbsp; ":vertical all" does it with vertical splits.<br><br>==============================================================================<br>*08.7*&nbsp;&nbsp; &nbsp;Viewing differences with vimdiff<br><br>There is a special way to start Vim, which shows the differences between two<br>files.&nbsp; Let's take a file "main.c" and insert a few characters in one line.<br>Write this file with the 'backup' option set, so that the backup file<br>"main.c~" will contain the previous version of the file.<br>&nbsp;&nbsp; Type this command in a shell (not in Vim): &gt;<br><br>&nbsp;&nbsp; &nbsp;vimdiff main.c~ main.c<br><br>Vim will start, with two windows side by side.&nbsp; You will only see the line<br>in which you added characters, and a few lines above and below it.<br><br>&nbsp;&nbsp; &nbsp; VV&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; VV<br>&nbsp;&nbsp; &nbsp;+-----------------------------------------+<br>&nbsp;&nbsp; &nbsp;|+ +--123 lines: /* a|+ +--123 lines: /* a|&nbsp; &lt;- fold<br>&nbsp;&nbsp; &nbsp;|&nbsp; text&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp; &nbsp;text&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|&nbsp; text&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp; &nbsp;text&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|&nbsp; text&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp; &nbsp;text&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|&nbsp; text&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp; &nbsp;changed text&nbsp;&nbsp; &nbsp;&nbsp; |&nbsp; &lt;- changed line<br>&nbsp;&nbsp; &nbsp;|&nbsp; text&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp; &nbsp;text&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|&nbsp; text&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp; &nbsp;------------------|&nbsp; &lt;- deleted line<br>&nbsp;&nbsp; &nbsp;|&nbsp; text&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp; &nbsp;text&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|&nbsp; text&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp; &nbsp;text&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|&nbsp; text&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp; &nbsp;text&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|+ +--432 lines: text|+ +--432 lines: text|&nbsp; &lt;- fold<br>&nbsp;&nbsp; &nbsp;|&nbsp; ~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp; &nbsp;~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|&nbsp; ~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp; &nbsp;~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|main.c~==============main.c==============|<br>&nbsp;&nbsp; &nbsp;|&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;+-----------------------------------------+<br><br>(This picture doesn't show the highlighting, use the vimdiff command for a<br>better look.)<br><br>The lines that were not modified have been collapsed into one line.&nbsp; This is<br>called a closed fold.&nbsp; They are indicated in the picture with "&lt;- fold".&nbsp; Thus<br>the single fold line at the top stands for 123 text lines.&nbsp; These lines are<br>equal in both files.<br>&nbsp;&nbsp; The line marked with "&lt;- changed line" is highlighted, and the inserted<br>text is displayed with another color.&nbsp; This clearly shows what the difference<br>is between the two files.<br>&nbsp;&nbsp; The line that was deleted is displayed with "---" in the main.c window.<br>See the "&lt;- deleted line" marker in the picture.&nbsp; These characters are not<br>really there.&nbsp; They just fill up main.c, so that it displays the same number<br>of lines as the other window.<br><br><br>THE FOLD COLUMN<br><br>Each window has a column on the left with a slightly different background.&nbsp; In<br>the picture above these are indicated with "VV".&nbsp; You notice there is a plus<br>character there, in front of each closed fold.&nbsp; Move the mouse pointer to that<br>plus and click the left button.&nbsp; The fold will open, and you can see the text<br>that it contains.<br>&nbsp;&nbsp; The fold column contains a minus sign for an open fold.&nbsp; If you click on<br>this -, the fold will close.<br>&nbsp;&nbsp; Obviously, this only works when you have a working mouse.&nbsp; You can also use<br>"zo" to open a fold and "zc" to close it.<br><br><br>DIFFING IN VIM<br><br>Another way to start in diff mode can be done from inside Vim.&nbsp; Edit the<br>"main.c" file, then make a split and show the differences: &gt;<br><br>&nbsp;&nbsp; &nbsp;:edit main.c<br>&nbsp;&nbsp; &nbsp;:vertical diffsplit main.c~ <br><br>The ":vertical" command is used to make the window split vertically.&nbsp; If you<br>omit this, you will get a horizontal split.<br><br>If you have a patch or diff file, you can use the third way to start diff<br>mode.&nbsp; First edit the file to which the patch applies.&nbsp; Then tell Vim the name<br>of the patch file: &gt;<br><br>&nbsp;&nbsp; &nbsp;:edit main.c<br>&nbsp;&nbsp; &nbsp;:vertical diffpatch main.c.diff<br><br>WARNING: The patch file must contain only one patch, for the file you are<br>editing.&nbsp; Otherwise you will get a lot of error messages, and some files might<br>be patched unexpectedly.<br>&nbsp;&nbsp; The patching will only be done to the copy of the file in Vim.&nbsp; The file on<br>your harddisk will remain unmodified (until you decide to write the file).<br><br><br>SCROLL BINDING<br><br>When the files have more changes, you can scroll in the usual way.&nbsp; Vim will<br>try to keep both the windows start at the same position, so you can easily see<br>the differences side by side.<br>&nbsp;&nbsp; When you don't want this for a moment, use this command: &gt;<br><br>&nbsp;&nbsp; &nbsp;:set noscrollbind<br><br><br>JUMPING TO CHANGES<br><br>When you have disabled folding in some way, it may be difficult to find the<br>changes.&nbsp; Use this command to jump forward to the next change: &gt;<br><br>&nbsp;&nbsp; &nbsp;]c<br><br>To go the other way use: &gt;<br><br>&nbsp;&nbsp; &nbsp;[c<br><br>Prepended a count to jump further away.<br><br><br>REMOVING CHANGES<br><br>You can move text from one window to the other.&nbsp; This either removes<br>differences or adds new ones.&nbsp; Vim doesn't keep the highlighting updated in<br>all situations.&nbsp; To update it use this command: &gt;<br><br>&nbsp;&nbsp; &nbsp;:diffupdate<br><br>To remove a difference, you can move the text in a highlighted block from one<br>window to another.&nbsp; Take the "main.c" and "main.c~" example above.&nbsp; Move the<br>cursor to the left window, on the line that was deleted in the other window.<br>Now type this command: &gt;<br><br>&nbsp;&nbsp; &nbsp;dp<br><br>The change will be removed by putting the text of the current window in the<br>other window.&nbsp; "dp" stands for "diff put".<br>&nbsp;&nbsp; You can also do it the other way around.&nbsp; Move the cursor to the right<br>window, to the line where "changed" was inserted.&nbsp; Now type this command: &gt;<br><br>&nbsp;&nbsp; &nbsp;do<br><br>The change will now be removed by getting the text from the other window.<br>Since there are no changes left now, Vim puts all text in a closed fold.<br>"do" stands for "diff obtain".&nbsp; "dg" would have been better, but that already<br>has a different meaning ("dgg" deletes from the cursor until the first line).<br><br>For details about diff mode, see |vimdiff|.<br><br>==============================================================================<br>*08.8*&nbsp;&nbsp; &nbsp;Various<br><br>The 'laststatus' option can be used to specify when the last window has a<br>statusline:<br><br>&nbsp;&nbsp; &nbsp;0&nbsp;&nbsp; &nbsp;never<br>&nbsp;&nbsp; &nbsp;1&nbsp;&nbsp; &nbsp;only when there are split windows (the default)<br>&nbsp;&nbsp; &nbsp;2&nbsp;&nbsp; &nbsp;always<br><br>Many commands that edit another file have a variant that splits the window.<br>For Command-line commands this is done by prepending an "s".&nbsp; For example:<br>":tag" jumps to a tag, ":stag" splits the window and jumps to a<br>tag.<br>&nbsp;&nbsp; For Normal mode commands a CTRL-W is prepended.&nbsp; CTRL-^ jumps to the<br>alternate file, CTRL-W CTRL-^ splits the window and edits the alternate file.<br><br>The 'splitbelow' option can be set to make a new window appear below the<br>current window.&nbsp; The 'splitright' option can be set to make a vertically split<br>window appear right of the current window.<br><br>When splitting a window you can prepend a modifier command to tell where the<br>window is to appear:<br><br>&nbsp;&nbsp; &nbsp;:leftabove {cmd}&nbsp;&nbsp; &nbsp;left or above the current window<br>&nbsp;&nbsp; &nbsp;:aboveleft {cmd}&nbsp;&nbsp; &nbsp;idem<br>&nbsp;&nbsp; &nbsp;:rightbelow {cmd}&nbsp;&nbsp; &nbsp;right or below the current window<br>&nbsp;&nbsp; &nbsp;:belowright {cmd}&nbsp;&nbsp; &nbsp;idem<br>&nbsp;&nbsp; &nbsp;:topleft {cmd}&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;at the top or left of the Vim window<br>&nbsp;&nbsp; &nbsp;:botright {cmd}&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;at the bottom or right of the Vim window<br><br><br>==============================================================================<br>*08.9*&nbsp;&nbsp; &nbsp;Tab pages<br><br>You will have noticed that windows never overlap.&nbsp; That means you quickly run<br>out of screen space.&nbsp; The solution for this is called Tab pages.<br><br>Assume you are editing "thisfile".&nbsp; To create a new tab page use this command: &gt;<br><br>&nbsp;&nbsp; &nbsp;:tabedit thatfile<br><br>This will edit the file "thatfile" in a window that occupies the whole Vim<br>window.&nbsp; And you will notice a bar at the top with the two file names:<br><br>&nbsp;&nbsp; &nbsp;+----------------------------------+<br>&nbsp;&nbsp; &nbsp;| thisfile | /thatfile/ __________X|&nbsp;&nbsp;&nbsp; (thatfile is bold)<br>&nbsp;&nbsp; &nbsp;|/* thatfile */&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|that&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|that&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;+----------------------------------+<br><br>You now have two tab pages.&nbsp; The first one has a window for "thisfile" and the<br>second one a window for "thatfile".&nbsp; It's like two pages that are on top of<br>eachother, with a tab sticking out of each page showing the file name.<br><br>Now use the mouse to click on "thisfile" in the top line.&nbsp; The result is<br><br>&nbsp;&nbsp; &nbsp;+----------------------------------+<br>&nbsp;&nbsp; &nbsp;| /thisfile/ | thatfile __________X|&nbsp;&nbsp;&nbsp; (thisfile is bold)<br>&nbsp;&nbsp; &nbsp;|/* thisfile */&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|this&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|this&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;+----------------------------------+<br><br>Thus you can switch between tab pages by clicking on the label in the top<br>line.&nbsp; If you don't have a mouse or don't want to use it, you can use the "gt"<br>command.&nbsp; Mnemonic: Goto Tab.<br><br>Now let's create another tab page with the command: &gt;<br><br>&nbsp;&nbsp; &nbsp;:tab split<br><br>This makes a new tab page with one window that is editing the same buffer as<br>the window we were in:<br><br>&nbsp;&nbsp; &nbsp;+-------------------------------------+<br>&nbsp;&nbsp; &nbsp;| thisfile | /thisfile/ | thatfile __X|&nbsp;&nbsp; (thisfile is bold)<br>&nbsp;&nbsp; &nbsp;|/* thisfile */&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|this&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|this&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|~&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;|&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>&nbsp;&nbsp; &nbsp;+-------------------------------------+<br><br>You can put ":tab" before any Ex command that opens a window.&nbsp; The window will<br>be opened in a new tab page.&nbsp; Another example: &gt;<br><br>&nbsp;&nbsp; &nbsp;:tab help gt<br><br>Will show the help text for "gt" in a new tab page.<br><br>A few more things you can do with tab pages:<br><br>- click with the mouse in the space after the last label<br>&nbsp;&nbsp; &nbsp;The next tab page will be selected, like with "gt".<br><br>- click with the mouse on the "X" in the top right corner<br>&nbsp;&nbsp; &nbsp;The current tab page will be closed.&nbsp; Unless there are unsaved<br>&nbsp;&nbsp; &nbsp;changes in the current tab page.<br><br>- double click with the mouse in the top line<br>&nbsp;&nbsp; &nbsp;A new tab page will be created.<br><br>- the "tabonly" command<br>&nbsp;&nbsp; &nbsp;Closes all tab pages except the current one.&nbsp; Unless there are unsaved<br>&nbsp;&nbsp; &nbsp;changes in other tab pages.<br><br>For more information about tab pages see |tab-page|.<br><br>==============================================================================<br><br>Next chapter: |usr_09.txt|&nbsp; Using the GUI<br><br>Copyright: see |manual-copyright|&nbsp; vim:tw=78:ts=8:ft=help:norl:
</body></html>