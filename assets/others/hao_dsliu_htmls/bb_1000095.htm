<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf8"><title>163 blogs的博客：Why does the debugger show me the wrong function?</title>
<style type="text/css">
a{color: #000000;text-decoration : none;font-size: 10pt;}
a:hover {color: red;text-decoration : underline;}
.replyBox{padding:4px;border:1px solid #D8D8D8;}
</style></head><body><h2>Why does the debugger show me the wrong function?</h2>
<p align="right">发布时间：2012-12-7 13:52
<br>分类名称：Debug_Crack</p><br>
<p style="background: #ddddcc;"  ><span style="color:black; font-family:Verdana; font-size:13pt;"  >From:</span>   <span style="color:black; font-family:Verdana; font-size:13pt;"  >http://blogs.msdn.com/b/oldnewthing/archive/2005/03/22/400373.aspx </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:Verdana; font-size:13pt;"  >Often you'll be minding your own business debugging some code, and you decide to step into one function and the debugger shows that you're in some other function. How did that happen?  </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >class Class1 </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >{ </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >public: </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  > int *GetQ() { return q; } </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >private: </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  > int *p; </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  > int *q; </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >}; </span></p><p style="background: #ddddcc;"  > &nbsp;</p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >class Class2 </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >{ </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >public: </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  > virtual int GetValue() { return value; } </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >private: </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  > int value; </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >}; </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:Verdana; font-size:13pt;"  >You then step through code that does something like this:  </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >int Whatever(Class2 *p) </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >{ </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  > return p-&gt;GetValue(); </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >} </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-size:13pt;"  ><span style="font-family:Verdana;"  >And when you step into the call to </span><span style="font-family:Lucida Console;"  >p-&gt;GetValue()</span><span style="font-family:Verdana;"  > you find yourself in </span><span style="font-family:Lucida Console;"  >Class1::GetQ</span><span style="font-family:Verdana;"  >. What happened?  </span></span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:Verdana; font-size:13pt;"  >What happened is that the Microsoft linker combined functions that are identical <strong>at the code generation level</strong>.  </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >?GetQ@Class1@@QAEPAHXZ PROC NEAR    ; Class1::GetQ, COMDAT </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >  00000 8b 41 04         mov     eax, DWORD PTR [ecx+4] </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >  00003 c3               ret     0 </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >?GetQ@Class1@@QAEPAHXZ ENDP         ; Class1::GetQ </span></p><p style="background: #ddddcc;"  > &nbsp;</p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >?GetValue@Class2@@UAEHXZ PROC NEAR  ; Class2::GetValue, COMDAT </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >  00000 8b 41 04         mov     eax, DWORD PTR [ecx+4] </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >  00003 c3               ret     0 </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >?GetValue@Class2@@UAEHXZ ENDP       ; Class2::GetValue </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-size:13pt;"  ><span style="font-family:Verdana;"  >Observe that at the object code level, the two functions are identical. (Note that whether two functions are identical at the object code level is highly dependent on which version of what compiler you're using, and with which optimization flags. Identical code generation for different functions occurs with very high frequency when you use templates.) Therefore, the linker says, "Well, what's the point of having two identical functions? I'll just keep one copy and use it to stand for both </span><span style="font-family:Lucida Console;"  >Class1::GetQ</span><span style="font-family:Verdana;"  > and </span><span style="font-family:Lucida Console;"  >Class2::GetValue</span><span style="font-family:Verdana;"  >."  </span></span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >0:000&gt; u Class1::GetQ </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >010010d6 8b4104           mov     eax,[ecx+0x4] </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >010010d9 c3               ret </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >0:000&gt; u Class2::GetValue </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >010010d6 8b4104           mov     eax,[ecx+0x4] </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:宋体; font-size:12pt;"  >010010d9 c3               ret </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-size:13pt;"  ><span style="font-family:Verdana;"  >Notice that the two functions were merged: The addresses are identical. That one fragment of code merely goes by two names. Therefore, when the debugger sees that you've jumped to </span><span style="font-family:Lucida Console;"  >0x010010d6</span><span style="font-family:Verdana;"  >, it doesn't know which of the names it should use, so it just picks on.  </span></span></p><p style="background: #ddddcc;"  ><span style="color:black; font-family:Verdana; font-size:13pt;"  >That's why it looks like you jumped to the wrong function.  </span></p><p style="background: #ddddcc;"  ><span style="color:black; font-size:13pt;"  ><span style="font-family:Verdana;"  >To disable what is called "identical COMDAT folding", you can pass <a rel="nofollow" href="http://msdn.microsoft.com/library/en-us/vccore/html/_core_.2f.OPT.asp"  ><span style="color:#770000; text-decoration:underline;"  >the </span></a></span><span style="font-family:Lucida Console; text-decoration:underline;"  >/OPT:NOICF</span><span style="color:#770000; font-family:Verdana;"  ><span style="text-decoration:underline;"  > flag</span><span style="color:black;"  > to the linker.  </span></span></span></p>
</body></html>