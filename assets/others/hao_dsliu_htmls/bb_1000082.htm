<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf8"><title>163 blogs的博客：[转]驱动WDK7600在VC6.0下的编译开发配置环境</title>
<style type="text/css">
a{color: #000000;text-decoration : none;font-size: 10pt;}
a:hover {color: red;text-decoration : underline;}
.replyBox{padding:4px;border:1px solid #D8D8D8;}
</style></head><body><h2>[转]驱动WDK7600在VC6.0下的编译开发配置环境</h2>
<p align="right">发布时间：2013-6-16 14:18
<br>分类名称：Driver</p><br>
<P>From：<A rel="nofollow" href="http://blog.csdn.net/whatday/article/details/7090072"   >http://blog.csdn.net/whatday/article/details/7090072</A><WBR></P>
<P>开始之前要一定要明确一件事情，单独使用WDK+记事本就可以开发驱动，和VC的编译器耗无关系，而使用VC的唯一目的，就是把它当作超级记事本，这样可以省去自己维护Makefile的麻烦，并且拥有IDE的其他各种便捷。<BR>1.安装好VC6和DWK，先后顺序无关。<BR>&nbsp;&nbsp;&nbsp;&nbsp;从开始菜单找到WDK的程序目录，进入“Windows&nbsp;XP&nbsp;Checked&nbsp;Build&nbsp;Environment”，输入命令"build"，此时WDK将会把自己进行编译，大约需要1分钟。<BR>2.VC6设置Include/Lib/Executable目录。<BR>&nbsp;&nbsp;&nbsp;&nbsp;设置为自己需要编译的平台的各个目录即可,&nbsp;Include要确保找到ntddk.h等，Lib与Include对应，Executable&nbsp;要确保能找到cl.exe<BR>例如XP平台下设置为:<BR>include包含部分:<BR>C:\WinDDK\7600.16385.1\inc\ddk<BR>C:\WinDDK\7600.16385.1\inc\api<BR>C:\WinDDK\7600.16385.1\inc\crt<BR>lib连接库包含部分:<BR>C:\WINDDK\7600.16385.1\LIB\WXP\I386<BR>C:\WINDDK\7600.16385.1\LIB\WIN7\I386<BR>执行文件包含:<BR>C:\WINDDK\7600.16385.1\BIN<BR>C:\WINDDK\7600.16385.1\BIN\X86<BR>C:\WinDDK\7600.16385.1\bin\x86\x86<BR>对于VC原有的路径，Include&nbsp;和&nbsp;Lib建议都删除掉，而Executable则将你新加的置顶，顺序不能错。其余建议保留(虽然编译驱动不会使用VC的Bin目录下的ml.exe、link.exe&nbsp;等，但vc的代码提示等功能是需要bin目录下的一些程序来完成的，因此还是至少要保留VC原有的Bin目录，但必须在DDK的之后)。<BR>3.建立一个空工程，Exe或者Dll都可以，然后直接修改工程属性:<BR>要改的地方不少，描述各个选项还不如直接记录个文本的，清空C/C++和Link下面的Option文本框，按下面的填写。<BR>C/C++&nbsp;选项填写:<BR></P>
<P style="TEXT-INDENT: 2em;"   >/nologo&nbsp;/Gz&nbsp;/MLd&nbsp;/W3&nbsp;/WX&nbsp;/Z7&nbsp;/Od&nbsp;/D&nbsp;WIN32=100&nbsp;/D&nbsp;_X86_=1&nbsp;/D&nbsp;WINVER=0x500&nbsp;/D&nbsp;DBG=1<BR></P>
<P style="TEXT-INDENT: 2em;"   >/Fo"MyDriver_Check/"&nbsp;/Fd"MyDriver_Check/"&nbsp;/FD&nbsp;/c</P>
<P style="TEXT-INDENT: 2em;"   >如果是在程序中使用了 __try __except 链接的时候会报错 unresolved external symbol __except_handler4&nbsp;</P>
<P style="TEXT-INDENT: 2em;"   >所以在这里还要加上/GS- 参数 此参数可以参考帖子</P>
<P style="TEXT-INDENT: 2em;"   >http://topic.csdn.net/u/20111225/19/4d34fffb-f57c-4183-a07d-7169f661fb04.html<BR></P>
<P style="TEXT-INDENT: 2em;"   >最终写成：<BR></P>
<P style="TEXT-INDENT: 2em;"   >/nologo&nbsp;/Gz&nbsp;/MLd&nbsp;/W3&nbsp;/WX&nbsp;/Z7&nbsp;/Od&nbsp;/D&nbsp;WIN32=100&nbsp;/D&nbsp;_X86_=1&nbsp;/D&nbsp;WINVER=0x500&nbsp;/D&nbsp;DBG=1<BR></P>
<P style="TEXT-INDENT: 2em;"   >/Fo"MyDriver_Check/"&nbsp;/Fd"MyDriver_Check/"&nbsp;/FD&nbsp;/GS- /c</P><BR>LINK&nbsp;选项填写:<BR>&nbsp;&nbsp;&nbsp;&nbsp;NT式驱动为<BR>
<P style="TEXT-INDENT: 2em;"   >ntoskrnl.lib&nbsp;/nologo&nbsp;/base:"0x10000"&nbsp;/stack:0x400000,0x1000&nbsp;/entry:"DriverEntry"<BR></P>
<P style="TEXT-INDENT: 2em;"   >/subsystem:console&nbsp;/incremental:no&nbsp;/pdb:"MyDriver_Check/HelloDDK.pdb"&nbsp;/map:"MyDriver_Check/HelloDDK.map"&nbsp;/debug&nbsp;/machine:I386&nbsp;/nodefaultlib&nbsp;/out:"MyDriver_Check/HelloDDK.sys"</P>
<P style="TEXT-INDENT: 2em;"   >&nbsp;/subsystem:native&nbsp;/driver&nbsp;/SECTION:INIT,D&nbsp;/RELEASE&nbsp;/IGNORE:4078</P>
<P style="TEXT-INDENT: 2em;"   >在引用一些函数的时候 比如KeLowerIrql还应该把相应的库hal.lib 加入其中&nbsp;</P>
<P style="TEXT-INDENT: 2em;"   ></P>
<P style="TEXT-INDENT: 2em;"   >ntoskrnl.lib&nbsp;hal.lib /nologo&nbsp;/base:"0x10000"&nbsp;/stack:0x400000,0x1000&nbsp;/entry:"DriverEntry"<BR></P>
<P style="TEXT-INDENT: 2em;"   >/subsystem:console&nbsp;/incremental:no&nbsp;/pdb:"MyDriver_Check/HelloDDK.pdb"&nbsp;/map:"MyDriver_Check/HelloDDK.map"&nbsp;/debug&nbsp;/machine:I386&nbsp;/nodefaultlib&nbsp;/out:"MyDriver_Check/HelloDDK.sys"</P>
<P style="TEXT-INDENT: 2em;"   >&nbsp;/subsystem:native&nbsp;/driver&nbsp;/SECTION:INIT,D&nbsp;/RELEASE&nbsp;/IGNORE:4078</P><BR>
<P style="TEXT-INDENT: 2em;"   ><BR></P>&nbsp;&nbsp;&nbsp;&nbsp;WDM式驱动为<BR>
<P style="TEXT-INDENT: 2em;"   >wdm.lib&nbsp;/nologo&nbsp;/base:"0x10000"&nbsp;/stack:0x400000,0x1000&nbsp;/entry:"DriverEntry"&nbsp;/subsystem:console<BR></P>
<P style="TEXT-INDENT: 2em;"   >/incremental:no&nbsp;/pdb:"SYS_Check/HelloWDM.pdb"&nbsp;/debug&nbsp;/machine:I386&nbsp;/nodefaultlib<BR></P>
<P style="TEXT-INDENT: 2em;"   >/out:"SYS_Check/HelloWDM.sys" /subsystem:native&nbsp;/driver&nbsp;/SECTION:INIT,D&nbsp;/RELEASE&nbsp;/IGNORE:4078 <BR></P>
<P style="TEXT-INDENT: 2em;"   >当然也不是一成不变的这样设置 比如在WDM驱动中用到ObReferenceObjectByName的时候就应该 <BR></P>
<P style="TEXT-INDENT: 2em;"   >加上ntoskrnl.lib 因为ObReferenceObjectByName是ntoskrnl.exe的导出函数&nbsp; 所以最终变成</P>
<P style="TEXT-INDENT: 2em;"   ></P>
<P style="TEXT-INDENT: 2em;"   >wdm.lib&nbsp; ntoskrnl.lib /nologo&nbsp;/base:"0x10000"&nbsp;/stack:0x400000,0x1000&nbsp;/entry:"DriverEntry"&nbsp;/subsystem:console<BR></P>
<P style="TEXT-INDENT: 2em;"   >/incremental:no&nbsp;/pdb:"SYS_Check/HelloWDM.pdb"&nbsp;/debug&nbsp;/machine:I386&nbsp;/nodefaultlib<BR></P>/out:"SYS_Check/HelloWDM.sys" /subsystem:native&nbsp;/driver&nbsp;/SECTION:INIT,D&nbsp;/RELEASE&nbsp;/IGNORE:4078 <BR>4.保存配置，现在给这个空工程建一个c文件，复制以下内容：<BR>#include&nbsp;&lt;ntddk.h&gt;<BR>NTSTATUS&nbsp;DriverEntry(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IN&nbsp;PDRIVER_OBJECT&nbsp;DriverObject,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IN&nbsp;PUNICODE_STRING&nbsp;RegistryPath<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<BR>{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NTSTATUS&nbsp;status&nbsp;=&nbsp;STATUS_UNSUCCESSFUL;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;status;<BR>}&nbsp;&nbsp;&nbsp;<BR>编译通过则配置成功！！！
</body></html>