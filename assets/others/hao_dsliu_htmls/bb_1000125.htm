<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf8"><title>163 blogs的博客：【转】boost智能指针shared_ptr使用要注意的几个问题</title>
<style type="text/css">
a{color: #000000;text-decoration : none;font-size: 10pt;}
a:hover {color: red;text-decoration : underline;}
.replyBox{padding:4px;border:1px solid #D8D8D8;}
</style></head><body><h2>【转】boost智能指针shared_ptr使用要注意的几个问题</h2>
<p align="right">发布时间：2012-8-24 17:10
<br>分类名称：Boost</p><br>
<p>&nbsp; From：http://blog.csdn.net/hongjiqin/article/details/4406805</p><p><span style="font-family:宋体; font-size:12pt;"  >boost库中的shared_ptr是个好东西，一度我认为可以像C#那样使用对象，完全不用考虑内存的释放问题。不过使用起来发现还是有许多要注意的地方。<br>1. 重复析构<br>2. 循环引用 </span></p><p><span style="font-family:宋体; font-size:12pt;"  ><br>首先，绝对不可以像这样使用： </span></p><ol><li><span style="font-family:宋体; font-size:12pt;"  >int&nbsp;*p&nbsp;=&nbsp;new&nbsp;int&nbsp;(10);&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >boost::shared_ptr&lt;int&gt;&nbsp;sp1&nbsp;(p);&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >boost::shared_ptr&lt;int&gt;&nbsp;sp2&nbsp;(p);&nbsp;&nbsp; </span></li></ol><p>&nbsp; &nbsp;</p><p><span style="font-family:宋体; font-size:12pt;"  >这个看上去很简单，一般都不会这样犯错误。但如果在一个复杂的场景中呢？比如这样： </span></p><ol><li><span style="font-family:宋体; font-size:12pt;"  >class&nbsp;CListener&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >{&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >public:&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;virtual&nbsp;void&nbsp;TakeAction&nbsp;()&nbsp;=&nbsp;0;&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >};&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >class&nbsp;CPublisher&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >{&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >public:&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;CPublisher&nbsp;()&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;"CPublisher::CPublisher()"&nbsp;&lt;&lt;&nbsp;endl;&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;~CPublisher&nbsp;()&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;"CPublisher::~CPublisher()"&nbsp;&lt;&lt;&nbsp;endl;&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;SetListener&nbsp;(boost::shared_ptr&lt;CListener&gt;&nbsp;listener)&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_listener&nbsp;=&nbsp;listener;&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_listener-&gt;TakeAction&nbsp;();&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >private:&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;boost::shared_ptr&lt;CListener&gt;&nbsp;m_listener;&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >};&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >class&nbsp;CConcreteListener&nbsp;:&nbsp;public&nbsp;CListener&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >{&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >public:&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;CConcreteListener&nbsp;(const&nbsp;boost::shared_ptr&lt;CPublisher&gt;&nbsp;publiser)&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;"CConcreteListener::CConcreteListener&nbsp;()"&nbsp;&lt;&lt;&nbsp;endl;&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_publisher&nbsp;=&nbsp;publiser;&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_publisher-&gt;SetListener&nbsp;(boost::shared_ptr&lt;CListener&gt;&nbsp;(this));&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;~CConcreteListener&nbsp;()&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;"CConcreteListener::~CConcreteListener()"&nbsp;&lt;&lt;&nbsp;endl;&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;TakeAction&nbsp;()&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;"CConcreteListener::TakeAction()"&nbsp;&lt;&lt;&nbsp;endl;&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >private:&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;boost::shared_ptr&lt;CPublisher&gt;&nbsp;m_publisher;&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >};&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >void&nbsp;shared_ptr_test()&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >{&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;boost::shared_ptr&lt;CPublisher&gt;&nbsp;publisher1&nbsp;(new&nbsp;CPublisher);&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;boost::shared_ptr&lt;CConcreteListener&gt;&nbsp;concreteListener1&nbsp;(new&nbsp;CConcreteListener&nbsp;(publisher1));&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >}&nbsp;&nbsp; </span></li></ol><p><span style="font-family:宋体; font-size:12pt;"  ><br><br><br>在这里，我考虑设计一个简单的发布/定购的模式，为了简化内存管理，应用了shared_ptr。看上去好像没什么问题，<br>但实际并非如此，当shared_ptr_test()执行结束时会报错： </span></p><p><span style="font-family:宋体; font-size:12pt;"  >"Unhandled exception at ...: 0xC0000005: Access violation writing location 0xfeeefef2."<br><br>为什么？<br>这个错误太隐蔽了，问题出现在CConcreteListener的构造函数中。<br>这两行代码：<br>boost::shared_ptr&lt;CConcreteListener&gt; concreteListener1 (new CConcreteListener (publisher1));<br>和CConcreteListener构造函数中的<br>m_publisher-&gt;SetListener (boost::shared_ptr&lt;CListener&gt; (this));<br><br>如果展开用另一种方式看的话，相当于这样：<br>CConcreteListener *p1 = new CConcreteListener;<br>boost::shared_ptr&lt;CListener&gt; sp1 (p1);<br>publisher1-&gt;SetListener (sp1);<br>boost::shared_ptr&lt;CConcreteListener&gt; concreteListener1 (p1);<br><br>哦，看上去和上面那个例子犯了同样的错误，不过这里更隐蔽，更不容易发现。<br><br>那么我们改动一下，把<br>m_publisher-&gt;SetListener (boost::shared_ptr&lt;CListener&gt; (this));<br>从CConcreteListener的构造函数中移出去，然后在shared_ptr_test()中这样使用： </span></p><ol><li><span style="font-family:宋体; font-size:12pt;"  >CConcreteListener&nbsp;(const&nbsp;boost::shared_ptr&lt;CPublisher&gt;&nbsp;publiser)&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&nbsp;&lt;&lt;&nbsp;"CConcreteListener::CConcreteListener&nbsp;()"&nbsp;&lt;&lt;&nbsp;endl;&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_publisher&nbsp;=&nbsp;publiser;&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//m_publisher-&gt;SetListener&nbsp;(boost::shared_ptr&lt;CListener&gt;&nbsp;(this));&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >//......&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >void&nbsp;shared_ptr_test()&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >{&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;boost::shared_ptr&lt;CPublisher&gt;&nbsp;publisher1&nbsp;(new&nbsp;CPublisher);&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;boost::shared_ptr&lt;CConcreteListener&gt;&nbsp;concreteListener1&nbsp;(new&nbsp;CConcreteListener&nbsp;(publisher1));&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >&nbsp;&nbsp;&nbsp;&nbsp;publisher1-&gt;SetListener&nbsp;(concreteListener1);&nbsp;&nbsp; </span></li><li><span style="font-family:宋体; font-size:12pt;"  >}&nbsp;&nbsp; </span></li></ol><p><span style="font-family:宋体; font-size:12pt;"  ><br><br>也就是在外面显式调用SetListener，恩，这回上面那个问题消失了，程序不会崩溃了。<br>这回正确了？看看程序的输出把：<br>CPublisher::CPublisher()<br>CConcreteListener::CConcreteListener ()<br>CConcreteListener::TakeAction()<br><br>好像有点问题，shared_ptr_test()函数已经结束了，publisher1和concreteListener1都已经过了生命期，应该析构销毁了，<br>那他们内部的的CPublisher和CConcreteListener对象也应该被释放呀，但没看到这两个类的析构函数被调用。<br><br>如果跟踪函数的调用，会发现当publisher1和concreteListener1结束生命期析构后，内部的引用计数都是1，导致内部引用对象无法释放。<br>这是由于两个类CPublisher和CConcreteListener中存在循环引用。<br>由于shared_ptr是通过引用计数管理对象，他是无法处理循环引用的问题，导致有些对象永远无法从内存中释放。<br>所以，使用shared_ptr，还必须小心循环引用的问题。 </span></p>
</body></html>