<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf8"><title>163 blogs的博客：[转] Secure Template Overloads</title>
<style type="text/css">
a{color: #000000;text-decoration : none;font-size: 10pt;}
a:hover {color: red;text-decoration : underline;}
.replyBox{padding:4px;border:1px solid #D8D8D8;}
</style></head><body><h2>[转] Secure Template Overloads</h2>
<p align="right">发布时间：2013-5-6 20:13
<br>分类名称：Security Programming</p><br>
<p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   >From：<a style="font-family: Arial, Helvetica, sans-serif; font-size: 14px; line-height: 22px;" rel="nofollow" href="http://msdn.microsoft.com/en-us/library/ms175759.aspx"   >http://msdn.microsoft.com/en-us/library/ms175759.aspx</a></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   >Many CRT functions have been deprecated in favor of newer, security-enhanced versions (for example,&nbsp;<strong>strcpy_s</strong>&nbsp;is the more secure replacement for&nbsp;<strong>strcpy</strong>). The CRT provides template overloads to help ease the transition to the more secure variants.</p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   >For example, this code generates a warning because&nbsp;<strong>strcpy</strong>&nbsp;is deprecated:</p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><span style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);"   >char szBuf[10];</span></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><span style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);"   >strcpy(szBuf, "test"); // warning: deprecated</span></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   >You can ignore the warning. Define the symbol&nbsp;<strong>_CRT_SECURE_NO_WARNINGS</strong>&nbsp;to suppress the warning, or update the code to use&nbsp;<strong>strcpy_s</strong>:</p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><span style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);"   >char szBuf[10];</span></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><span style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);"   >strcpy_s(szBuf, 10, "test"); // security-enhanced _s function</span></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   >The template overloads provide additional choices. Defining&nbsp;<strong>_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES</strong>&nbsp;to 1 enables template overloads of standard CRT functions that call the more secure variants automatically. If<strong>_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES</strong>&nbsp;is 1, then no changes to the code are necessary. Behind the scenes, the call to&nbsp;<strong>strcpy</strong>&nbsp;will be changed to a call to&nbsp;<strong>strcpy_s</strong>&nbsp;with the size argument supplied automatically.</p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><span style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);"   >#define _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES 1</span></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><span style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);"   >...</span></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><span style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);"   >char szBuf[10];</span></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><span style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);"   >strcpy(szBuf, "test"); // ==&gt; strcpy_s(szBuf, 10, "test")</span></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><strong>_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES</strong>&nbsp;does not affect the functions that take a count, such as&nbsp;<strong>strncpy</strong>. To enable template overloads for the count functions, define&nbsp;<strong>_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT</strong>&nbsp;to 1. Before doing so, however, make sure that your code passes the count of characters, not the size of the buffer (a common mistake). Also, code that explicitly writes a null terminator at the end of the buffer after the function call is unnecessary if the secure variant is called. If you need truncation behavior, see&nbsp;<a style="text-decoration: none; color: rgb(3, 105, 122);" rel="nofollow" href="http://msdn.microsoft.com/en-us/library/ms175769.aspx"   >_TRUNCATE</a>.</p><div style="font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px; line-height: 11.333333015441895px;"   ><table style="border-collapse: collapse; padding: 0px; border: 1px solid rgb(187, 187, 187); width: 741.3333129882813px;"   ><tbody><tr><th align="left"   style="border: 1px solid rgb(187, 187, 187); margin: 10px; padding: 10px 11px 5px; background-color: rgb(237, 237, 237); color: rgb(112, 112, 112); border-collapse: collapse; border-spacing: 0px;"   ><img id="alert_note"   alt="Note"   src="pic/i.msdn.microsoft.com_areas_global_content_clear.gif"   title="Note"   xmlns=""   class="cl_IC101471"   style=" background-attachment: scroll; width: 16px; height: 14px; overflow: hidden; padding-right: 5px; background-position: -1152px -3px; background-repeat: no-repeat no-repeat;"   >&nbsp;<strong>Note</strong></th></tr><tr><td style="border: 1px solid rgb(187, 187, 187); margin: 10px; padding: 10px 8px; color: rgb(42, 42, 42); vertical-align: top;"   ><p style="margin-top: 0px; margin-bottom: 0px; line-height: 18px;"   >The macro&nbsp;<strong>_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT</strong>&nbsp;requires that<strong>_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES</strong>&nbsp;is also defined as 1. If<strong>_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT</strong>&nbsp;is defined as 1 and<strong>_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES</strong>&nbsp;is defined as 0, the application will not perform any template overloads.</p></td></tr></table></div><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   >Defining&nbsp;<strong>_CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES</strong>&nbsp;to 1 enables template overloads of the secure variants (names ending in "_s"). In this case, if&nbsp;<strong>_CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES</strong>&nbsp;is 1, then one small change must be made to the original code:</p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><span style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);"   >#define _CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES 1</span></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><span style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);"   >...</span></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><span style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);"   >char szBuf[10];</span></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><span style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);"   >strcpy_s(szBuf, "test"); // ==&gt; strcpy_s(szBuf, 10, "test")</span></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   >Only the name of the function needs to be changed (by adding "_s"); the template overload will take care of providing the size argument.</p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   >By default,&nbsp;<strong>_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES</strong>&nbsp;and<strong>_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT</strong>&nbsp;are defined as 0 (disabled) and<strong>_CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES</strong>&nbsp;is defined as 1 (enabled).</p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   >Note that these template overloads only work for static arrays. Dynamically allocated buffers require additional source code changes. Revisiting the above examples:</p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><span style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);"   >#define _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES 1</span></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><span style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);"   >...</span></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><span style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);"   >char *szBuf = (char*)malloc(10);</span></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><span style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);"   >strcpy(szBuf, "test"); // still deprecated; have to change to</span></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><span style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);"   >// strcpy_s(szBuf, 10, "test");</span></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   >And this:</p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><span style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);"   >#define _CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES 1</span></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><span style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);"   >...</span></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><span style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);"   >char *szBuf = (char*)malloc(10);</span></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><span style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);"   >strcpy_s(szBuf, "test"); // doesn't compile; have to change to</span></p><p style="color: rgb(42, 42, 42); margin-top: 0px; margin-bottom: 0px; padding-bottom: 15px; line-height: 18px; font-family: 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13.333333015441895px;"   ><span style="font-family: Consolas, Courier, monospace; color: rgb(0, 100, 0);"   >// strcpy_s(szBuf, 10, "test");</span></p><wbr>
</body></html>