<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf8"><title>163 blogs的博客：[转] (2) openssl 之简介</title>
<style type="text/css">
a{color: #000000;text-decoration : none;font-size: 10pt;}
a:hover {color: red;text-decoration : underline;}
.replyBox{padding:4px;border:1px solid #D8D8D8;}
</style></head><body><h2>[转] (2) openssl 之简介</h2>
<p align="right">发布时间：2010-4-2 17:03
<br>分类名称：OpenSSL</p><br>
<h2><span style="font-family: 宋体; font-weight: normal; line-height: 22px; font-size: 14px;">openssl是一个功能丰富且自包含的开源安全工具箱。它提供的主要功能有：SSL协议实现(包括SSLv2、SSLv3和TLSv1)、大量软算法(对称/非对称/摘要)、大数运算、非对称算法密钥生成、ASN.1编解码库、证书请求(PKCS10)编解码、数字证书编解码、CRL编解码、OCSP协议、数字证书验证、PKCS7标准实现和PKCS12个人数字证书格式实现等功能。</span></h2><p><span style="FONT-FAMILY: 宋体; COLOR: black;" lang="EN-US"></span></p><p>openssl采用C语言作为开发语言，这使得它具有优秀的跨平台性能。openssl支持Linux、UNIX、windows、Mac等平台。openssl目前最新的版本是0.9.8e.</p><p><br></p><p>openssl源代码</p><p>openssl源代码主要由eay库、ssl库、工具源码、范例源码以及测试源码组成。</p><p>eay库是基础的库函数，提供了很多功能。源代码放在crypto目录下。包括如下内容：</p><p>1） &nbsp;asn.1 DER编码解码(crypto/asn1目录)，它包含了基本asn1对象的编解码以及数字证书请求、数字证书、CRL撤销列表以及PKCS8等最基本的编解码函数。这些函数主要通过宏来实现。</p><p>2） &nbsp;抽象IO(BIO,crypto/bio目录)，本目录下的函数对各种输入输出进行抽象，包括文件、内存、标准输入输出、socket和SSL协议等。</p><p>3） &nbsp;大数运算(crypto/bn目录)，本目录下的文件实现了各种大数运算。这些大数运算主要用于非对称算法中密钥生成以及各种加解密操作。另外还为用户提供了大量辅助函数，比如内存与大数之间的相互转换。</p><p>4） &nbsp;字符缓存操作(crypto/buffer目录)。</p><p>5） &nbsp;配置文件读取(crypto/conf目录)，openssl主要的配置文件为openssl.cnf。本目录下的函数实现了对这种格式配置文件的读取操作。</p><p>6） &nbsp;DSO(动态共享对象,crypto/dso目录)，本目录下的文件主要抽象了各种平台的动态库加载函数，为用户提供统一接口。</p><p>7） &nbsp;硬件引擎(crypto/engine目录)，硬件引擎接口。用户如果要写自己的硬件引擎，必须实现它所规定的接口。</p><p>8） &nbsp;错误处理(crypto/err目录)，当程序出现错误时，openssl能以堆栈的形式显示各个错误。本目录下只有基本的错误处理接口，具体的的错误信息由各个模块提供。各个模块专门用于错误处理的文件一般为*_err..c文件。</p><p>9） &nbsp;对称算法、非对称算法及摘要算法封装(crypto/evp目录)。</p><p>10） &nbsp;HMAC(crypto/hmac目录)，实现了基于对称算法的MAC。</p><p>11） &nbsp;hash表(crypto/lhash目录)，实现了散列表数据结构。openssl中很多数据结构都是以散列表来存放的。比如配置信息、ssl session和asn.1对象信息等。</p><p>12） &nbsp;数字证书在线认证(crypto/ocsp目录)，实现了ocsp协议的编解码以及证书有效性计算等功能。</p><p>13） &nbsp;PEM文件格式处理(crypto/pem)，用于生成和读取各种PEM格式文件，包括各种密钥、数字证书请求、数字证书、PKCS7消息和PKCS8消息等。</p><p>14） &nbsp;pkcs7消息语法(crypto/pkcs7目录)，主要实现了构造和解析PKCS7消息；</p><p>15） &nbsp;pkcs12个人证书格式(crypto/pckcs12目录)，主要实现了pkcs12证书的构造和解析。</p><p>16） &nbsp;队列(crypto/pqueue目录)，实现了队列数据结构，主要用于DTLS。</p><p>17） &nbsp;随机数(crypto/rand目录)，实现了伪随机数生成，支持用户自定义随机数生成。</p><p>18） &nbsp;堆栈(crypto/stack目录)，实现了堆栈数据结构。</p><p>19） &nbsp;线程支持(crypto/threads)，openssl支持多线程，但是用户必须实现相关接口。</p><p>20） &nbsp;文本数据库(crypto/txt_db目录)。</p><p>21） &nbsp;x509数字证书(crypto/x509目录和crypto/x509v3)，包括数字证书申请、数字证书和CRL的构造、解析和签名验证等功能了；</p><p>22） &nbsp;对称算法(crypto/aes、crypto/bf、crypto/cast、ccrypto/omp和crypto/des等目录)。</p><p>23） &nbsp;非对称算法(crypto/dh、crypto/dsa、crypto/ec和crypto/ecdh)。</p><p>24） &nbsp;摘要算法(crypto/md2、crypto/md4、crypto/md5和crypto/sha)以及密钥交换/认证算法(crypto/dh 和crypto/krb5)。</p><p>ssl库所有源代码在ssl目录下，包括了sslv2、sslv3、tlsv1和DTLS的源代码。各个版本基本上都有客户端源码(*_clnt.c)、服务源码(*_srvr.c)、通用源码(*_both.c)、底层包源码（*_pkt.c）、方法源码(*_meth.c)以及协议相关的各种密钥计算源码(*_enc.c)等，都很有规律。</p><p>工具源码主要在crypto/apps目录下，默认编译时只编译成openssl(windows下为openssl.exe)可执行文件。该命令包含了各种命令工具。此目录下的各个源码可以单独进行编译。</p><p>范例源码在demo目录下，另外engines目录给出了openssl支持的几种硬件的engines源码，也可以作为engine编写参考。</p><p>测试源码主要在test目录下。</p><p></p>
</body></html>