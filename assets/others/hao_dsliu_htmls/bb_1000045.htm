<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf8"><title>163 blogs的博客：Boost - is_integral</title>
<style type="text/css">
a{color: #000000;text-decoration : none;font-size: 10pt;}
a:hover {color: red;text-decoration : underline;}
.replyBox{padding:4px;border:1px solid #D8D8D8;}
</style></head><body><h2>Boost - is_integral</h2>
<p align="right">发布时间：2014-6-1 19:19
<br>分类名称：Boost</p><br>
<p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >// </span><span style="font-family:宋体; background-color:white;"   >注释：所有的代码最好从下往上看，</span><span style="font-family:Courier New; background-color:white;"   >Boost</span><span style="font-family:宋体; background-color:white;"   >里面搞了一堆宏，如果手动替换，估计你过不了多久就崩溃了。</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >// </span><span style="font-family:宋体; background-color:white;"   >下面的代码利用</span><span style="font-family:Courier New; background-color:white;"   >VS</span><span style="font-family:宋体; background-color:white;"   >编译器的一个特性，将预编译信息生成了出来，这样宏就已经全部被替换为真实的模板</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >class<span style="color:black;"   > _Ty<span style="color:navy;"   ><strong>,</strong><span style="color:black;"   >
</span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;_Ty _Val<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > integral_constant
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >static<span style="color:black;"   >
<span style="color:#8000ff;"   >const<span style="color:black;"   > _Ty value <span style="color:navy;"   ><strong>=</strong><span style="color:black;"   > _Val<span style="color:navy;"   ><strong>;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></span></p><p>
&nbsp;</p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"   ><strong>typedef</strong><span style="color:black;"   > _Ty value_type<span style="color:navy;"   ><strong>;</strong><span style="color:black;"   >
</span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"   ><strong>typedef</strong><span style="color:black;"   > integral_constant<span style="color:navy;"   ><strong>&lt;</strong><span style="color:black;"   >_Ty<span style="color:navy;"   ><strong>,</strong><span style="color:black;"   > _Val<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   > type<span style="color:navy;"   ><strong>;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></span></span></span></p><p>
&nbsp;</p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"   ><strong>operator</strong><span style="color:black;"   > value_type<span style="color:navy;"   ><strong>()</strong><span style="color:black;"   >
<span style="color:#8000ff;"   >const<span style="color:black;"   >
</span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"   ><strong>return</strong><span style="color:black;"   >
<span style="color:navy;"   ><strong>(</strong><span style="color:black;"   >value<span style="color:navy;"   ><strong>);</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>}</strong><span style="color:black;"   >
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p>
&nbsp;</p><p><span style="color:blue; font-family:Courier New; font-size:10pt; background-color:white;"   ><strong>typedef</strong><span style="color:black;"   > integral_constant<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >bool<span style="color:navy;"   ><strong>,</strong><span style="color:black;"   >
<span style="color:blue;"   ><strong>true<span style="color:navy;"   >&gt;</span></strong><span style="color:black;"   > true_type<span style="color:navy;"   ><strong>;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></span></span></p><p><span style="color:blue; font-family:Courier New; font-size:10pt; background-color:white;"   ><strong>typedef</strong><span style="color:black;"   > integral_constant<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >bool<span style="color:navy;"   ><strong>,</strong><span style="color:black;"   >
<span style="color:blue;"   ><strong>false<span style="color:navy;"   >&gt;</span></strong><span style="color:black;"   > false_type<span style="color:navy;"   ><strong>;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></span></span></p><p>
&nbsp;</p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >// </span><span style="font-family:宋体; background-color:white;"   >定义模板，匹配特化不成功的，都落到了这里。类型为</span><span style="font-family:Courier New; background-color:white;"   >false_type
</span></span></p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >class<span style="color:black;"   > _Ty<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > _Is_integral
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>:</strong><span style="color:black;"   > false_type
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p>
&nbsp;</p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >// </span><span style="font-family:宋体; background-color:white;"   >模板</span><span style="font-family:Courier New; background-color:white;"   >bool</span><span style="font-family:宋体; background-color:white;"   >特化</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;&gt;</strong><span style="color:black;"   >
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > _Is_integral<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >bool<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>:</strong><span style="color:black;"   > true_type
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p>
&nbsp;</p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >// </span><span style="font-family:宋体; background-color:white;"   >模板</span><span style="font-family:Courier New; background-color:white;"   >char</span><span style="font-family:宋体; background-color:white;"   >特化</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;&gt;</strong><span style="color:black;"   >
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > _Is_integral<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >char<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>:</strong><span style="color:black;"   > true_type
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p>
&nbsp;</p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >// </span><span style="font-family:宋体; background-color:white;"   >模板</span><span style="font-family:Courier New; background-color:white;"   >unsigned char</span><span style="font-family:宋体; background-color:white;"   >特化</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;&gt;</strong><span style="color:black;"   >
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > _Is_integral<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >unsigned<span style="color:black;"   >
<span style="color:#8000ff;"   >char<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>:</strong><span style="color:black;"   > true_type
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p>
&nbsp;</p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >// </span><span style="font-family:宋体; background-color:white;"   >模板</span><span style="font-family:Courier New; background-color:white;"   >signed char</span><span style="font-family:宋体; background-color:white;"   >特化</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;&gt;</strong><span style="color:black;"   >
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > _Is_integral<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >signed<span style="color:black;"   >
<span style="color:#8000ff;"   >char<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>:</strong><span style="color:black;"   > true_type
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p>
&nbsp;</p><p> 
&nbsp;</p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;&gt;</strong><span style="color:black;"   >
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > _Is_integral<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >wchar_t<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>:</strong><span style="color:black;"   > true_type
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p> 
&nbsp;</p><p>
&nbsp;</p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;&gt;</strong><span style="color:black;"   >
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > _Is_integral<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >unsigned<span style="color:black;"   >
<span style="color:#8000ff;"   >short<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>:</strong><span style="color:black;"   > true_type
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p>
&nbsp;</p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;&gt;</strong><span style="color:black;"   >
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > _Is_integral<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >signed<span style="color:black;"   >
<span style="color:#8000ff;"   >short<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>:</strong><span style="color:black;"   > true_type
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p>
&nbsp;</p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;&gt;</strong><span style="color:black;"   >
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > _Is_integral<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >unsigned<span style="color:black;"   >
<span style="color:#8000ff;"   >int<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>:</strong><span style="color:black;"   > true_type
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p>
&nbsp;</p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;&gt;</strong><span style="color:black;"   >
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > _Is_integral<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >signed<span style="color:black;"   >
<span style="color:#8000ff;"   >int<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>:</strong><span style="color:black;"   > true_type
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p>
&nbsp;</p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;&gt;</strong><span style="color:black;"   >
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > _Is_integral<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >unsigned<span style="color:black;"   >
<span style="color:#8000ff;"   >long<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>:</strong><span style="color:black;"   > true_type
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p>
&nbsp;</p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;&gt;</strong><span style="color:black;"   >
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > _Is_integral<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >signed<span style="color:black;"   >
<span style="color:#8000ff;"   >long<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>:</strong><span style="color:black;"   > true_type
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p>
&nbsp;</p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;&gt;</strong><span style="color:black;"   >
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > _Is_integral<span style="color:navy;"   ><strong>&lt;</strong><span style="color:black;"   >__int64<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>:</strong><span style="color:black;"   > true_type
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p>
&nbsp;</p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;&gt;</strong><span style="color:black;"   >
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > _Is_integral<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >unsigned<span style="color:black;"   > __int64<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>:</strong><span style="color:black;"   > true_type
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></p><p><span style="color:black; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >
<span style="color:green;"   >// </span></span><span style="font-family:宋体; background-color:white;"   >定义</span><span style="color:green;"   ><span style="font-family:Courier New; background-color:white;"   >remove_const</span><span style="font-family:宋体; background-color:white;"   >模板，</span><span style="font-family:Courier New; background-color:white;"   >_Ty</span><span style="font-family:宋体; background-color:white;"   >为任何类型。</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></span></p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >class<span style="color:black;"   > _Ty<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > remove_const
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"   ><strong>typedef</strong><span style="color:black;"   > _Ty type<span style="color:navy;"   ><strong>;</strong><span style="color:black;"   >
</span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p>
&nbsp;</p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >// </span><span style="font-family:宋体; background-color:white;"   >特化</span><span style="font-family:Courier New; background-color:white;"   >remove_const</span><span style="font-family:宋体; background-color:white;"   >，针对</span><span style="font-family:Courier New; background-color:white;"   >const type</span><span style="font-family:宋体; background-color:white;"   >（如</span><span style="font-family:Courier New; background-color:white;"   > int</span><span style="font-family:宋体; background-color:white;"   >、</span><span style="font-family:Courier New; background-color:white;"   >long</span><span style="font-family:宋体; background-color:white;"   >，</span><span style="font-family:Courier New; background-color:white;"   >class ... ...)
</span></span></p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >// </span><span style="font-family:宋体; background-color:white;"   >例如一个</span><span style="font-family:Courier New; background-color:white;"   >const int </span><span style="font-family:宋体; background-color:white;"   >，</span><span style="font-family:Courier New; background-color:white;"   > _Ty </span><span style="font-family:宋体; background-color:white;"   >为</span><span style="font-family:Courier New; background-color:white;"   > const int</span><span style="font-family:宋体; background-color:white;"   >类型，</span><span style="font-family:Courier New; background-color:white;"   >type</span><span style="font-family:宋体; background-color:white;"   >就为</span><span style="font-family:Courier New; background-color:white;"   >int</span><span style="font-family:宋体; background-color:white;"   >类型。</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >// </span><span style="font-family:宋体; background-color:white;"   >这种编程很巧妙，通过特化，匹配不同的特化，通过</span><span style="font-family:Courier New; background-color:white;"   >type</span><span style="font-family:宋体; background-color:white;"   >将</span><span style="font-family:Courier New; background-color:white;"   >const</span><span style="font-family:宋体; background-color:white;"   >关键字去掉，返回。</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >class<span style="color:black;"   > _Ty<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > remove_const<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >const<span style="color:black;"   > _Ty<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"   ><strong>typedef</strong><span style="color:black;"   > _Ty type<span style="color:navy;"   ><strong>;</strong><span style="color:black;"   >
</span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p>
&nbsp;</p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >// </span><span style="font-family:宋体; background-color:white;"   >特化为指针？</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >class<span style="color:black;"   > _Ty<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > remove_const<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >const<span style="color:black;"   > _Ty<span style="color:navy;"   ><strong>[]&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"   ><strong>typedef</strong><span style="color:black;"   > _Ty type<span style="color:navy;"   ><strong>[];</strong><span style="color:black;"   >
</span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p>
&nbsp;</p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >// </span><span style="font-family:宋体; background-color:white;"   >特化为数组</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >class<span style="color:black;"   > _Ty<span style="color:navy;"   ><strong>,</strong><span style="color:black;"   >
<span style="color:#8000ff;"   >unsigned<span style="color:black;"   >
<span style="color:#8000ff;"   >int<span style="color:black;"   > _Nx<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > remove_const<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >const<span style="color:black;"   > _Ty<span style="color:navy;"   ><strong>[</strong><span style="color:black;"   >_Nx<span style="color:navy;"   ><strong>]&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"   ><strong>typedef</strong><span style="color:black;"   > _Ty type<span style="color:navy;"   ><strong>[</strong><span style="color:black;"   >_Nx<span style="color:navy;"   ><strong>];</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p>
&nbsp;</p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >// </span><span style="font-family:宋体; background-color:white;"   >定义</span><span style="font-family:Courier New; background-color:white;"   >remove_volatile</span><span style="font-family:宋体; background-color:white;"   >模板，</span><span style="font-family:Courier New; background-color:white;"   >_Ty</span><span style="font-family:宋体; background-color:white;"   >为任何类型。</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >class<span style="color:black;"   > _Ty<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > remove_volatile
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"   ><strong>typedef</strong><span style="color:black;"   > _Ty type<span style="color:navy;"   ><strong>;</strong><span style="color:black;"   >
</span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p>
&nbsp;</p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >// </span><span style="font-family:宋体; background-color:white;"   >特化</span><span style="font-family:Courier New; background-color:white;"   >remove_volatile</span><span style="font-family:宋体; background-color:white;"   >，针对</span><span style="font-family:Courier New; background-color:white;"   >volatile type</span><span style="font-family:宋体; background-color:white;"   >（如</span><span style="font-family:Courier New; background-color:white;"   > [const] int</span><span style="font-family:宋体; background-color:white;"   >、</span><span style="font-family:Courier New; background-color:white;"   >long</span><span style="font-family:宋体; background-color:white;"   >，</span><span style="font-family:Courier New; background-color:white;"   >class ... ...)
</span></span></p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >// </span><span style="font-family:宋体; background-color:white;"   >例如一个</span><span style="font-family:Courier New; background-color:white;"   >volatile const int </span><span style="font-family:宋体; background-color:white;"   >，</span><span style="font-family:Courier New; background-color:white;"   > _Ty </span><span style="font-family:宋体; background-color:white;"   >为</span><span style="font-family:Courier New; background-color:white;"   > const int</span><span style="font-family:宋体; background-color:white;"   >类型，</span><span style="font-family:Courier New; background-color:white;"   >type</span><span style="font-family:宋体; background-color:white;"   >就为</span><span style="font-family:Courier New; background-color:white;"   > const int</span><span style="font-family:宋体; background-color:white;"   >类型。</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >// </span><span style="font-family:宋体; background-color:white;"   >这种编程很巧妙，通过特化，匹配不同的特化，通过</span><span style="font-family:Courier New; background-color:white;"   >type</span><span style="font-family:宋体; background-color:white;"   >将</span><span style="font-family:Courier New; background-color:white;"   >volatile</span><span style="font-family:宋体; background-color:white;"   >关键字去掉，返回。</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >class<span style="color:black;"   > _Ty<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > remove_volatile<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >volatile<span style="color:black;"   > _Ty<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"   ><strong>typedef</strong><span style="color:black;"   > _Ty type<span style="color:navy;"   ><strong>;</strong><span style="color:black;"   >
</span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >// </span><span style="font-family:宋体; background-color:white;"   >特化为指针？</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >class<span style="color:black;"   > _Ty<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > remove_volatile<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >volatile<span style="color:black;"   > _Ty<span style="color:navy;"   ><strong>[]&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"   ><strong>typedef</strong><span style="color:black;"   > _Ty type<span style="color:navy;"   ><strong>[];</strong><span style="color:black;"   >
</span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >// </span><span style="font-family:宋体; background-color:white;"   >特化为数组</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >class<span style="color:black;"   > _Ty<span style="color:navy;"   ><strong>,</strong><span style="color:black;"   >
<span style="color:#8000ff;"   >unsigned<span style="color:black;"   >
<span style="color:#8000ff;"   >int<span style="color:black;"   > _Nx<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > remove_volatile<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >volatile<span style="color:black;"   > _Ty<span style="color:navy;"   ><strong>[</strong><span style="color:black;"   >_Nx<span style="color:navy;"   ><strong>]&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"   ><strong>typedef</strong><span style="color:black;"   > _Ty type<span style="color:navy;"   ><strong>[</strong><span style="color:black;"   >_Nx<span style="color:navy;"   ><strong>];</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p>
&nbsp;</p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >// </span><span style="font-family:宋体; background-color:white;"   >定义模板：</span><span style="font-family:Courier New; background-color:white;"   >remove_cv</span><span style="font-family:宋体; background-color:white;"   >，此模板什么也没做，就是通过</span><span style="font-family:Courier New; background-color:white;"   >typdef</span><span style="font-family:宋体; background-color:white;"   >向</span><span style="font-family:Courier New; background-color:white;"   >remove_volatile</span><span style="font-family:宋体; background-color:white;"   >和</span><span style="font-family:Courier New; background-color:white;"   >remove_const</span><span style="font-family:宋体; background-color:white;"   >传递信息。</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >class<span style="color:black;"   > _Ty<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > remove_cv
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >
</span></span></span></p><p><span style="color:black; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:green;"   >// </span></span><span style="font-family:宋体; background-color:white;"   >这个元函数传递可真复杂，传<span style="color:green;"   >递了两次。因为</span></span><span style="font-family:Courier New; background-color:white;"   >volatile</span><span style="color:green;"   ><span style="font-family:宋体; background-color:white;"   >是先于</span><span style="font-family:Courier New; background-color:white;"   >const</span><span style="font-family:宋体; background-color:white;"   >出现，所以先是</span><span style="font-family:Courier New; background-color:white;"   >typename remove_volatile&lt;_Ty&gt;::type</span><span style="font-family:宋体; background-color:white;"   >，</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></span></p><p><span style="color:black; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:green;"   >// </span></span><span style="font-family:宋体; background-color:white;"   >再是</span><span style="color:green; font-family:Courier New; background-color:white;"   >typename remove_const&lt;typename remove_volatile&lt;_Ty&gt;::type&gt;::type
</span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"   ><strong>typedef</strong><span style="color:black;"   >
<span style="color:#8000ff;"   >typename<span style="color:black;"   > remove_const<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >typename<span style="color:black;"   > remove_volatile<span style="color:navy;"   ><strong>&lt;</strong><span style="color:black;"   >_Ty<span style="color:navy;"   ><strong>&gt;::</strong><span style="color:black;"   >type<span style="color:navy;"   ><strong>&gt;::</strong><span style="color:black;"   >type
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type<span style="color:navy;"   ><strong>;</strong><span style="color:black;"   >
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p>
&nbsp;</p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >// is_integral </span><span style="font-family:宋体; background-color:white;"   >继承自</span><span style="font-family:Courier New; background-color:white;"   >_Is_integral</span><span style="font-family:宋体; background-color:white;"   >，</span><span style="font-family:Courier New; background-color:white;"   >_Is_integral</span><span style="font-family:宋体; background-color:white;"   >根据所有的整形类型做了特化（见上文代码），编译器会根据特化优先匹配，通过其继承的</span><span style="font-family:Courier New; background-color:white;"   >::value</span><span style="font-family:宋体; background-color:white;"   >返回</span><span style="font-family:Courier New; background-color:white;"   >true/false</span><span style="font-family:宋体; background-color:white;"   >。</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >// </span><span style="font-family:宋体; background-color:white;"   >但由于不同的类型前面还有修饰符，如：</span><span style="font-family:Courier New; background-color:white;"   >const</span><span style="font-family:宋体; background-color:white;"   >，</span><span style="font-family:Courier New; background-color:white;"   >volatile</span><span style="font-family:宋体; background-color:white;"   >等，所以，要先发现这些关键字，将其去掉，在和</span><span style="font-family:Courier New; background-color:white;"   >_Is_integral</span><span style="font-family:宋体; background-color:white;"   >的每个特化进行精确匹配。</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >template<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >class<span style="color:black;"   > _Ty<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#8000ff;"   >struct<span style="color:black;"   > is_integral
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>:</strong><span style="color:black;"   > _Is_integral<span style="color:navy;"   ><strong>&lt;</strong><span style="color:#8000ff;"   >typename<span style="color:black;"   > remove_cv<span style="color:navy;"   ><strong>&lt;</strong><span style="color:black;"   >_Ty<span style="color:navy;"   ><strong>&gt;::</strong><span style="color:black;"   >type<span style="color:navy;"   ><strong>&gt;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>{</strong><span style="color:black;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"   ><strong>};</strong><span style="color:black;"   >
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></p><p><span style="color:green; font-family:Courier New; font-size:10pt; background-color:white;"   >/*
</span></p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:宋体; background-color:white;"   >例如目前有个例子：</span><span style="font-family:Courier New; background-color:white;"   >assert(is_integral&lt;volatile const long&gt;::value);
</span></span></p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:宋体; background-color:white;"   >编译器如何解析？</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:宋体; background-color:white;"   >在</span><span style="font-family:Courier New; background-color:white;"   >remove_cv</span><span style="font-family:宋体; background-color:white;"   >中可以看到最里层的先是</span><span style="font-family:Courier New; background-color:white;"   >typename remove_volatile&lt;_Ty&gt;::type,</span><span style="font-family:宋体; background-color:white;"   >所以先使用解析配对，配对结果为其第一个特化，通过</span><span style="font-family:Courier New; background-color:white;"   >type</span><span style="font-family:宋体; background-color:white;"   >返回的结果为：</span><span style="font-family:Courier New; background-color:white;"   >const int</span><span style="font-family:宋体; background-color:white;"   >，成功将</span><span style="font-family:Courier New; background-color:white;"   >volatile</span><span style="font-family:宋体; background-color:white;"   >去掉。</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:宋体; background-color:white;"   >接着</span><span style="font-family:Courier New; background-color:white;"   >typename remove_const&lt;typename remove_volatile&lt;_Ty&gt;::type&gt;::type</span><span style="font-family:宋体; background-color:white;"   >，中，相当于：</span><span style="font-family:Courier New; background-color:white;"   >typename remove_const&lt;const int&gt;::type</span><span style="font-family:宋体; background-color:white;"   >，将</span><span style="font-family:Courier New; background-color:white;"   >const</span><span style="font-family:宋体; background-color:white;"   >去掉，</span><span style="font-family:Courier New; background-color:white;"   >type</span><span style="font-family:宋体; background-color:white;"   >返回的结果为：</span><span style="font-family:Courier New; background-color:white;"   >int</span><span style="font-family:宋体; background-color:white;"   >。</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:宋体; background-color:white;"   >这样：</span><span style="font-family:Courier New; background-color:white;"   >typename remove_cv&lt;volatile const int&gt;::type</span><span style="font-family:宋体; background-color:white;"   >，返回的就是</span><span style="font-family:Courier New; background-color:white;"   >int</span><span style="font-family:宋体; background-color:white;"   >。如果不做此处理，直接传入（</span><span style="font-family:Courier New; background-color:white;"   >volatile const int </span><span style="font-family:宋体; background-color:white;"   >给</span><span style="font-family:Courier New; background-color:white;"   >_Is_integral</span><span style="font-family:宋体; background-color:white;"   >，编译器发现没有特化能够匹配，使用默认模板匹配，</span><span style="font-family:Courier New; background-color:white;"   >value</span><span style="font-family:宋体; background-color:white;"   >为</span><span style="font-family:Courier New; background-color:white;"   >false</span><span style="font-family:宋体; background-color:white;"   >，</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:宋体; background-color:white;"   >但</span><span style="font-family:Courier New; background-color:white;"   >value</span><span style="font-family:宋体; background-color:white;"   >不应该是</span><span style="font-family:Courier New; background-color:white;"   >false</span><span style="font-family:宋体; background-color:white;"   >，所以匹配就出现问了。</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:green; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;
</span></p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:宋体; background-color:white;"   >问题：这一堆代码，会不是增加程序的大小？我测试了一下，不包含</span><span style="font-family:Courier New; background-color:white;"   >boost</span><span style="font-family:宋体; background-color:white;"   >头文件，单独的声明这一堆元函数，使用</span><span style="font-family:Courier New; background-color:white;"   >bool bInt = 1</span><span style="font-family:宋体; background-color:white;"   >；编译出来的结果是一致的。</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:green; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:宋体; background-color:white;"   >这一堆推到都是在编译的时候计算的，真正运行的时候，就是一个常量。编译时间变长，这倒是真的，因为越复杂的模板，编译器就要花费更多的时间来解析。</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></p><p><span style="color:green; font-family:Courier New; font-size:10pt; background-color:white;"   >*/<span style="color:black;"   >
</span></span></p><p><span style="color:#8000ff; font-family:Courier New; font-size:10pt; background-color:white;"   >int<span style="color:black;"   > _tmain<span style="color:navy;"   ><strong>(</strong><span style="color:#8000ff;"   >int<span style="color:black;"   > argc<span style="color:navy;"   ><strong>,</strong><span style="color:black;"   > _TCHAR<span style="color:navy;"   ><strong>*</strong><span style="color:black;"   > argv<span style="color:navy;"   ><strong>[])</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></span></span></span></p><p><span style="color:navy; font-family:Courier New; font-size:10pt; background-color:white;"   ><strong>{</strong><span style="color:black;"   >
</span></span></p><p><span style="color:black; font-size:10pt;"   ><span style="font-family:Courier New; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:green;"   >// </span></span><span style="font-family:宋体; background-color:white;"   >和使用</span><span style="color:green;"   ><span style="font-family:Courier New; background-color:white;"   >bool bInt = 1</span><span style="font-family:宋体; background-color:white;"   >；程序大小一样。</span><span style="font-family:Courier New; background-color:white;"   >
</span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;is_integral <span style="color:navy;"   ><strong>&lt;</strong><span style="color:black;"   >
<span style="color:#8000ff;"   >int<span style="color:black;"   >
<span style="color:navy;"   ><strong>&gt;::</strong><span style="color:black;"   >value_type bInt <span style="color:navy;"   ><strong>=</strong><span style="color:black;"   > is_integral <span style="color:navy;"   ><strong>&lt;</strong><span style="color:black;"   >
<span style="color:#8000ff;"   >int<span style="color:black;"   >
<span style="color:navy;"   ><strong>&gt;::</strong><span style="color:black;"   >value<span style="color:navy;"   ><strong>;</strong><span style="color:black;"   >
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:Courier New; font-size:10pt; background-color:white;"   >&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"   ><strong>return</strong><span style="color:black;"   >
<span style="color:#ff8000;"   >0<span style="color:navy;"   ><strong>;</strong><span style="color:black;"   >
</span></span></span></span></span></span></p><p><span style="color:navy; font-family:Courier New; font-size:10pt; background-color:white;"   ><strong>}</strong></span></p>
</body></html>