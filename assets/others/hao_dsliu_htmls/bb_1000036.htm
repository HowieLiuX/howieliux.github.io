<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf8"><title>163 blogs的博客：DuiLib 消息机制剖析</title>
<style type="text/css">
a{color: #000000;text-decoration : none;font-size: 10pt;}
a:hover {color: red;text-decoration : underline;}
.replyBox{padding:4px;border:1px solid #D8D8D8;}
</style></head><body><h2>DuiLib 消息机制剖析</h2>
<p align="right">发布时间：2014-7-13 13:06
<br>分类名称：默认分类</p><br>
<p><font face="宋体"     ><span style="font-size: 11.818181991577148px; line-height: 20px;"     ><b>有一篇新的：http://blog.163.com/hao_dsliu/blog/static/1315789082014101913351223/</b></span></font></p><p><span style="font-family:宋体; font-size:9pt;"     >其消息处理架构较为灵活，基本上在消息能过滤到的地方，都给出了扩展接口。
</span></p><p><span style="font-family:宋体; font-size:9pt;"     >看了DuiLib入门教程后，对消息机制的处理有些模糊，为了屏蔽Esc按键，都花了大半天的时间。究其原因，是因为对DuiLib消息过滤不了解。这篇教程，可能不适合刚刚接触DuiLib没两天的人看。至少你应该看过一些代码，但可能没看懂，那么这篇文章可能会给你指点迷津。
</span></p><p><span style="font-family:宋体; font-size:9pt;"     >Win32消息路由如下：
</span></p><ol><li><div style="text-align: justify;"     ><span style="font-family:宋体; font-size:9pt;"     >消息产生。
</span></div></li><li><div style="text-align: justify;"     ><span style="font-family:宋体; font-size:9pt;"     >系统将消息排列到其应该排放的线程消息队列中。
</span></div></li><li><div style="text-align: justify;"     ><span style="font-family:宋体; font-size:9pt;"     >线程中的消息循环调用GetMessage（or PeekMessage）获取消息。
</span></div></li><li><div style="text-align: justify;"     ><span style="font-family:宋体; font-size:9pt;"     >传送消息TranslateMessage and DispatchMessage to 窗口过程（Windows procedure）。
</span></div></li><li><div style="text-align: justify;"     ><span style="font-family:宋体; font-size:9pt;"     >在窗口过程里进行消息处理
</span></div></li></ol><p><span style="font-family:宋体; font-size:9pt;"     >我们看到消息经过几个步骤，DuiLib架构可以让你在某些步骤间进行消息过滤。首先，第1、2和3步骤，DuiLib并不关心。DuiLib对消息处理集中在CPaintManagerUI类中。DuiLib在发送窗口过程前后进行了消息过滤。
</span></p><p><span style="font-family:宋体; font-size:9pt;"     >DuiLib的消息渠，也就是所谓的消息循环在CPaintManagerUI::MessageLoop()或者CWindowWnd::ShowModal()中实现。俩套代码的核心基本一致，以MessageLoop为例：
</span></p><p><span style="font-family:宋体; font-size:9pt;"     ><span style="color:blue;"     ><span style="background-color:white;"     >void<span style="color:black;"     >
<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >MessageLoop<span style="color:black;"     >()<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#216f85;"     ><em>MSG</em><span style="color:black;"     >
<span style="color:navy;"     >msg<span style="color:black;"     > = { 0 };<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >while<span style="color:black;"     >( ::<span style="color:#880000;"     ><em>GetMessage</em><span style="color:black;"     >(&amp;<span style="color:navy;"     >msg<span style="color:black;"     >, <span style="color:#6f008a;"     ><em>NULL</em><span style="color:black;"     >, 0, 0) ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// <span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >TranslateMessage<span style="color:black;"     >进行消息过滤<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >if<span style="color:black;"     >( !<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >TranslateMessage<span style="color:black;"     >(&amp;<span style="color:navy;"     >msg<span style="color:black;"     >) ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;::<span style="color:#880000;"     >TranslateMessage<span style="color:black;"     >(&amp;<span style="color:navy;"     >msg<span style="color:black;"     >);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >try<span style="color:black;"     >{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;::<span style="color:#880000;"     ><em>DispatchMessage</em><span style="color:black;"     >(&amp;<span style="color:navy;"     >msg<span style="color:black;"     >);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <span style="color:blue;"     >catch<span style="color:black;"     >(...) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#6f008a;"     >DUITRACE<span style="color:black;"     >(<span style="color:#6f008a;"     ><em>_T</em><span style="color:black;"     >(<span style="color:#a31515;"     >"EXCEPTION: %s(%d)\n"<span style="color:black;"     >), <span style="color:#6f008a;"     >__FILET__<span style="color:black;"     >, <span style="color:#6f008a;"     >__LINE__<span style="color:black;"     >);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >#ifdef<span style="color:black;"     >
<span style="color:#6f008a;"     >_DEBUG<span style="color:black;"     ><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >throw<span style="color:black;"     >
<span style="color:#a31515;"     >"CPaintManagerUI::MessageLoop"<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >#endif<span style="color:black;"     ><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br></span>3和4之间，DuiLib调用<span style="color:#216f85;"     ><span style="background-color:white;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >TranslateMessage</span></span></span>做了过滤，类似</span>MFC的PreTranlateMessage。
</span></p><p><span style="font-family:宋体; font-size:9pt;"     >想象一下，如果不使用这套消息循环代码，我们如何能做到在消息发送到窗口过程前进行常规过滤（Hook等拦截技术除外）？答案肯定是做不到。因为那段循环代码你是无法控制的。<span style="color:#216f85;"     ><span style="background-color:white;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >TranslateMessage</span></span></span>将无法被调用，</span>所以，可以看到DuiLib中几乎所有的demo都调用了这俩个消息循环函数。下面是<span style="color:#880000; background-color:white;"     >TranslateMessage</span>代码：
</span></p><p><span style="font-family:宋体; font-size:9pt;"     ><span style="color:blue;"     ><span style="background-color:white;"     >bool<span style="color:black;"     >
<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >TranslateMessage<span style="color:black;"     >(<span style="color:blue;"     >const<span style="color:black;"     >
<span style="color:#216f85;"     ><em>LPMSG</em><span style="color:black;"     >
<span style="color:navy;"     >pMsg<span style="color:black;"     >)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:green;"     >// Pretranslate Message takes care of system-wide messages, such as<span style="color:black;"     ><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:green;"     >// tabbing and shortcut key-combos. We'll look for all messages for<span style="color:black;"     ><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:green;"     >// each window and any child control attached.<span style="color:black;"     ><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#216f85;"     ><em>UINT</em><span style="color:black;"     >
<span style="color:navy;"     >uStyle<span style="color:black;"     > = <span style="color:#6f008a;"     ><em>GetWindowStyle</em><span style="color:black;"     >(<span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:navy;"     ><em>hwnd</em><span style="color:black;"     >);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#216f85;"     ><em>UINT</em><span style="color:black;"     >
<span style="color:navy;"     >uChildRes<span style="color:black;"     > = <span style="color:navy;"     >uStyle<span style="color:black;"     > &amp; <span style="color:#6f008a;"     ><em>WS_CHILD</em><span style="color:black;"     >;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#216f85;"     ><em>LRESULT</em><span style="color:black;"     >
<span style="color:navy;"     >lRes<span style="color:black;"     > = 0;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >if<span style="color:black;"     > (<span style="color:navy;"     >uChildRes<span style="color:black;"     > != 0) // 判断子窗口还是父窗口<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#216f85;"     ><em>HWND</em><span style="color:black;"     >
<span style="color:navy;"     >hWndParent<span style="color:black;"     > = ::<span style="color:#880000;"     >GetParent<span style="color:black;"     >(<span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:navy;"     ><em>hwnd</em><span style="color:black;"     >);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >for<span style="color:black;"     >( <span style="color:blue;"     >int<span style="color:black;"     >
<span style="color:navy;"     >i<span style="color:black;"     > = 0; <span style="color:navy;"     >i<span style="color:black;"     > &lt; <span style="color:navy;"     >m_aPreMessages<span style="color:black;"     >.<span style="color:#880000;"     >GetSize<span style="color:black;"     >(); <span style="color:navy;"     >i<span style="color:black;"     >++ ) <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >* <span style="color:navy;"     >pT<span style="color:black;"     > = <span style="color:blue;"     >static_cast<span style="color:black;"     >&lt;<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >*&gt;(<span style="color:navy;"     >m_aPreMessages<span style="color:black;"     >[<span style="color:navy;"     >i<span style="color:black;"     >]);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#216f85;"     ><em>HWND</em><span style="color:black;"     >
<span style="color:navy;"     >hTempParent<span style="color:black;"     > = <span style="color:navy;"     >hWndParent<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >while<span style="color:black;"     >(<span style="color:navy;"     >hTempParent<span style="color:black;"     >)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >if<span style="color:black;"     >(<span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:navy;"     ><em>hwnd</em><span style="color:black;"     > == <span style="color:navy;"     >pT<span style="color:black;"     >-&gt;<span style="color:#880000;"     >GetPaintWindow<span style="color:black;"     >() || <span style="color:navy;"     >hTempParent<span style="color:black;"     > == <span style="color:navy;"     >pT<span style="color:black;"     >-&gt;<span style="color:#880000;"     >GetPaintWindow<span style="color:black;"     >())<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >if<span style="color:black;"     > (<span style="color:navy;"     >pT<span style="color:black;"     >-&gt;<span style="color:#880000;"     >TranslateAccelerator<span style="color:black;"     >(<span style="color:navy;"     >pMsg<span style="color:black;"     >))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >return<span style="color:black;"     >
<span style="color:blue;"     >true<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 这里进行消息过滤<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >if<span style="color:black;"     >( <span style="color:navy;"     >pT<span style="color:black;"     >-&gt;<span style="color:#880000;"     >PreMessageHandler<span style="color:black;"     >(<span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:#216f85;"     ><em>message</em><span style="color:black;"     >, <span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:navy;"     >wParam<span style="color:black;"     >, <span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:navy;"     >lParam<span style="color:black;"     >, <span style="color:navy;"     >lRes<span style="color:black;"     >) ) <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >return<span style="color:black;"     >
<span style="color:blue;"     >true<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >return<span style="color:black;"     >
<span style="color:blue;"     >false<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"     >hTempParent<span style="color:black;"     > = <span style="color:#880000;"     >GetParent<span style="color:black;"     >(<span style="color:navy;"     >hTempParent<span style="color:black;"     >);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >else<span style="color:black;"     ><br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >for<span style="color:black;"     >( <span style="color:blue;"     >int<span style="color:black;"     >
<span style="color:navy;"     >i<span style="color:black;"     > = 0; <span style="color:navy;"     >i<span style="color:black;"     > &lt; <span style="color:navy;"     >m_aPreMessages<span style="color:black;"     >.<span style="color:#880000;"     >GetSize<span style="color:black;"     >(); <span style="color:navy;"     >i<span style="color:black;"     >++ ) <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >* <span style="color:navy;"     >pT<span style="color:black;"     > = <span style="color:blue;"     >static_cast<span style="color:black;"     >&lt;<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >*&gt;(<span style="color:navy;"     >m_aPreMessages<span style="color:black;"     >[<span style="color:navy;"     >i<span style="color:black;"     >]);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >if<span style="color:black;"     >(<span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:navy;"     ><em>hwnd</em><span style="color:black;"     > == <span style="color:navy;"     >pT<span style="color:black;"     >-&gt;<span style="color:#880000;"     >GetPaintWindow<span style="color:black;"     >())<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >if<span style="color:black;"     > (<span style="color:navy;"     >pT<span style="color:black;"     >-&gt;<span style="color:#880000;"     >TranslateAccelerator<span style="color:black;"     >(<span style="color:navy;"     >pMsg<span style="color:black;"     >))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >return<span style="color:black;"     >
<span style="color:blue;"     >true<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >if<span style="color:black;"     >( <span style="color:navy;"     >pT<span style="color:black;"     >-&gt;<span style="color:#880000;"     >PreMessageHandler<span style="color:black;"     >(<span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:#216f85;"     ><em>message</em><span style="color:black;"     >, <span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:navy;"     >wParam<span style="color:black;"     >, <span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:navy;"     >lParam<span style="color:black;"     >, <span style="color:navy;"     >lRes<span style="color:black;"     >) ) <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >return<span style="color:black;"     >
<span style="color:blue;"     >true<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >return<span style="color:black;"     >
<span style="color:blue;"     >false<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >return<span style="color:black;"     >
<span style="color:blue;"     >false<span style="color:black;"     >;<br>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span style="background-color:white;"     >bool<span style="color:black;"     >
<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >PreMessageHandler<span style="color:black;"     >(<span style="color:#216f85;"     ><em>UINT</em><span style="color:black;"     >
<span style="color:navy;"     >uMsg<span style="color:black;"     >, <span style="color:#216f85;"     ><em>WPARAM</em><span style="color:black;"     >
<span style="color:navy;"     >wParam<span style="color:black;"     >, <span style="color:#216f85;"     ><em>LPARAM</em><span style="color:black;"     >
<span style="color:navy;"     >lParam<span style="color:black;"     >, <span style="color:#216f85;"     ><em>LRESULT</em><span style="color:black;"     >&amp; <span style="color:green;"     >/*lRes*/<span style="color:black;"     >)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >for<span style="color:black;"     >( <span style="color:blue;"     >int<span style="color:black;"     >
<span style="color:navy;"     >i<span style="color:black;"     > = 0; <span style="color:navy;"     >i<span style="color:black;"     > &lt; <span style="color:navy;"     >m_aPreMessageFilters<span style="color:black;"     >.<span style="color:#880000;"     >GetSize<span style="color:black;"     >(); <span style="color:navy;"     >i<span style="color:black;"     >++ ) <br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >bool<span style="color:black;"     >
<span style="color:navy;"     >bHandled<span style="color:black;"     > = <span style="color:blue;"     >false<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#216f85;"     ><em>LRESULT</em><span style="color:black;"     >
<span style="color:navy;"     >lResult<span style="color:black;"     > = <span style="color:blue;"     >static_cast<span style="color:black;"     >&lt;<span style="color:#216f85;"     >IMessageFilterUI<span style="color:black;"     >*&gt;(<span style="color:navy;"     >m_aPreMessageFilters<span style="color:black;"     >[<span style="color:navy;"     >i<span style="color:black;"     >])-&gt;<span style="color:#880000;"     >MessageHandler<span style="color:black;"     >(<span style="color:navy;"     >uMsg<span style="color:black;"     >, <span style="color:navy;"     >wParam<span style="color:black;"     >, <span style="color:navy;"     >lParam<span style="color:black;"     >, <span style="color:navy;"     >bHandled<span style="color:black;"     >); // 这里调用接口 <span style="color:#216f85;"     >IMessageFilterUI::<span style="color:#880000;"     >MessageHandler<span style="color:black;"     > 来进行消息过滤<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >if<span style="color:black;"     >( <span style="color:navy;"     >bHandled<span style="color:black;"     > ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >return<span style="color:black;"     >
<span style="color:blue;"     >true<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span style="color:black;"     ><span style="background-color:white;"     >…</span>… ……<br><span style="color:blue;"     ><span style="background-color:white;"     >return<span style="color:black;"     >
<span style="color:blue;"     >false<span style="color:black;"     >;</span></span></span></span><br><span style="color:black;"     >}<br></span>在发送到窗口过程前，有一个过滤接口：</span>IMessageFilterUI</span>，此接口只有一个成员：</span>MessageHandler，我们的窗口类要提前过滤消息，只要实现这个IMessageFilterUI，调用CPaintManagerUI:: AddPreMessageFilter，将我们的窗口类实例指针添加到<span style="color:navy;"     ><span style="background-color:white;"     >m_aPreMessageFilters array</span>
<span style="background-color:white;"     >中</span></span>。当消息到达窗口过程之前，就会会先调用我们的窗口类的成员函数：MessageHandler。
</span></p><p><span style="font-family:宋体; font-size:9pt;"     >下面是<span style="color:#880000; background-color:white;"     >AddPreMessageFilter</span>代码：
</span></p><p><span style="color:blue; font-family:宋体; font-size:9pt;"     ><span style="background-color:white;"     >bool<span style="color:black;"     >
<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >AddPreMessageFilter<span style="color:black;"     >(<span style="color:#216f85;"     >IMessageFilterUI<span style="color:black;"     >* <span style="color:navy;"     >pFilter<span style="color:black;"     >)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;// 将实现好的接口实例，保存到数组 <span style="color:navy;"     >m_aPreMessageFilters 中。<span style="color:black;"     ><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#6f008a;"     >ASSERT<span style="color:black;"     >(<span style="color:navy;"     >m_aPreMessageFilters<span style="color:black;"     >.<span style="color:#880000;"     >Find<span style="color:black;"     >(<span style="color:navy;"     >pFilter<span style="color:black;"     >)&lt;0);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >return<span style="color:black;"     >
<span style="color:navy;"     >m_aPreMessageFilters<span style="color:black;"     >.<span style="color:#880000;"     >Add<span style="color:black;"     >(<span style="color:navy;"     >pFilter<span style="color:black;"     >);<br>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span style="color:black;"     ><span style="background-color:white;"     >我们从函数<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >TranslateMessage<span style="color:black;"     >代码中能够看到，这个过滤是在大循环：</span></span></span></span></span>
</span></span></p><p><span style="color:blue; font-family:宋体; font-size:9pt;"     ><span style="background-color:white;"     >for<span style="color:black;"     >( <span style="color:blue;"     >int<span style="color:black;"     >
<span style="color:navy;"     >i<span style="color:black;"     > = 0; <span style="color:navy;"     >i<span style="color:black;"     > &lt; <span style="color:navy;"     >m_aPreMessages<span style="color:black;"     >.<span style="color:#880000;"     >GetSize<span style="color:black;"     >(); <span style="color:navy;"     >i<span style="color:black;"     >++ )</span></span></span></span></span></span></span></span></span></span></span></span></span></span>
</span></p><p><span style="color:black; font-family:宋体; font-size:9pt;"     ><span style="background-color:white;"     >中被调用的。如果<span style="color:navy;"     >m_aPreMessages.GetSize()为</span></span>0<span style="color:navy;"     ><span style="background-color:white;"     >，<span style="color:black;"     >也就不会调用过滤函数。从代码中追溯其定义：</span></span>
</span></span></p><p><span style="color:blue; font-family:宋体; font-size:9pt;"     ><span style="background-color:white;"     >static<span style="color:black;"     >
<span style="color:#216f85;"     >CStdPtrArray<span style="color:black;"     >
<span style="color:navy;"     >m_aPreMessages<span style="color:black;"     >;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span></span></span></span>
</span></p><p><span style="color:black; font-family:宋体; font-size:9pt;"     >是个静态变量，MessageLoop，TranslateMessage等也都是静态函数。其值在<span style="color:#216f85;"     ><span style="background-color:white;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >Init</span></span></span><span style="color:black;"     >中被初始化：
</span></span></span></p><p><span style="color:blue; font-family:宋体; font-size:9pt;"     ><span style="background-color:white;"     >void<span style="color:black;"     >
<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >Init<span style="color:black;"     >(<span style="color:#216f85;"     ><em>HWND</em><span style="color:black;"     >
<span style="color:navy;"     >hWnd<span style="color:black;"     >)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#6f008a;"     >ASSERT<span style="color:black;"     >(::<span style="color:#880000;"     ><em>IsWindow</em><span style="color:black;"     >(<span style="color:navy;"     >hWnd<span style="color:black;"     >));<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:green;"     >// Remember the window context we came from<span style="color:black;"     ><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"     >m_hWndPaint<span style="color:black;"     > = <span style="color:navy;"     >hWnd<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"     >m_hDcPaint<span style="color:black;"     > = ::<span style="color:#880000;"     >GetDC<span style="color:black;"     >(<span style="color:navy;"     >hWnd<span style="color:black;"     >);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:green;"     >// We'll want to filter messages globally too<span style="color:black;"     ><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"     >m_aPreMessages<span style="color:black;"     >.<span style="color:#880000;"     >Add<span style="color:black;"     >(<span style="color:blue;"     >this<span style="color:black;"     >);<br>}<br></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>看来，<span style="color:navy;"     ><span style="background-color:white;"     >m_aPreMessages</span><span style="color:black;"     >存储的类型为<span style="color:#216f85;"     ><span style="background-color:white;"     >CPaintManagerUI</span>* <span style="color:black;"     >,也就说，这个静态成员数组里，存储了当前进程中所有的<span style="color:#216f85;"     ><span style="background-color:white;"     >CPaintManagerUI</span><span style="color:black;"     >实例指针，所以，如果有多个<span style="color:#216f85;"     ><span style="background-color:white;"     >CPaintManagerUI</span><span style="color:black;"     >实例，也不会存在过滤问题，互不干扰，都能各自过滤。当然<span style="color:navy;"     ><span style="background-color:white;"     >m_aPreMessages<span style="color:black;"     >不止用在消息循环中，也有别的用处。我觉得这个名字起得有点诡异。</span></span>
</span></span></span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:宋体; font-size:9pt;"     ><span style="background-color:white;"     >然后再说，消息抵达窗口过程后，如何处理。首先，要清楚，窗口过程在哪儿？使用DuiLib开发，我们的窗口类无外呼，继承俩个基类：一个是功能简陋一点的：<span style="color:#216f85;"     >CWindowWnd<span style="color:black;"     >，一个是功能健全一点的：<span style="color:#216f85;"     >WindowImplBase（继承于CWindowWnd）<span style="color:black;"     >。然后，我们创建窗口先实例化窗口，然后带调用这俩个基类的Create函数，创建窗口，其内部注册了窗口过程：</span></span></span></span></span>
</span></p><p><span style="color:#216f85; font-family:宋体; font-size:9pt;"     ><span style="background-color:white;"     ><em>LRESULT</em><span style="color:black;"     >
<span style="color:#6f008a;"     ><em>CALLBACK</em><span style="color:black;"     >
<span style="color:#216f85;"     >CWindowWnd<span style="color:black;"     >::<span style="color:#880000;"     >__WndProc<span style="color:black;"     >(<span style="color:#216f85;"     ><em>HWND</em><span style="color:black;"     >
<span style="color:navy;"     >hWnd<span style="color:black;"     >, <span style="color:#216f85;"     ><em>UINT</em><span style="color:black;"     >
<span style="color:navy;"     >uMsg<span style="color:black;"     >, <span style="color:#216f85;"     ><em>WPARAM</em><span style="color:black;"     >
<span style="color:navy;"     >wParam<span style="color:black;"     >, <span style="color:#216f85;"     ><em>LPARAM</em><span style="color:black;"     >
<span style="color:navy;"     >lParam<span style="color:black;"     >)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#216f85;"     >CWindowWnd<span style="color:black;"     >* <span style="color:navy;"     >pThis<span style="color:black;"     > = <span style="color:#6f008a;"     ><em>NULL</em><span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >if<span style="color:black;"     >( <span style="color:navy;"     >uMsg<span style="color:black;"     > == <span style="color:#6f008a;"     ><em>WM_NCCREATE</em><span style="color:black;"     > ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#216f85;"     ><em>LPCREATESTRUCT</em><span style="color:black;"     >
<span style="color:navy;"     >lpcs<span style="color:black;"     > = <span style="color:blue;"     >reinterpret_cast<span style="color:black;"     >&lt;<span style="color:#216f85;"     ><em>LPCREATESTRUCT</em><span style="color:black;"     >&gt;(<span style="color:navy;"     >lParam<span style="color:black;"     >);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"     >pThis<span style="color:black;"     > = <span style="color:blue;"     >static_cast<span style="color:black;"     >&lt;<span style="color:#216f85;"     >CWindowWnd<span style="color:black;"     >*&gt;(<span style="color:navy;"     >lpcs<span style="color:black;"     >-&gt;<span style="color:navy;"     ><em>lpCreateParams</em><span style="color:black;"     >);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"     >pThis<span style="color:black;"     >-&gt;<span style="color:navy;"     >m_hWnd<span style="color:black;"     > = <span style="color:navy;"     >hWnd<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;::<span style="color:#6f008a;"     ><em>SetWindowLongPtr</em><span style="color:black;"     >(<span style="color:navy;"     >hWnd<span style="color:black;"     >, <span style="color:#6f008a;"     ><em>GWLP_USERDATA</em><span style="color:black;"     >, <span style="color:blue;"     >reinterpret_cast<span style="color:black;"     >&lt;<span style="color:#216f85;"     ><em>LPARAM</em><span style="color:black;"     >&gt;(<span style="color:navy;"     >pThis<span style="color:black;"     >));<br>&nbsp;&nbsp;&nbsp;&nbsp;} <br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >else<span style="color:black;"     > {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"     >pThis<span style="color:black;"     > = <span style="color:blue;"     >reinterpret_cast<span style="color:black;"     >&lt;<span style="color:#216f85;"     >CWindowWnd<span style="color:black;"     >*&gt;(::<span style="color:#6f008a;"     ><em>GetWindowLongPtr</em><span style="color:black;"     >(<span style="color:navy;"     >hWnd<span style="color:black;"     >, <span style="color:#6f008a;"     ><em>GWLP_USERDATA</em><span style="color:black;"     >));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >if<span style="color:black;"     >( <span style="color:navy;"     >uMsg<span style="color:black;"     > == <span style="color:#6f008a;"     ><em>WM_NCDESTROY</em><span style="color:black;"     > &amp;&amp; <span style="color:navy;"     >pThis<span style="color:black;"     > != <span style="color:#6f008a;"     ><em>NULL</em><span style="color:black;"     > ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#216f85;"     ><em>LRESULT</em><span style="color:black;"     >
<span style="color:navy;"     >lRes<span style="color:black;"     > = ::<span style="color:#880000;"     ><em>CallWindowProc</em><span style="color:black;"     >(<span style="color:navy;"     >pThis<span style="color:black;"     >-&gt;<span style="color:navy;"     >m_OldWndProc<span style="color:black;"     >, <span style="color:navy;"     >hWnd<span style="color:black;"     >, <span style="color:navy;"     >uMsg<span style="color:black;"     >, <span style="color:navy;"     >wParam<span style="color:black;"     >, <span style="color:navy;"     >lParam<span style="color:black;"     >);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;::<span style="color:#6f008a;"     ><em>SetWindowLongPtr</em><span style="color:black;"     >(<span style="color:navy;"     >pThis<span style="color:black;"     >-&gt;<span style="color:navy;"     >m_hWnd<span style="color:black;"     >, <span style="color:#6f008a;"     ><em>GWLP_USERDATA</em><span style="color:black;"     >, 0L);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >if<span style="color:black;"     >( <span style="color:navy;"     >pThis<span style="color:black;"     >-&gt;<span style="color:navy;"     >m_bSubclassed<span style="color:black;"     > ) <span style="color:navy;"     >pThis<span style="color:black;"     >-&gt;<span style="color:#880000;"     >Unsubclass<span style="color:black;"     >();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"     >pThis<span style="color:black;"     >-&gt;<span style="color:navy;"     >m_hWnd<span style="color:black;"     > = <span style="color:#6f008a;"     ><em>NULL</em><span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"     >pThis<span style="color:black;"     >-&gt;<span style="color:#880000;"     >OnFinalMessage<span style="color:black;"     >(<span style="color:navy;"     >hWnd<span style="color:black;"     >);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >return<span style="color:black;"     >
<span style="color:navy;"     >lRes<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >if<span style="color:black;"     >( <span style="color:navy;"     >pThis<span style="color:black;"     > != <span style="color:#6f008a;"     ><em>NULL</em><span style="color:black;"     > ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >return<span style="color:black;"     >
<span style="color:navy;"     >pThis<span style="color:black;"     >-&gt;<span style="color:#880000;"     >HandleMessage<span style="color:black;"     >(<span style="color:navy;"     >uMsg<span style="color:black;"     >, <span style="color:navy;"     >wParam<span style="color:black;"     >, <span style="color:navy;"     >lParam<span style="color:black;"     >);<br>&nbsp;&nbsp;&nbsp;&nbsp;} <br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >else<span style="color:black;"     > {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >return<span style="color:black;"     > ::<span style="color:#880000;"     ><em>DefWindowProc</em><span style="color:black;"     >(<span style="color:navy;"     >hWnd<span style="color:black;"     >, <span style="color:navy;"     >uMsg<span style="color:black;"     >, <span style="color:navy;"     >wParam<span style="color:black;"     >, <span style="color:navy;"     >lParam<span style="color:black;"     >);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span style="color:black; background-color:white;"     >里面，主要做了一些转换，细节自行研究，最终，他会调用pThis-&gt;HandleMessage(uMsg, wParam, lParam);。也即是说，HandleMessage相当于一个窗口过程（虽然它不是，但功能类似）。他是CWindowWnd的虚函数：
</span></span></p><p><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >virtual LRESULT HandleMessage(UINT uMsg, WPARAM wParam, LPARAM lParam);
</span></p><p><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >所以，如果我们的窗口类实现了HandleMessage，就相当于再次过滤了窗口过程，HandleMessage代码框架如下：
</span></p><p><span style="color:#216f85; font-family:宋体; font-size:9pt;"     ><span style="background-color:white;"     ><em>LRESULT</em><span style="color:black;"     >
<span style="color:#880000;"     >HandleMessage<span style="color:black;"     >(<span style="color:#216f85;"     ><em>UINT</em><span style="color:black;"     >
<span style="color:navy;"     >uMsg<span style="color:black;"     >, <span style="color:#216f85;"     ><em>WPARAM</em><span style="color:black;"     >
<span style="color:navy;"     >wParam<span style="color:black;"     >, <span style="color:#216f85;"     ><em>LPARAM</em><span style="color:black;"     >
<span style="color:navy;"     >lParam<span style="color:black;"     >)<br>{<br><span style="color:blue;"     >if<span style="color:black;"     >( <span style="color:navy;"     >uMsg<span style="color:black;"     > == <span style="color:#6f008a;"     ><em>WM_XXX</em><span style="color:black;"     > ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;… … <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >return<span style="color:black;"     > 0;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >else<span style="color:black;"     >
<span style="color:blue;"     >if<span style="color:black;"     >( <span style="color:navy;"     >uMsg<span style="color:black;"     > == <span style="color:#6f008a;"     ><em>WM_XXX</em><span style="color:black;"     >) {<br>&nbsp;&nbsp;&nbsp;&nbsp;… … <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >return<span style="color:black;"     > 1;<br>}<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#216f85;"     ><em>LRESULT</em><span style="color:black;"     >
<span style="color:navy;"     >lRes<span style="color:black;"     > = 0;<br><span style="color:blue;"     >if<span style="color:black;"     >( <span style="color:navy;"     >m_pm<span style="color:black;"     >.<span style="color:#880000;"     >MessageHandler<span style="color:black;"     >(<span style="color:navy;"     >uMsg<span style="color:black;"     >, <span style="color:navy;"     >wParam<span style="color:black;"     >, <span style="color:navy;"     >lParam<span style="color:black;"     >, <span style="color:navy;"     >lRes<span style="color:black;"     >) ) //<span style="color:#216f85;"     >CPaintManagerUI::<span style="color:#880000;"     >MessageHandler<span style="color:black;"     ><br><span style="color:blue;"     >return<span style="color:black;"     >
<span style="color:navy;"     >lRes<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >return<span style="color:black;"     >
<span style="color:#216f85;"     >CWindowWnd<span style="color:black;"     >::<span style="color:#880000;"     >HandleMessage<span style="color:black;"     >(<span style="color:navy;"     >uMsg<span style="color:black;"     >, <span style="color:navy;"     >wParam<span style="color:black;"     >, <span style="color:navy;"     >lParam<span style="color:black;"     >); // 调用父类<span style="color:#880000;"     >HandleMessage<span style="color:black;"     ><br>}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>
<span style="color:black;"     ><br><span style="background-color:white;"     >在注意：CPaintManagerUI::MessageHandler，他们的名称为MessageHandler，而不是HandleMessage。
</span></span></span></p><p><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >没有特殊需求，一定要调用此函数，此函数处理了绝大部分常用的消息响应。而且如果你要响应Notify事件，不调用此函数将无法响应，后面会介绍。
</span></p><p><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >好现在我们已经知道，俩个地方可以截获消息：
</span></p><ol><li><div style="text-align: justify;"     ><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >实现<span style="color:#216f85;"     >IMessageFilterUI<span style="color:black;"     >接口，调用<span style="color:#216f85;"     >CPaintManagerUI::<span style="color:#880000;"     > AddPreMessageFilter<span style="color:black;"     >，进行消息发送到窗口过程前的过滤。
</span></span></span></span></span></span></div></li><li><div style="text-align: justify;"     ><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >重载<span style="color:#880000;"     >HandleMessage<span style="color:black;"     >函数，当消息发送到窗口过程中时，最先进行过滤。
</span></span></span></div></li></ol><p><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >下面继续看看<span style="color:blue;"     >void<span style="color:black;"     >
<span style="color:#880000;"     >Notify<span style="color:black;"     >(<span style="color:#216f85;"     >TNotifyUI<span style="color:black;"     >&amp; <span style="color:navy;"     >msg<span style="color:black;"     >)是如何响应的。我们的窗口继承于<span style="color:#216f85;"     >INotifyUI接口<span style="color:black;"     >，就必须实现此函数：
</span></span></span></span></span></span></span></span></span></span></span></p><p><span style="color:blue; font-family:宋体; font-size:9pt; background-color:white;"     >class<span style="color:black;"     >
<span style="color:#216f85;"     >INotifyUI<span style="color:black;"     ><br>{<br><span style="color:blue;"     >public<span style="color:black;"     >:<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >virtual<span style="color:black;"     >
<span style="color:blue;"     >void<span style="color:black;"     >
<span style="color:#880000;"     >Notify<span style="color:black;"     >(<span style="color:#216f85;"     >TNotifyUI<span style="color:black;"     >&amp; <span style="color:navy;"     >msg<span style="color:black;"     >) = 0;<br>};<br>上面我说了，在我们的<span style="color:#880000;"     >HandleMessage<span style="color:black;"     >要调用CPaintManagerUI::MessageHandler来进行后续处理。下面是一个代码片段：<br><span style="color:blue;"     >bool<span style="color:black;"     >
<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >MessageHandler<span style="color:black;"     >(<span style="color:#216f85;"     ><em>UINT</em><span style="color:black;"     >
<span style="color:navy;"     >uMsg<span style="color:black;"     >, <span style="color:#216f85;"     ><em>WPARAM</em><span style="color:black;"     >
<span style="color:navy;"     >wParam<span style="color:black;"     >, <span style="color:#216f85;"     ><em>LPARAM</em><span style="color:black;"     >
<span style="color:navy;"     >lParam<span style="color:black;"     >, <span style="color:#216f85;"     ><em>LRESULT</em><span style="color:black;"     >&amp; <span style="color:navy;"     >lRes<span style="color:black;"     >)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;… …<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#216f85;"     >TNotifyUI<span style="color:black;"     >* <span style="color:navy;"     >pMsg<span style="color:black;"     > = <span style="color:#6f008a;"     ><em>NULL</em><span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >while<span style="color:black;"     >( <span style="color:navy;"     >pMsg<span style="color:black;"     > = <span style="color:blue;"     >static_cast<span style="color:black;"     >&lt;<span style="color:#216f85;"     >TNotifyUI<span style="color:black;"     >*&gt;(<span style="color:navy;"     >m_aAsyncNotify<span style="color:black;"     >.<span style="color:#880000;"     >GetAt<span style="color:black;"     >(0)) ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"     >m_aAsyncNotify<span style="color:black;"     >.<span style="color:#880000;"     >Remove<span style="color:black;"     >(0);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >if<span style="color:black;"     >( <span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:navy;"     >pSender<span style="color:black;"     > != <span style="color:#6f008a;"     ><em>NULL</em><span style="color:black;"     > ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >if<span style="color:black;"     >( <span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:navy;"     >pSender<span style="color:black;"     >-&gt;<span style="color:navy;"     >OnNotify<span style="color:black;"     > ) <span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:navy;"     >pSender<span style="color:black;"     >-&gt;<span style="color:navy;"     >OnNotify<span style="color:black;"     >(<span style="color:navy;"     >pMsg<span style="color:black;"     >);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 先看这里，其它代码先忽略；我们看到一个转换操作<span style="color:blue;"     >static_cast<span style="color:black;"     >&lt;<span style="color:#216f85;"     >INotifyUI<span style="color:black;"     >*&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >for<span style="color:black;"     >( <span style="color:blue;"     >int<span style="color:black;"     >
<span style="color:navy;"     >j<span style="color:black;"     > = 0; <span style="color:navy;"     >j<span style="color:black;"     > &lt; <span style="color:navy;"     >m_aNotifiers<span style="color:black;"     >.<span style="color:#880000;"     >GetSize<span style="color:black;"     >(); <span style="color:navy;"     >j<span style="color:black;"     >++ ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >static_cast<span style="color:black;"     >&lt;<span style="color:#216f85;"     >INotifyUI<span style="color:black;"     >*&gt;(<span style="color:navy;"     >m_aNotifiers<span style="color:black;"     >[<span style="color:navy;"     >j<span style="color:black;"     >])-&gt;<span style="color:#880000;"     >Notify<span style="color:black;"     >(*<span style="color:navy;"     >pMsg<span style="color:black;"     >);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >delete<span style="color:black;"     >
<span style="color:navy;"     >pMsg<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:green;"     >// Cycle through listeners<span style="color:black;"     ><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >for<span style="color:black;"     >( <span style="color:blue;"     >int<span style="color:black;"     >
<span style="color:navy;"     >i<span style="color:black;"     > = 0; <span style="color:navy;"     >i<span style="color:black;"     > &lt; <span style="color:navy;"     >m_aMessageFilters<span style="color:black;"     >.<span style="color:#880000;"     >GetSize<span style="color:black;"     >(); <span style="color:navy;"     >i<span style="color:black;"     >++ ) <br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >bool<span style="color:black;"     >
<span style="color:navy;"     >bHandled<span style="color:black;"     > = <span style="color:blue;"     >false<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#216f85;"     ><em>LRESULT</em><span style="color:black;"     >
<span style="color:navy;"     >lResult<span style="color:black;"     > = <span style="color:blue;"     >static_cast<span style="color:black;"     >&lt;<span style="color:#216f85;"     >IMessageFilterUI<span style="color:black;"     >*&gt;(<span style="color:navy;"     >m_aMessageFilters<span style="color:black;"     >[<span style="color:navy;"     >i<span style="color:black;"     >])-&gt;<span style="color:#880000;"     >MessageHandler<span style="color:black;"     >(<span style="color:navy;"     >uMsg<span style="color:black;"     >, <span style="color:navy;"     >wParam<span style="color:black;"     >, <span style="color:navy;"     >lParam<span style="color:black;"     >, <span style="color:navy;"     >bHandled<span style="color:black;"     >);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >if<span style="color:black;"     >( <span style="color:navy;"     >bHandled<span style="color:black;"     > ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"     >lRes<span style="color:black;"     > = <span style="color:navy;"     >lResult<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >return<span style="color:black;"     >
<span style="color:blue;"     >true<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br>… …<br>}<br>定义为<span style="color:#216f85;"     >CStdPtrArray<span style="color:black;"     >
<span style="color:navy;"     >m_aNotifiers<span style="color:black;"     >;数组，目前还看不出其指向的实际类型。看看，什么时候给该数组添加成员：<br><span style="color:blue;"     >bool<span style="color:black;"     >
<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >AddNotifier<span style="color:black;"     >(<span style="color:#216f85;"     >INotifyUI<span style="color:black;"     >* <span style="color:navy;"     >pNotifier<span style="color:black;"     >)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#6f008a;"     >ASSERT<span style="color:black;"     >(<span style="color:navy;"     >m_aNotifiers<span style="color:black;"     >.<span style="color:#880000;"     >Find<span style="color:black;"     >(pNotifier)&lt;0);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >return<span style="color:black;"     >
<span style="color:navy;"     >m_aNotifiers<span style="color:black;"     >.<span style="color:#880000;"     >Add<span style="color:black;"     >(pNotifier);<br>}<br>不错，正是<span style="color:#880000;"     >AddNotifier<span style="color:black;"     >，类型也有了：<span style="color:#216f85;"     >INotifyUI<span style="color:black;"     >。所以，入门教程里会在响应WM_CREATE消息的时候，调用<span style="color:#880000;"     >AddNotifier（this）<span style="color:black;"     >，将自身加入数组中，然后在<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >MessageHandler<span style="color:black;"     >就能枚举调用。由于AddNotifer的参数为<span style="color:#216f85;"     >INotifyUI*<span style="color:black;"     >，所以，我们要实现此接口。
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >所以，当HandleMessage函数被调用后，紧接着会调用我们的Notify函数。如果你没有对消息过滤的特殊需求，实现<span style="color:#216f85;"     >INotifyUI<span style="color:black;"     >即可，在Notify函数中处理消息响应。
</span></span></span></p><p><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >上面的Notify调用，是响应系统产生的消息。程序本身也能手动产生，其函数为：
</span></p><p><span style="color:blue; font-family:宋体; font-size:9pt; background-color:white;"     >void<span style="color:black;"     >
<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >SendNotify<span style="color:black;"     >(<span style="color:#216f85;"     >TNotifyUI<span style="color:black;"     >&amp; <span style="color:navy;"     >Msg<span style="color:black;"     >, <span style="color:blue;"     >bool<span style="color:black;"     >
<span style="color:navy;"     >bAsync<span style="color:black;"     >
<span style="color:green;"     >/*= false*/<span style="color:black;"     >)
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >DuiLib将发送的Notify消息分为了同步和异步消息。同步就是立即调用，异步就是先放到队列中，下次再处理。（类似PostMessage）。
</span></p><p><span style="color:blue; font-family:宋体; font-size:9pt; background-color:white;"     >void<span style="color:black;"     >
<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >SendNotify<span style="color:black;"     >(<span style="color:#216f85;"     >TNotifyUI<span style="color:black;"     >&amp; <span style="color:navy;"     >Msg<span style="color:black;"     >, <span style="color:blue;"     >bool<span style="color:black;"     >
<span style="color:navy;"     >bAsync<span style="color:black;"     >
<span style="color:green;"     >/*= false*/<span style="color:black;"     >)<br>{<br><span style="color:navy;"     >&nbsp;&nbsp;&nbsp;&nbsp;… …<span style="color:black;"     ><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >if<span style="color:black;"     >( !<span style="color:navy;"     >bAsync<span style="color:black;"     > ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:green;"     >// Send to all listeners<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 同步调用<span style="color:navy;"     >OnNotify，注意不是Notify<span style="color:black;"     ><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >if<span style="color:black;"     >( <span style="color:navy;"     >Msg<span style="color:black;"     >.<span style="color:navy;"     >pSender<span style="color:black;"     > != <span style="color:#6f008a;"     ><em>NULL</em><span style="color:black;"     > ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >if<span style="color:black;"     >( <span style="color:navy;"     >Msg<span style="color:black;"     >.<span style="color:navy;"     >pSender<span style="color:black;"     >-&gt;<span style="color:navy;"     >OnNotify<span style="color:black;"     > ) <span style="color:navy;"     >Msg<span style="color:black;"     >.<span style="color:navy;"     >pSender<span style="color:black;"     >-&gt;<span style="color:navy;"     >OnNotify<span style="color:black;"     >(&amp;<span style="color:navy;"     >Msg<span style="color:black;"     >);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 还会再次通知所有注册了<span style="color:#216f85;"     >INotifyUI的窗口。<span style="color:black;"     ><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >for<span style="color:black;"     >( <span style="color:blue;"     >int<span style="color:black;"     >
<span style="color:navy;"     >i<span style="color:black;"     > = 0; <span style="color:navy;"     >i<span style="color:black;"     > &lt; <span style="color:navy;"     >m_aNotifiers<span style="color:black;"     >.<span style="color:#880000;"     >GetSize<span style="color:black;"     >(); <span style="color:navy;"     >i<span style="color:black;"     >++ ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >static_cast<span style="color:black;"     >&lt;<span style="color:#216f85;"     >INotifyUI<span style="color:black;"     >*&gt;(<span style="color:navy;"     >m_aNotifiers<span style="color:black;"     >[<span style="color:navy;"     >i<span style="color:black;"     >])-&gt;<span style="color:#880000;"     >Notify<span style="color:black;"     >(<span style="color:navy;"     >Msg<span style="color:black;"     >);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br><span style="color:blue;"     >else<span style="color:black;"     > {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:green;"     >// 异步调用，添加到<span style="color:navy;"     >m_aAsyncNotify array中<span style="color:black;"     ><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#216f85;"     >TNotifyUI<span style="color:black;"     > *<span style="color:navy;"     >pMsg<span style="color:black;"     > = <span style="color:blue;"     >new<span style="color:black;"     >
<span style="color:#216f85;"     >TNotifyUI<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:navy;"     >pSender<span style="color:black;"     > = <span style="color:navy;"     >Msg<span style="color:black;"     >.<span style="color:navy;"     >pSender<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:navy;"     >sType<span style="color:black;"     > = <span style="color:navy;"     >Msg<span style="color:black;"     >.<span style="color:navy;"     >sType<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:navy;"     >wParam<span style="color:black;"     > = <span style="color:navy;"     >Msg<span style="color:black;"     >.<span style="color:navy;"     >wParam<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:navy;"     >lParam<span style="color:black;"     > = <span style="color:navy;"     >Msg<span style="color:black;"     >.<span style="color:navy;"     >lParam<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:navy;"     >ptMouse<span style="color:black;"     > = <span style="color:navy;"     >Msg<span style="color:black;"     >.<span style="color:navy;"     >ptMouse<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:navy;"     >dwTimestamp<span style="color:black;"     > = <span style="color:navy;"     >Msg<span style="color:black;"     >.<span style="color:navy;"     >dwTimestamp<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"     >m_aAsyncNotify<span style="color:black;"     >.<span style="color:#880000;"     >Add<span style="color:black;"     >(<span style="color:navy;"     >pMsg<span style="color:black;"     >);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br>我们<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >MessageHandler<span style="color:black;"     >在开始处发现一些代码：
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><span style="color:#216f85; font-family:宋体; font-size:9pt; background-color:white;"     >TNotifyUI<span style="color:black;"     >* <span style="color:navy;"     >pMsg<span style="color:black;"     > = <span style="color:#6f008a;"     ><em>NULL</em><span style="color:black;"     >;<br><span style="color:blue;"     >while<span style="color:black;"     >( <span style="color:navy;"     >pMsg<span style="color:black;"     > = <span style="color:blue;"     >static_cast<span style="color:black;"     >&lt;<span style="color:#216f85;"     >TNotifyUI<span style="color:black;"     >*&gt;(<span style="color:navy;"     >m_aAsyncNotify<span style="color:black;"     >.<span style="color:#880000;"     >GetAt<span style="color:black;"     >(0)) ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"     >m_aAsyncNotify<span style="color:black;"     >.<span style="color:#880000;"     >Remove<span style="color:black;"     >(0);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >if<span style="color:black;"     >( <span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:navy;"     >pSender<span style="color:black;"     > != <span style="color:#6f008a;"     ><em>NULL</em><span style="color:black;"     > ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >if<span style="color:black;"     >( <span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:navy;"     >pSender<span style="color:black;"     >-&gt;<span style="color:navy;"     >OnNotify<span style="color:black;"     > ) <span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:navy;"     >pSender<span style="color:black;"     >-&gt;<span style="color:navy;"     >OnNotify<span style="color:black;"     >(<span style="color:navy;"     >pMsg<span style="color:black;"     >);<br>}<br>可以看到<span style="color:#880000;"     >MessageHandler<span style="color:black;"     >首先从异步队列中一个消息并调用<span style="color:navy;"     >OnNotify。OnNotify和上面的Notify不一样哦。<span style="color:black;"     >
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><span style="color:navy; font-family:宋体; font-size:9pt; background-color:white;"     >OnNotify是响应消息的另外一种方式。它的定义为：
</span></p><p><span style="color:#216f85; font-family:宋体; font-size:9pt; background-color:white;"     >CEventSource<span style="color:black;"     >
<span style="color:navy;"     >OnNotify<span style="color:black;"     >;
</span></span></span></span></p><p><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >属于<span style="color:#216f85;"     >CControlUI类。重载了一些运算符，如 operator（）；<span style="color:black;"     >要让控件响应手动发送（<span style="color:#880000;"     >SendNotify<span style="color:black;"     >）的消息，就要给控件的<span style="color:navy;"     >OnNotify<span style="color:black;"     >，添加消息代理。在DuiLib的TestApp1中的<span style="color:#880000;"     >OnPrepare<span style="color:black;"     >函数里，有：
</span></span></span></span></span></span></span></span></span></p><p><span style="color:#216f85; font-family:宋体; font-size:9pt; background-color:white;"     >CSliderUI<span style="color:black;"     >* <span style="color:navy;"     >pSilder<span style="color:black;"     > = <span style="color:blue;"     >static_cast<span style="color:black;"     >&lt;<span style="color:#216f85;"     >CSliderUI<span style="color:black;"     >*&gt;(<span style="color:navy;"     >m_pm<span style="color:black;"     >.<span style="color:#880000;"     >FindControl<span style="color:black;"     >(<span style="color:#6f008a;"     ><em>_T</em><span style="color:black;"     >(<span style="color:#a31515;"     >"alpha_controlor"<span style="color:black;"     >)));<br><span style="color:blue;"     >if<span style="color:black;"     >( <span style="color:navy;"     >pSilder<span style="color:black;"     > ) <span style="color:navy;"     >pSilder<span style="color:black;"     >-&gt;<span style="color:navy;"     >OnNotify<span style="color:black;"     > += <span style="color:#880000;"     >MakeDelegate<span style="color:black;"     >(<span style="color:blue;"     >this<span style="color:black;"     >, &amp;<span style="color:#216f85;"     >CFrameWindowWnd<span style="color:black;"     >::<span style="color:#880000;"     >OnAlphaChanged<span style="color:black;"     >);<br>至于消息代码的代码，我就不展示了，这里简单说明，就是将类成员函数，作为回调函数，加入到<span style="color:navy;"     >OnNotify<span style="color:black;"     >中，然后调用<span style="color:navy;"     >pMsg<span style="color:black;"     >-&gt;<span style="color:navy;"     >pSender<span style="color:black;"     >-&gt;<span style="color:navy;"     >OnNotify<span style="color:black;"     >(<span style="color:navy;"     >pMsg<span style="color:black;"     >)的时候，循环调用所有的类函数，实现通知的效果。
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >这段代理代码处理的很巧妙，结婚多态和模板，能将任何类成员函数作为回调函数。
</span></p><p><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >查阅<span style="color:#216f85;"     >CSliderUI<span style="color:black;"     >代码，发现他在自身的<span style="color:#880000;"     >DoEvent<span style="color:black;"     >函数内调用了诸如：
</span></span></span></span></span></p><p><span style="color:navy; font-family:宋体; font-size:9pt; background-color:white;"     >m_pManager<span style="color:black;"     >-&gt;<span style="color:#880000;"     >SendNotify<span style="color:black;"     >(<span style="color:blue;"     >this<span style="color:black;"     >, <span style="color:#6f008a;"     >DUI_MSGTYPE_VALUECHANGED<span style="color:black;"     >);
</span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >类似的代码，调用它，我们就会得到通知。
</span></p><p><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >现在，又多了两种消息处理的方式：
</span></p><ol><li><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >实现<span style="color:#216f85;"     >INotifyUI<span style="color:black;"     >，调用<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >AddNotifier<span style="color:black;"     >，将自身加入Notifier队列。
</span></span></span></span></span></span></span></li><li><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >添加消息代理（其实就是将成员函数最为回到函数加入），<span style="color:#880000;"     >MakeDelegate<span style="color:black;"     >(<span style="color:blue;"     >this<span style="color:black;"     >, &amp;<span style="color:#216f85;"     >CFrameWindowWnd<span style="color:black;"     >::<span style="color:#880000;"     >OnAlphaChanged<span style="color:black;"     >);，当程序某个地方调用了<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >SendNotify<span style="color:black;"     >，并且<span style="color:navy;"     >Msg<span style="color:black;"     >.<span style="color:navy;"     >pSender<span style="color:black;"     >正好是this，我们的类成员回调函数将被调用。
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li></ol><p><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >搜寻<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >代码，我们发现还有一些消息过滤再里面：
</span></span></span></p><p><span style="color:blue; font-family:宋体; font-size:9pt; background-color:white;"     >bool<span style="color:black;"     >
<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >AddMessageFilter<span style="color:black;"     >(<span style="color:#216f85;"     >IMessageFilterUI<span style="color:black;"     >* <span style="color:navy;"     >pFilter<span style="color:black;"     >)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#6f008a;"     >ASSERT<span style="color:black;"     >(<span style="color:navy;"     >m_aMessageFilters<span style="color:black;"     >.<span style="color:#880000;"     >Find<span style="color:black;"     >(<span style="color:navy;"     >pFilter<span style="color:black;"     >)&lt;0);<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >return<span style="color:black;"     >
<span style="color:navy;"     >m_aMessageFilters<span style="color:black;"     >.<span style="color:#880000;"     >Add<span style="color:black;"     >(<span style="color:navy;"     >pFilter<span style="color:black;"     >);<br>}<br><span style="color:navy;"     >m_aMessageFilters也是<span style="color:#216f85;"     >IMessageFilterUI array，和<span style="color:navy;"     >m_aPreMessageFilters类似。<span style="color:black;"     >
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >上面我们介绍的是<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >AddPreMessageFilter<span style="color:black;"     >，那这个又是在哪儿做的过滤？
</span></span></span></span></span></p><p><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >还是<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >MessageHandler<span style="color:black;"     >中：
</span></span></span></span></span></p><p><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >……<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:green;"     >// Cycle through listeners<span style="color:black;"     ><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >for<span style="color:black;"     >( <span style="color:blue;"     >int<span style="color:black;"     >
<span style="color:navy;"     >i<span style="color:black;"     > = 0; <span style="color:navy;"     >i<span style="color:black;"     > &lt; <span style="color:navy;"     >m_aMessageFilters<span style="color:black;"     >.<span style="color:#880000;"     >GetSize<span style="color:black;"     >(); <span style="color:navy;"     >i<span style="color:black;"     >++ ) <br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >bool<span style="color:black;"     >
<span style="color:navy;"     >bHandled<span style="color:black;"     > = <span style="color:blue;"     >false<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#216f85;"     ><em>LRESULT</em><span style="color:black;"     >
<span style="color:navy;"     >lResult<span style="color:black;"     > = <span style="color:blue;"     >static_cast<span style="color:black;"     >&lt;<span style="color:#216f85;"     >IMessageFilterUI<span style="color:black;"     >*&gt;(<span style="color:navy;"     >m_aMessageFilters<span style="color:black;"     >[<span style="color:navy;"     >i<span style="color:black;"     >])-&gt;<span style="color:#880000;"     >MessageHandler<span style="color:black;"     >(<span style="color:navy;"     >uMsg<span style="color:black;"     >, <span style="color:navy;"     >wParam<span style="color:black;"     >, <span style="color:navy;"     >lParam<span style="color:black;"     >, <span style="color:navy;"     >bHandled<span style="color:black;"     >);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >if<span style="color:black;"     >( <span style="color:navy;"     >bHandled<span style="color:black;"     > ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:navy;"     >lRes<span style="color:black;"     > = <span style="color:navy;"     >lResult<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;"     >return<span style="color:black;"     >
<span style="color:blue;"     >true<span style="color:black;"     >;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>}<br>… …<br>这个片段是在，异步OnNotify和Nofity消息响应，被调用后。才被调用的，优先级也就是最低。但它始终会被调用，因为异步OnNotify和Nofity消息响应没有返回值，不会因为消息已经被处理，而直接退出。DuiLib再次给用户一个处理消息的机会。用户可以选择将<span style="color:navy;"     >bHandled<span style="color:black;"     >设置为True，从而终止消息继续传递。我觉得，这个通常是为了弥补OnNotify和Nofity没有返回值的问题，在<span style="color:navy;"     >m_aMessageFilters<span style="color:black;"     >做集中处理。
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><span style="color:black; font-family:宋体; font-size:9pt;"     >处理完所有的消息响应后，如果消息没有被截断，<span style="color:#216f85;"     ><span style="background-color:white;"     >CPaintManagerUI:</span>:<span style="color:#880000;"     ><span style="background-color:white;"     >MessageHandler<span style="color:black;"     >继续处理大多数默认的消息，它会处理在其管理范围中的所有控件的大多数消息和事件等。</span></span>
</span></span></span></p><p><span style="color:black; font-family:宋体; font-size:9pt;"     ><span style="background-color:white;"     >总结，DuiLib消息响应方式：</span>
</span></p><ol><li><div style="text-align: justify;"     ><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >实现<span style="color:#216f85;"     >IMessageFilterUI<span style="color:black;"     >接口，调用<span style="color:#216f85;"     >CPaintManagerUI::<span style="color:#880000;"     > AddPreMessageFilter<span style="color:black;"     >，进行消息发送到窗口过程前的过滤。
</span></span></span></span></span></span></div></li><li><div style="text-align: justify;"     ><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >重载<span style="color:#880000;"     >HandleMessage<span style="color:black;"     >函数，当消息发送到窗口过程中时，最先进行过滤。
</span></span></span></div></li><li><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >实现<span style="color:#216f85;"     >INotifyUI<span style="color:black;"     >，调用<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >AddNotifier<span style="color:black;"     >，将自身加入Notifier队列。
</span></span></span></span></span></span></span></li><li><span style="color:black; font-family:宋体; font-size:9pt; background-color:white;"     >添加消息代理（其实就是将成员函数最为回到函数加入），<span style="color:#880000;"     >MakeDelegate<span style="color:black;"     >(<span style="color:blue;"     >this<span style="color:black;"     >, &amp;<span style="color:#216f85;"     >CFrameWindowWnd<span style="color:black;"     >::<span style="color:#880000;"     >OnAlphaChanged<span style="color:black;"     >);，当程序某个地方调用了<span style="color:#216f85;"     >CPaintManagerUI<span style="color:black;"     >::<span style="color:#880000;"     >SendNotify<span style="color:black;"     >，并且<span style="color:navy;"     >Msg<span style="color:black;"     >.<span style="color:navy;"     >pSender<span style="color:black;"     >正好是this，我们的类成员回调函数将被调用。
</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li></ol><p><span style="color:black; font-family:宋体; font-size:9pt;"     >话说<span style="background-color:white;"     >DuiLib做界面，真是太方便了。我花了三天时间，从零开始学习，搞出了一个软键盘，发现逻辑上的代码量大大简化了。同样用MFC写，我的同事花了一周的时间，来调整布局和代码逻辑，里面写死了一堆要定位的坐标相关的值，如读天书一般，而且还很丑陋，再看看DuiLib做的软键盘，完全没有可比性。不过DuiLib的工具类如CDuiString等，会有一些</span>bug<span style="background-color:white;"     >。还是得继续完善。</span>
</span></p>
</body></html>