<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf8"><title>163 blogs的博客：[转]Windows中系统调用的流程</title>
<style type="text/css">
a{color: #000000;text-decoration : none;font-size: 10pt;}
a:hover {color: red;text-decoration : underline;}
.replyBox{padding:4px;border:1px solid #D8D8D8;}
</style></head><body><h2>[转]Windows中系统调用的流程</h2>
<p align="right">发布时间：2012-8-27 13:23
<br>分类名称：WRK</p><br>
<p><span style="font-size:12pt;"  >潘爱民，2010.9.24 </span></p><p><span style="font-size:12pt;"  >From:</span>   <a rel="nofollow" href="http://blog.csdn.net/panaimin/article/details/5903432"  ><span style="font-size:12pt;"  >http://blog.csdn.net/panaimin/article/details/5903432</span></a><span style="font-size:12pt;"  >   </span></p><p> &nbsp;</p><p><span style="font-size:12pt;"  >在《Windows内核原理与实现》一书，我曾经详细地解析了Windows应用程序发出的系统调用，经过ntdll.dll中的stub函数，再通过sysenter/syscall或int 2eh指令，调用到内核的完整过程。图8.5中有一个错误（感谢读者liucy指出这一错误），正确的图应该如下所示。<span style="font-family:宋体;"  >    </span></span></p><p><img title="[转]Windows中系统调用的流程 - Howie - Dspace"  src="pic/img4.ph.126.net_ko4mZBGjG2aP-8NGcSHWKA==_2563392612921736414.jpg"  alt=""  /><span style="font-family:宋体; font-size:12pt;"  >   </span></p><p><span style="font-size:12pt;"  >图中红色文字是改正之后的函数名称。这里实际上把通过sysenter或int 2eh两种情形的系统调用流程画在一起，所以显得较为复杂。如果拆开来，画成两个图，可能会更加容易理解。下面是按照sysenter/sysexit指令的系统调用流程：<span style="font-family:宋体;"  >    </span></span></p><p><img title="[转]Windows中系统调用的流程 - Howie - Dspace"  src="pic/img1.ph.126.net_jHhHAsDfXc7PIwGffMjhtw==_2499497793208414041.jpg"  alt=""  /><span style="font-family:宋体; font-size:12pt;"  >   </span></p><p><span style="font-size:12pt;"  >而按照int 2eh来进入内核的流程更加简单一些：<span style="font-family:宋体;"  >    </span></span></p><p><img title="[转]Windows中系统调用的流程 - Howie - Dspace"  src="pic/img7.ph.126.net_T5cHeF0xo1cC3FkvcFca8w==_2604206484544780567.jpg"  alt=""  /><span style="font-family:宋体; font-size:12pt;"  >   </span></p><p><span style="font-size:12pt;"  >无论是哪一种情形，对于ntdll.dll中的NtCreateFile或ntoskrnl.exe中的NtCreateFile函数，它们无 须关心系统调用是怎样发生的。<span style="font-family:宋体;"  >    </span></span></p><p><span style="font-size:12pt;"  >关于这两种情形下系统调用的详细穿透过程，请参考这本书的8.1.2节，这里不再进一步介绍。最后看一个系统调用栈:<span style="font-family:宋体;"  >    </span></span></p><p><span style="font-size:12pt;"  >f5484c94 808e3375 nt!IopCreateFile<br>f5484cf0 808e50ec nt!IoCreateFile<br>f5484d30 80882a2c <strong>nt!NtCreateFile</strong><br>007deed8 7c8211f4 <strong>ntdll!KiFastSystemCallRet</strong><br>007deedc 76cf2707 <strong>ntdll!ZwCreateFile</strong>+0xc<br>007def54 76cf276b iphlpapi!OpenTCPDriver+0xad<br>007def64 76cf278f iphlpapi!CheckTcpipState+0x62<br>007def98 76cf299a iphlpapi!GetIpStatsFromStack+0xd<br>007df00c 76cf32de iphlpapi!GetInterfaceInfo+0x38<br>007df028 76cf3230 iphlpapi!GetAdapterNameToIndexInfo+0x1e<br>007df060 76cf6a6b iphlpapi!GetAdapterInfo+0x18<br>007df0b4 4e7fdf36 iphlpapi!GetAdapterInfoEx+0x1c<br>007df504 4e7fe2f9 WINHTTP!CIpConfig::GetAdapterListOnNT5+0x6e<br>007dfac4 4e7fe938 WINHTTP!CIpConfig::GetAdapterList+0x58<br>...<span style="font-family:宋体;"  >    </span></span></p><p><span style="font-size:12pt;"  >注意，这里ntdll!ZwCreateFile的符号地址等同于ntdll!NtCreateFile。<span style="font-family:宋体;"  >    </span></span></p>
</body></html>