<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf8"><title>163 blogs的博客：Finding Memory Leaks Using the CRT Library</title>
<style type="text/css">
a{color: #000000;text-decoration : none;font-size: 10pt;}
a:hover {color: red;text-decoration : underline;}
.replyBox{padding:4px;border:1px solid #D8D8D8;}
</style></head><body><h2>Finding Memory Leaks Using the CRT Library</h2>
<p align="right">发布时间：2011-2-27 16:03
<br>分类名称：windows</p><br>
<P><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >Memory leaks, defined as the failure to correctly deallocate memory that was previously allocated, are among the most subtle and hard-to-detect bugs in C/C++ applications. A small memory leak might not be noticed at first, but over time, a progressive memory leak can cause symptoms that range from decreased performance to crashing when the application runs out of memory. Worse, a leaking application that uses up all available memory can cause another application to crash, creating confusion as to which application is responsible. Even seemingly harmless memory leaks might be symptomatic of other problems that should be corrected.</SPAN /></P />  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >The Visual Studio debugger and C Run-Time (CRT) libraries provide you with the means for detecting and identifying memory leaks.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan;"   align="left"  ><B><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: #3f529c; FONT-SIZE: 15.5pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >Enabling Memory Leak Detection</SPAN></B><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  ></SPAN></P>  <DIV style="TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan;"   align="center"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >  <HR style="COLOR: #e5e5e5;"   align="center"  SIZE="2"  width="100%"   noShade>  </SPAN></DIV>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >The primary tools for detecting memory leaks are the debugger and the C&nbsp;Run-Time Libraries (CRT) debug heap functions.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >To enable the debug heap functions, include the following statements in your program:</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><A  rel="nofollow"  ></A><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >#define _CRTDBG_MAP_ALLOC</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >#include &lt;stdlib.h&gt;</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >#include &lt;crtdbg.h&gt;</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >For the CRT functions to work correctly, the&nbsp;#include&nbsp;statements must follow the order shown here.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >Including crtdbg.h maps the&nbsp;<B>malloc</B>&nbsp;and the&nbsp;</SPAN><SPAN lang="EN-US"  ><A rel="nofollow" href="http://msdn.microsoft.com/en-us/library/we1whae7.aspx"   ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: #1364c4; FONT-SIZE: 10pt; TEXT-DECORATION: none; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt; text-underline: none;"   >free</SPAN></A></SPAN><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >&nbsp;functions to their debug versions,&nbsp;</SPAN><SPAN lang="EN-US"  ><A rel="nofollow" href="http://msdn.microsoft.com/en-us/library/faz3a37z.aspx"   ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: #1364c4; FONT-SIZE: 10pt; TEXT-DECORATION: none; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt; text-underline: none;"   >_malloc_dbg</SPAN></A></SPAN><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >&nbsp;and&nbsp;<B>free</B>, which track memory allocation and deallocation. This mapping occurs on<wbr>ly in debug builds, which have&nbsp;<B>_DEBUG</B>. Release builds use the ordinary&nbsp;<B>malloc</B>&nbsp;and&nbsp;<B>free</B>&nbsp;functions.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >The&nbsp;#define&nbsp;statement maps a base version of the CRT heap functions to the corresponding debug version. If you omit the&nbsp;#define&nbsp;statement, the memory leak dump will be less detailed.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >After you have enabled the debug heap functions by using these statements, you can place a call to&nbsp;<B>_CrtDumpMemoryLeaks</B>&nbsp;before an application exit point to display a memory-leak report when your application exits:</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><A  rel="nofollow"  ></A><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >_CrtDumpMemoryLeaks();</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >If your application has multiple exits, you do not need to manually place a call to&nbsp;</SPAN><SPAN lang="EN-US"  ><A rel="nofollow" href="http://msdn.microsoft.com/en-us/library/d41t22sb.aspx"   ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: #1364c4; FONT-SIZE: 10pt; TEXT-DECORATION: none; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt; text-underline: none;"   >_CrtDumpMemoryLeaks</SPAN></A></SPAN><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >&nbsp;at every exit point. A call to&nbsp;<B>_CrtSetDbgFlag</B>&nbsp;at the beginning of your application will cause an automatic call to&nbsp;<B>_CrtDumpMemoryLeaks</B>&nbsp;at each exit point. You must set the two bit fields shown here:</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><A  rel="nofollow"  ></A><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >_CrtSetDbgFlag ( _CRTDBG_ALLOC_MEM_DF | _CRTDBG_LEAK_CHECK_DF );</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >By default,&nbsp;<B>_CrtDumpMemoryLeaks</B>&nbsp;outputs the memory-leak report to the&nbsp;<B>Debug</B>&nbsp;pane of the&nbsp;<B>Output</B>&nbsp;window. You can use&nbsp;<B>_CrtSetReportMode</B>&nbsp;to redirect the report to another location.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >If you use a library, the library might reset the output to another location. In that case, you can set the output location back to the&nbsp;<B>Output</B>&nbsp;window, as shown here:</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><A  rel="nofollow"  ></A><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >_CrtSetReportMode( _CRT_ERROR, _CRTDBG_MODE_DEBUG );</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan;"   align="left"  ><B><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: #3f529c; FONT-SIZE: 15.5pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >Interpreting the Memory-Leak Report</SPAN></B><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  ></SPAN></P>  <DIV style="TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan;"   align="center"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >  <HR style="COLOR: #e5e5e5;"   align="center"  SIZE="2"  width="100%"   noShade>  </SPAN></DIV>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >If your application does not define&nbsp;_CRTDBG_MAP_ALLOC,&nbsp;</SPAN><SPAN lang="EN-US"  ><A rel="nofollow" href="http://msdn.microsoft.com/en-us/library/d41t22sb.aspx"   ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: #1364c4; FONT-SIZE: 10pt; TEXT-DECORATION: none; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt; text-underline: none;"   >_CrtDumpMemoryLeaks</SPAN></A></SPAN><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >&nbsp;displays a memory-leak report that looks like this:</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><A  rel="nofollow"  ></A><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >Detected memory leaks!</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >Dumping objects -&gt;</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >{18} normal block at 0x00780E80, 64 bytes long.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  ><SPAN style="mso-spacerun: yes;"   >&nbsp;</SPAN>Da<wbr>ta: &lt;<SPAN style="mso-spacerun: yes;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>&gt; CD CD CD CD CD CD CD CD CD CD CD CD CD CD CD CD</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >Object dump complete.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >If your application defines&nbsp;_CRTDBG_MAP_ALLOC, the memory-leak report looks like this:</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><A  rel="nofollow"  ></A><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >Detected memory leaks!</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >Dumping objects -&gt;</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >C:\PROGRAM FILES\VISUAL STUDIO\MyProjects\leaktest\leaktest.cpp(20) : {18} </SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >normal block at 0x00780E80, 64 bytes long.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  ><SPAN style="mso-spacerun: yes;"   >&nbsp;</SPAN>Da<wbr>ta: &lt;<SPAN style="mso-spacerun: yes;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>&gt; CD CD CD CD CD CD CD CD CD CD CD CD CD CD CD CD</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >Object dump complete.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >The difference is that the second report shows name of the file and the line number where the leaked memory is first allocated.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >Whether you define&nbsp;_CRTDBG_MAP_ALLOC&nbsp;or not, the memory-leak report will display the following information:</SPAN></P>  <P style="TEXT-ALIGN: left; TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 30pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; tab-stops: list 36.0pt; mso-list: l1 level1 lfo1;"   align="left"  ><SPAN style="FONT-FAMILY: Symbol; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; mso-font-kerning: 0pt;"   lang="EN-US"  ><SPAN style="mso-list: Ignore;"   >·<SPAN style="FONT: 7pt 'Times New Roman';"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >The memory allocation number, which is&nbsp;18&nbsp;in this example</SPAN></P>  <P style="TEXT-ALIGN: left; TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 30pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; tab-stops: list 36.0pt; mso-list: l1 level1 lfo1;"   align="left"  ><SPAN style="FONT-FAMILY: Symbol; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; mso-font-kerning: 0pt;"   lang="EN-US"  ><SPAN style="mso-list: Ignore;"   >·<SPAN style="FONT: 7pt 'Times New Roman';"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >The&nbsp;</SPAN><SPAN lang="EN-US"  ><A rel="nofollow" href="http://msdn.microsoft.com/en-us/library/htdyz80k.aspx"   ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: #1364c4; FONT-SIZE: 10pt; TEXT-DECORATION: none; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt; text-underline: none;"   >block type</SPAN></A></SPAN><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >, which is&nbsp;normal&nbsp;in this example.</SPAN></P>  <P style="TEXT-ALIGN: left; TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 30pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; tab-stops: list 36.0pt; mso-list: l1 level1 lfo1;"   align="left"  ><SPAN style="FONT-FAMILY: Symbol; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; mso-font-kerning: 0pt;"   lang="EN-US"  ><SPAN style="mso-list: Ignore;"   >·<SPAN style="FONT: 7pt 'Times New Roman';"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >The hexadecimal memory location, which is&nbsp;0x00780E80&nbsp;in this example.</SPAN></P>  <P style="TEXT-ALIGN: left; TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 30pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; tab-stops: list 36.0pt; mso-list: l1 level1 lfo1;"   align="left"  ><SPAN style="FONT-FAMILY: Symbol; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; mso-font-kerning: 0pt;"   lang="EN-US"  ><SPAN style="mso-list: Ignore;"   >·<SPAN style="FONT: 7pt 'Times New Roman';"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >The size of the block,&nbsp;64 bytes&nbsp;in this example.</SPAN></P>  <P style="TEXT-ALIGN: left; TEXT-INDENT: -18pt; MARGIN: 0cm 0cm 0pt 30pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; tab-stops: list 36.0pt; mso-list: l1 level1 lfo1;"   align="left"  ><SPAN style="FONT-FAMILY: Symbol; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol; mso-font-kerning: 0pt;"   lang="EN-US"  ><SPAN style="mso-list: Ignore;"   >·<SPAN style="FONT: 7pt 'Times New Roman';"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >The first 16 bytes of da<wbr>ta in the block, in hexadecimal form.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >The memory-leak report identifies a block of memory as normal, client, or CRT. A&nbsp;normal block&nbsp;is ordinary memory allocated by your program. A&nbsp;client block&nbsp;is a special type of memory block used by MFC programs for objects that require a destructor. The MFC&nbsp;new&nbsp;operator creates either a normal block or a client block, as appropriate for the object being created. A&nbsp;CRT block&nbsp;is allocated by the CRT library for its own use. The CRT library handles the deallocation for these blocks. Therefore, it is unlikely you will see these in the memory leak report unless something is significantly wrong, for example, the CRT library is corrupted.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >There are two other types of memory blocks that never appear in memory-leak reports. A&nbsp;free block&nbsp;is memory that has been released. That means it is not leaked, by definition. An&nbsp;ignore block&nbsp;is memory that you have explicitly marked to exclude it from the memory-leak report.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >These techniques work for memory allocated using the standard CRT&nbsp;<B>malloc</B>&nbsp;function. If your program allocates memory using the C++&nbsp;<B>new</B>&nbsp;operator, however, you need to redefine&nbsp;<B>new</B>&nbsp;if you want to see the file and line numbers in the memory-leak report. You can do that with a block of co<wbr>de that looks like this:</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><A  rel="nofollow"  ></A><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >#ifdef _DEBUG</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  ><SPAN style="mso-spacerun: yes;"   >&nbsp;&nbsp; </SPAN>#ifndef DBG_NEW</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  ><SPAN style="mso-spacerun: yes;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>#define DBG_NEW new ( _NORMAL_BLOCK , __FILE__ , __LINE__ )</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  ><SPAN style="mso-spacerun: yes;"   >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>#define new DBG_NEW</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  ><SPAN style="mso-spacerun: yes;"   >&nbsp;&nbsp; </SPAN>#endif</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >#endif<SPAN style="mso-spacerun: yes;"   >&nbsp; </SPAN>// _DEBUG</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan;"   align="left"  ><B><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: #3f529c; FONT-SIZE: 15.5pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >Setting Breakpoints on a Memory Allocation Number</SPAN></B><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  ></SPAN></P>  <DIV style="TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan;"   align="center"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >  <HR style="COLOR: #e5e5e5;"   align="center"  SIZE="2"  width="100%"   noShade>  </SPAN></DIV>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >The memory allocation number tells you when a leaked memory block was allocated. A block with a memory allocation number of 18, for example, is the 18th block of memory allocated during the run of the application. The CRT report counts all memory-block allocations during the run. This includes allocations by the CRT library and other libraries such as MFC. Therefore, a block with a memory allocation number of 18 may not be the 18th memory block allocated by your co<wbr>de. Typically, it will not be.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >You can use the allocation number to set a breakpoint on the memory allocation.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-outline-level: 3; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><B><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: #3f529c; FONT-SIZE: 11pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >To set a memory-allocation breakpoint using the Watch window</SPAN></B></P>  <OL type="1"  >  <LI style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; COLOR: black; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; tab-stops: list 36.0pt; mso-list: l0 level1 lfo2;"   ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >Set a breakpoint near the start of your application, and then start your application.</SPAN></LI>  <LI style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; COLOR: black; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; tab-stops: list 36.0pt; mso-list: l0 level1 lfo2;"   ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >When the application breaks at the breakpoint, the&nbsp;<B>Watch</B>&nbsp;window.</SPAN></LI>  <LI style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; COLOR: black; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; tab-stops: list 36.0pt; mso-list: l0 level1 lfo2;"   ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >In the&nbsp;<B>Watch</B>&nbsp;window, type&nbsp;_crtBreakAlloc&nbsp;in in the&nbsp;<B>Name</B>&nbsp;column.</SPAN></LI></OL>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 36pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >If you are using the multithreaded DLL version of the CRT library (the /MD option), include the context operator:&nbsp;{,,msvcr100d.dll}_crtBreakAlloc</SPAN></P>  <OL type="1"  start="4"  >  <LI style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; COLOR: black; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; tab-stops: list 36.0pt; mso-list: l0 level1 lfo2;"   ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >Press&nbsp;<B>RETURN</B>.</SPAN></LI></OL>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 36pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >The debugger evaluates the call and places the result in the&nbsp;<B>Value</B>&nbsp;column. This value will be –1 if you have not set any breakpoints on memory allocations.</SPAN></P>  <OL type="1"  start="5"  >  <LI style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; COLOR: black; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; tab-stops: list 36.0pt; mso-list: l0 level1 lfo2;"   ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >In the&nbsp;<B>Value</B>&nbsp;column, replace the value shown with the allocation number of the memory allocation where you want to break.</SPAN></LI></OL>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >After you set a breakpoint on a memory-allocation number, you can continue to debug. Be careful to run the program under the same conditions as the previous run so that the memory-allocation order does not change. When your program breaks at the specified memory allocation, you can use the&nbsp;<B>Call Stack</B>&nbsp;window and other debugger windows to determine the conditions under which the memory was allocated. Then, you can continue execution to observe what happens to the object and determine why it is not correctly deallocated.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >Setting a da<wbr>ta breakpoint on the object might also be helpful. For more information, see&nbsp;</SPAN><SPAN lang="EN-US"  ><A rel="nofollow" href="http://msdn.microsoft.com/en-us/library/350dyxd0.aspx"   ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: #1364c4; FONT-SIZE: 10pt; TEXT-DECORATION: none; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt; text-underline: none;"   >How to: Set a Da<wbr>ta Breakpoint (Native On<wbr>ly)</SPAN></A></SPAN><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >You can also set memory-allocation breakpoints in co<wbr>de. There are two ways to do this:</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><A  rel="nofollow"  ></A><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >_crtBreakAlloc = 18;</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >or:</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><A  rel="nofollow"  ></A><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >_CrtSetBreakAlloc(18);</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan;"   align="left"  ><B><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: #3f529c; FONT-SIZE: 15.5pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >Comparing Memory States</SPAN></B><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  ></SPAN></P>  <DIV style="TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan;"   align="center"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >  <HR style="COLOR: #e5e5e5;"   align="center"  SIZE="2"  width="100%"   noShade>  </SPAN></DIV>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >Another technique for locating memory leaks involves taking snapshots of the application's memory state at key points. To take a snapshot of the memory state at a given point in your application, create a&nbsp;<B>_CrtMemState</B>&nbsp;structure and pass it to the&nbsp;<B>_CrtMemCheckpoint</B>&nbsp;function. This function fills in the structure with a snapshot of the current memory state:</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><A  rel="nofollow"  ></A><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >_CrtMemState s1;</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >_CrtMemCheckpoint( &amp;s1 );</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >&nbsp;</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><B><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >_CrtMemCheckpoint</SPAN></B><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >&nbsp;fills in the structure with a snapshot of the current memory state.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >To output the contents of a&nbsp;<B>_CrtMemState</B>&nbsp;structure, pass the structure to the&nbsp;<B>_ CrtMemDumpStatistics</B>&nbsp;function:</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><A  rel="nofollow"  ></A><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >_CrtMemDumpStatistics( &amp;s1 );</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >&nbsp;</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><B><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >_ CrtMemDumpStatistics</SPAN></B><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >&nbsp;outputs a dump of memory state that looks like this:</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><A  rel="nofollow"  ></A><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >0 bytes in 0 Free Blocks.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >0 bytes in 0 Normal Blocks.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >3071 bytes in 16 CRT Blocks.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >0 bytes in 0 Ignore Blocks.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >0 bytes in 0 Client Blocks.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >Largest number used: 3071 bytes.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >Total allocations: 3764 bytes.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >&nbsp;</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >To determine whether a memory leak has occurred in a section of co<wbr>de, you can take snapshots of the memory state before and after the section, and then use&nbsp;<B>_ CrtMemDifference</B>&nbsp;to compare the two states:</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><A  rel="nofollow"  ></A><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >_CrtMemCheckpoint( &amp;s1 );</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >// memory allocations take place here</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >_CrtMemCheckpoint( &amp;s2 );</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >&nbsp;</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >if ( _CrtMemDifference( &amp;s3, &amp;s1, &amp;s2) )</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; WORD-BREAK: break-all; mso-pagination: widow-orphan; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;"   align="left"  ><SPAN style="FONT-FAMILY: Consolas; COLOR: black; FONT-SIZE: 12pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  ><SPAN style="mso-spacerun: yes;"   >&nbsp;&nbsp; </SPAN>_CrtMemDumpStatistics( &amp;s3 );</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><B><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >_CrtMemDifference</SPAN></B><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >&nbsp;compares the memory states&nbsp;s1&nbsp;and&nbsp;s2&nbsp;and returns a result in (s3) that is the difference of&nbsp;s1&nbsp;and&nbsp;s2.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >On<wbr>e technique for finding memory leaks begins by placing&nbsp;<B>_CrtMemCheckpoint</B>&nbsp;calls at the beginning and end of your application, then using&nbsp;<B>_CrtMemDifference</B>&nbsp;to compare the results. If<B>_CrtMemDifference</B>&nbsp;shows a memory leak, you can add more&nbsp;<B>_CrtMemCheckpoint</B>&nbsp;calls to divide your program using a binary search until you have isolated the source of the leak.</SPAN></P>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan;"   align="left"  ><B><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: #3f529c; FONT-SIZE: 15.5pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >False positives</SPAN></B><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  ></SPAN></P>  <DIV style="TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan;"   align="center"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >  <HR style="COLOR: #e5e5e5;"   align="center"  SIZE="2"  width="100%"   noShade>  </SPAN></DIV>  <P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-pagination: widow-orphan; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto;"   align="left"  ><SPAN style="FONT-FAMILY: 'Segoe UI','sans-serif'; COLOR: black; FONT-SIZE: 10pt; mso-fareast-font-family: 宋体; mso-font-kerning: 0pt;"   lang="EN-US"  >In some cases,&nbsp;<B>_CrtDumpMemoryLeaks</B>&nbsp;can give false indications of memory leaks. This might occur if you use a library that marks internal allocations as _NORMAL_BLOCKs instead of<B>_CRT_BLOCK</B>s or&nbsp;<B>_CLIENT_BLOCK</B>s. In that case,&nbsp;<B>_CrtDumpMemoryLeaks</B>&nbsp;is unable to tell the difference between user allocations and internal library allocations. If the global destructors for the library allocations run after the point where you call&nbsp;<B>_CrtDumpMemoryLeaks</B>, every internal library allocation is reported as a memory leak. Older versions of the Standard Template Library, earlier than Visual Studio .NET, caused&nbsp;<B>_CrtDumpMemoryLeaks</B>&nbsp;to report such false positives, but this has been fixed in recent releases.</SPAN></P>  <P style="MARGIN: 0cm 0cm 0pt;"   ><SPAN lang="EN-US"  ><FONT face="Calibri"  >&nbsp;</FONT></SPAN></P>
</body></html>