<html><head><meta http-equiv="Content-Type" content="text/html; charset=utf8"><title>163 blogs的博客：Openssl之BIO系列(2)</title>
<style type="text/css">
a{color: #000000;text-decoration : none;font-size: 10pt;}
a:hover {color: red;text-decoration : underline;}
.replyBox{padding:4px;border:1px solid #D8D8D8;}
</style></head><body><h2>Openssl之BIO系列(2)</h2>
<p align="right">发布时间：2010-5-28 16:14
<br>分类名称：OpenSSL</p><br>
<h2><span style="font-size: 14px; font-weight: normal; line-height: 22px; color: rgb(63, 63, 63);"><h2 style="line-height: 33px;"><span lang="EN-US" style="line-height: 33px;">8.</span><span style="line-height: 33px; font-family: 黑体;">读写出错控制</span><span lang="EN-US" style="line-height: 33px;"><o p style="line-height: 33px;"></o:p></span></h2><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">当</span><span lang="EN-US" style="line-height: 22px;">BIO_read</span><span style="line-height: 22px; font-family: 宋体;">或</span><span lang="EN-US" style="line-height: 22px;">BIO_write</span><span style="line-height: 22px; font-family: 宋体;">函数调用出错的时候，</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">本身提供了一组出错原因的诊断函数，他们定义如下（</span><span lang="EN-US" style="line-height: 22px;">openssl/bio.h</span><span style="line-height: 22px; font-family: 宋体;">）：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_should_read(a) ((a)-&gt;flags &amp; BIO_FLAGS_READ)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_should_write(a) ((a)-&gt;flags &amp; BIO_FLAGS_WRITE)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_should_io_special(a) ((a)-&gt;flags &amp; BIO_FLAGS_IO_SPECIAL)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_retry_type(a) ((a)-&gt;flags &amp; BIO_FLAGS_RWS)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_should_retry(a) ((a)-&gt;flags &amp; BIO_FLAGS_SHOULD_RETRY)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;">&nbsp;</o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_FLAGS_READ 0x01<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_FLAGS_WRITE 0x02<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_FLAGS_IO_SPECIAL 0x04<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_FLAGS_RWS (BIO_FLAGS_READ | BIO_FLAGS_WRITE | BIO_FLAGS_IO_SPECIAL)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_FLAGS_SHOULD_RETRY 0x08<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;">&nbsp;</o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO * BIO_get_retry_BIO(BIO *bio, int *reason);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">int BIO_get_retry_reason(BIO *bio);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">因为这些函数是用于决定为什么</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">在读写数据的时候不能读出或写入数据，所以他们一般也是在执行</span><span lang="EN-US" style="line-height: 22px;">BIO_read</span><span style="line-height: 22px; font-family: 宋体;">或</span><span lang="EN-US" style="line-height: 22px;">BIO_write</span><span style="line-height: 22px; font-family: 宋体;">操作之后被调用的。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">8.1 BIO_should_retry<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">如果读写出错的情况是要求程序稍后重试，那么该函数返回</span><span lang="EN-US" style="line-height: 22px;">true.</span><span style="line-height: 22px; font-family: 宋体;">如果该函数返回</span><span lang="EN-US" style="line-height: 22px;">false</span><span style="line-height: 22px; font-family: 宋体;">，这时候判定错误情况就要根据</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的类型和</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">操作的返回值来确定了。比如，如果对</span><span lang="EN-US" style="line-height: 22px;">socket</span><span style="line-height: 22px; font-family: 宋体;">类型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">调用</span><span lang="EN-US" style="line-height: 22px;">BIO_read</span><span style="line-height: 22px; font-family: 宋体;">操作并且返回值为</span><span lang="EN-US" style="line-height: 22px;">0</span><span style="line-height: 22px; font-family: 宋体;">，此时</span><span lang="EN-US" style="line-height: 22px;">BIO_should_retry</span><span style="line-height: 22px; font-family: 宋体;">返回</span><span lang="EN-US" style="line-height: 22px;">false</span><span style="line-height: 22px; font-family: 宋体;">就说明</span><span lang="EN-US" style="line-height: 22px;">socket</span><span style="line-height: 22px; font-family: 宋体;">连接已经关闭了。而如果是</span><span lang="EN-US" style="line-height: 22px;">file</span><span style="line-height: 22px; font-family: 宋体;">类型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">出现这样的情况，那说明就是读到文件</span><span lang="EN-US" style="line-height: 22px;">eof</span><span style="line-height: 22px; font-family: 宋体;">了。有些类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">还会提供更多的出错信息，具体情况参见各自的说明。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">如果</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">下层</span><span lang="EN-US" style="line-height: 22px;">I/O</span><span style="line-height: 22px; font-family: 宋体;">结构是阻塞模式的，那么几乎所有（</span><span lang="EN-US" style="line-height: 22px;">SSL</span><span style="line-height: 22px; font-family: 宋体;">类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">例外）</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">类型都不会返回重试的情况（就是说调用</span><span lang="EN-US" style="line-height: 22px;">BIO_should_retry</span><span style="line-height: 22px; font-family: 宋体;">不会返回</span><span lang="EN-US" style="line-height: 22px;">true</span><span style="line-height: 22px; font-family: 宋体;">），因为这时候对下层</span><span lang="EN-US" style="line-height: 22px;">I/O</span><span style="line-height: 22px; font-family: 宋体;">的调用根本不会进行。所以建议如果你的应用程序能够判定该类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">在执行</span><span lang="EN-US" style="line-height: 22px;">IO</span><span style="line-height: 22px; font-family: 宋体;">操作后不会出现重试的情况时，就不要调用</span><span lang="EN-US" style="line-height: 22px;">BIO_should_retry</span><span style="line-height: 22px; font-family: 宋体;">函数。</span><span lang="EN-US" style="line-height: 22px;">file</span><span style="line-height: 22px; font-family: 宋体;">类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">就是这样的一个典型例子。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">SSL</span><span style="line-height: 22px; font-family: 宋体;">类型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">是上述规则的唯一例外，也就是说，既便在阻塞型的</span><span lang="EN-US" style="line-height: 22px;">I/O</span><span style="line-height: 22px; font-family: 宋体;">结构中，如果在调用</span><span lang="EN-US" style="line-height: 22px;">BIO_read</span><span style="line-height: 22px; font-family: 宋体;">的时候发生了握手的过程，它也能会返回重试要求（调用</span><span lang="EN-US" style="line-height: 22px;">BIO_should_retry</span><span style="line-height: 22px; font-family: 宋体;">返回</span><span lang="EN-US" style="line-height: 22px;">true</span><span style="line-height: 22px; font-family: 宋体;">）。在这种情况下，应用程序可以立刻重新执行失败的</span><span lang="EN-US" style="line-height: 22px;">I/O</span><span style="line-height: 22px; font-family: 宋体;">操作，或者在底层的</span><span lang="EN-US" style="line-height: 22px;">I/O</span><span style="line-height: 22px; font-family: 宋体;">结构中设置为</span><span lang="EN-US" style="line-height: 22px;">SSL_MODE_AUTO_RETRY</span><span style="line-height: 22px; font-family: 宋体;">，那么就可以避免出现这种失败的情况。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">如果应用程序在非阻塞型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">中调用</span><span lang="EN-US" style="line-height: 22px;">IO</span><span style="line-height: 22px; font-family: 宋体;">操作失败后立刻重试，那么可能导致效率很低，因为在数据允许读取或有效之前，调用会重复返回失败结果。所以，正常的应用应该是等到需要的条件满足之后，程序才执行相关的调用，至于具体怎么做，就跟底层的</span><span lang="EN-US" style="line-height: 22px;">IO</span><span style="line-height: 22px; font-family: 宋体;">结构有关了。例如，如果一个底层</span><span lang="EN-US" style="line-height: 22px;">IO</span><span style="line-height: 22px; font-family: 宋体;">是一个</span><span lang="EN-US" style="line-height: 22px;">soket</span><span style="line-height: 22px; font-family: 宋体;">，并且</span><span lang="EN-US" style="line-height: 22px;">BIO_should_retry</span><span style="line-height: 22px; font-family: 宋体;">返回</span><span lang="EN-US" style="line-height: 22px;">true</span><span style="line-height: 22px; font-family: 宋体;">，那么可以调用</span><span lang="EN-US" style="line-height: 22px;">select()</span><span style="line-height: 22px; font-family: 宋体;">来等待数据有效之后再重试</span><span lang="EN-US" style="line-height: 22px;">IO</span><span style="line-height: 22px; font-family: 宋体;">操作。在一个线程中，可以使用一个</span><span lang="EN-US" style="line-height: 22px;">select()</span><span style="line-height: 22px; font-family: 宋体;">来处理多个非阻塞型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，不过，这时候执行效率可能出现非常低的情况，比如如果其中一个延时很长的</span><span lang="EN-US" style="line-height: 22px;">SSL</span><span style="line-height: 22px; font-family: 宋体;">类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">在握手的时候就会导致这种情况。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">在阻塞型的</span><span lang="EN-US" style="line-height: 22px;">IO</span><span style="line-height: 22px; font-family: 宋体;">结构中，对数据的读取操作可能会导致无限期的阻塞，其情况跟系统的</span><span lang="EN-US" style="line-height: 22px;">IO</span><span style="line-height: 22px; font-family: 宋体;">结构函数有关。我们当然不期望出现这种情况，解决的办法之一是尽量使用非阻塞型的</span><span lang="EN-US" style="line-height: 22px;">IO</span><span style="line-height: 22px; font-family: 宋体;">结构和使用</span><span lang="EN-US" style="line-height: 22px;">select</span><span style="line-height: 22px; font-family: 宋体;">函数（或</span><span lang="EN-US" style="line-height: 22px;">equivalent</span><span style="line-height: 22px; font-family: 宋体;">）来设置等待时间。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">8.2 BIO_should_read<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数返回</span><span lang="EN-US" style="line-height: 22px;">true</span><span style="line-height: 22px; font-family: 宋体;">如果导致</span><span lang="EN-US" style="line-height: 22px;">IO</span><span style="line-height: 22px; font-family: 宋体;">操作失败的原因是</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">此时要读数据。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">8.3 BIO_should_write<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数返回</span><span lang="EN-US" style="line-height: 22px;">true</span><span style="line-height: 22px; font-family: 宋体;">如果导致</span><span lang="EN-US" style="line-height: 22px;">IO</span><span style="line-height: 22px; font-family: 宋体;">操作失败的原因是</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">此时要写数据。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">8.4 BIO_should_io_special<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数返回</span><span lang="EN-US" style="line-height: 22px;">true</span><span style="line-height: 22px; font-family: 宋体;">如果导致</span><span lang="EN-US" style="line-height: 22px;">IO</span><span style="line-height: 22px; font-family: 宋体;">操作失败的原因是特殊的（也就是读写之外的原因）</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">8.5 BIO_get_retry_reason<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">返回失败的原因，其代码包括</span><span lang="EN-US" style="line-height: 22px;">BIO_FLAGS_READ</span><span style="line-height: 22px; font-family: 宋体;">、</span><span lang="EN-US" style="line-height: 22px;">BIO_FLAGS_WRITE</span><span style="line-height: 22px; font-family: 宋体;">和</span><span lang="EN-US" style="line-height: 22px;">BIO_FLAGS_IO_SPECIAL</span><span style="line-height: 22px; font-family: 宋体;">。目前的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">类型只返回其中之一。如果输入的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">是产生特殊出错情况的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，那么该函数返回错误的原因代码，就跟</span><span lang="EN-US" style="line-height: 22px;">BIO_get_retry_BIO()</span><span style="line-height: 22px; font-family: 宋体;">返回的</span><span lang="EN-US" style="line-height: 22px;">reason</span><span style="line-height: 22px; font-family: 宋体;">一样。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">8.6 BIO_get_retry_BIO<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数给出特殊情况错误的简短原因，它返回出错的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，如果</span><span lang="EN-US" style="line-height: 22px;">reason</span><span style="line-height: 22px; font-family: 宋体;">不是设置为</span><span lang="EN-US" style="line-height: 22px;">NULL</span><span style="line-height: 22px; font-family: 宋体;">，它会包含错误代码，错误码的含义以及下一步应该采取的处理措施应该根据发生这种情况下各种</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的类型而定。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h2 style="line-height: 33px;"><span lang="EN-US" style="line-height: 33px;">9.BIO</span><span style="line-height: 33px; font-family: 黑体;">对的创建和应用</span><span lang="EN-US" style="line-height: 33px;"><o p style="line-height: 33px;"></o:p></span></h2><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对是</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">中专门创建的一对缓存</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，要创建</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对，调用下面定义的函数（</span><span lang="EN-US" style="line-height: 22px;">openssl\bio.h</span><span style="line-height: 22px; font-family: 宋体;">）：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">int BIO_new_bio_pair(BIO **bio1, size_t writebuf1, BIO **bio2, size_t writebuf2);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">这个函数调用成功后返回</span><span lang="EN-US" style="line-height: 22px;">1</span><span style="line-height: 22px; font-family: 宋体;">，这时候</span><span lang="EN-US" style="line-height: 22px;">bio1</span><span style="line-height: 22px; font-family: 宋体;">和</span><span lang="EN-US" style="line-height: 22px;">bio2</span><span style="line-height: 22px; font-family: 宋体;">都是有效的了；否则就返回</span><span lang="EN-US" style="line-height: 22px;">0</span><span style="line-height: 22px; font-family: 宋体;">，而</span><span lang="EN-US" style="line-height: 22px;">bio1</span><span style="line-height: 22px; font-family: 宋体;">和</span><span lang="EN-US" style="line-height: 22px;">bio2</span><span style="line-height: 22px; font-family: 宋体;">就会设为</span><span lang="EN-US" style="line-height: 22px;">NULL</span><span style="line-height: 22px; font-family: 宋体;">，这是后可以检测出错堆栈以得到更多错误信息。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">这个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对创建之后，它的两端都能作为数据缓冲的输入和输出。典型的应用是它一端和</span><span lang="EN-US" style="line-height: 22px;">SSL</span><span style="line-height: 22px; font-family: 宋体;">的</span><span lang="EN-US" style="line-height: 22px;">IO</span><span style="line-height: 22px; font-family: 宋体;">连接，而另一端则被应用控制，这样，应用程序就不需要直接和网络连接打交道了。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">这两个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对的功能是完全对称的，它们的缓冲区的大小由参数</span><span lang="EN-US" style="line-height: 22px;">writebuf1</span><span style="line-height: 22px; font-family: 宋体;">和</span><span lang="EN-US" style="line-height: 22px;">writebuf2</span><span style="line-height: 22px; font-family: 宋体;">决定，如果给定的大小是</span><span lang="EN-US" style="line-height: 22px;">0</span><span style="line-height: 22px; font-family: 宋体;">，那么该函数就会使用缺省的缓存大小。</span><span lang="EN-US" style="line-height: 22px;">BIO_new_bio_pair</span><span style="line-height: 22px; font-family: 宋体;">不会检查</span><span lang="EN-US" style="line-height: 22px;">bio1</span><span style="line-height: 22px; font-family: 宋体;">和</span><span lang="EN-US" style="line-height: 22px;">bio2</span><span style="line-height: 22px; font-family: 宋体;">是否真的指向其它</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，</span><span lang="EN-US" style="line-height: 22px;">bio1</span><span style="line-height: 22px; font-family: 宋体;">和</span><span lang="EN-US" style="line-height: 22px;">bio2</span><span style="line-height: 22px; font-family: 宋体;">的值都被重写，但是在此之前不会调用</span><span lang="EN-US" style="line-height: 22px;">BIO_free()</span><span style="line-height: 22px; font-family: 宋体;">函数。所以，在使用</span><span lang="EN-US" style="line-height: 22px;">bio1</span><span style="line-height: 22px; font-family: 宋体;">和</span><span lang="EN-US" style="line-height: 22px;">bio2</span><span style="line-height: 22px; font-family: 宋体;">之前，必须自己保证这两个变量是空的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，否则可能造成内存泄漏。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">值得注意的是，虽然这两个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">是一对的和一起创建的，但是却必须分别释放。之所以这样做，是有其重要原因的，因为有些</span><span lang="EN-US" style="line-height: 22px;">SSL</span><span style="line-height: 22px; font-family: 宋体;">函数，如</span><span lang="EN-US" style="line-height: 22px;">SSL_set_bio</span><span style="line-height: 22px; font-family: 宋体;">或</span><span lang="EN-US" style="line-height: 22px;">BIO_free</span><span style="line-height: 22px; font-family: 宋体;">会隐含调用</span><span lang="EN-US" style="line-height: 22px;">BIO_free</span><span style="line-height: 22px; font-family: 宋体;">函数，所以这时候另一端的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">就只能单独释放了。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">下面举一个简单的例子说明问题。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对能给提供应用程序中对网络处理的完全控制能力，程序可以对根据需要调用</span><span lang="EN-US" style="line-height: 22px;">soket</span><span style="line-height: 22px; font-family: 宋体;">的</span><span lang="EN-US" style="line-height: 22px;">select()</span><span style="line-height: 22px; font-family: 宋体;">函数，同时却可以避免直接处理</span><span lang="EN-US" style="line-height: 22px;">SSL</span><span style="line-height: 22px; font-family: 宋体;">接口。下面是使用</span><span lang="EN-US" style="line-height: 22px;">BIO_new_bio_pair</span><span style="line-height: 22px; font-family: 宋体;">的简单代码模型：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO *internal_bio, *network_bio;<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">……<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_new_bio_pair(internal_bio, 0, network_bio, 0);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">SSL_set_bio(ssl, internal_bio);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">SSL_operations();<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">……<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">application | TLS-engine<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">| |<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">+----------&gt; SSL_operations()<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">| /\ ||<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">| || \/<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">| BIO-pair (internal_bio)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">+----------&lt; BIO-pair (network_bio)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">| |<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">socket |<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">……<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">SSL_free(ssl); /*&nbsp;</span><span style="line-height: 22px; font-family: 宋体;">隐式释放</span><span lang="EN-US" style="line-height: 22px;">&nbsp;internal_bio */<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_free(network_bio); /*&nbsp;</span><span style="line-height: 22px; font-family: 宋体;">显式释放</span><span lang="EN-US" style="line-height: 22px;">&nbsp;network_bio*/<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">……<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">因为</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对只会简单的缓存数据，而不会直接涉及到连接，所以它看起来就象非阻塞型的接口，如果写缓存满了或读缓存空的时候，调用</span><span lang="EN-US" style="line-height: 22px;">IO</span><span style="line-height: 22px; font-family: 宋体;">函数就会立刻返回。也就是说，应用程序必须自己对写缓存执行</span><span lang="EN-US" style="line-height: 22px;">flush</span><span style="line-height: 22px; font-family: 宋体;">操作或对读缓存执行</span><span lang="EN-US" style="line-height: 22px;">fill</span><span style="line-height: 22px; font-family: 宋体;">操作。可以使用前面介绍过的</span><span lang="EN-US" style="line-height: 22px;">BIO_ctrl_pending</span><span style="line-height: 22px; font-family: 宋体;">函数看看是否有数据在缓存里面并需要传输到网络上去；为了下面的</span><span lang="EN-US" style="line-height: 22px;">SSL_operation</span><span style="line-height: 22px; font-family: 宋体;">能够正确执行，可以调用</span><span lang="EN-US" style="line-height: 22px;">BIO_ctrl_get_read_request</span><span style="line-height: 22px; font-family: 宋体;">函数，以决定需要在写缓存写入多少数据。上面两个函数可以保证正确的</span><span lang="EN-US" style="line-height: 22px;">SSL</span><span style="line-height: 22px; font-family: 宋体;">操作的进行。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">需要注意的是，</span><span lang="EN-US" style="line-height: 22px;">SSL_operation</span><span style="line-height: 22px; font-family: 宋体;">的调用可能会出现返回</span><span lang="EN-US" style="line-height: 22px;">ERROR_SSL_WANT_READ</span><span style="line-height: 22px; font-family: 宋体;">值，但这时候写缓存却还有数据的情况，所以应用程序不能简单的根据这个错误代码进行判断，而必须保证写缓存以及执行过</span><span lang="EN-US" style="line-height: 22px;">flush</span><span style="line-height: 22px; font-family: 宋体;">操作了，否则就会造成死锁现象，因为另一端可能知道等到有数据了才会继续进行下面的操作。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h2 style="line-height: 33px;"><span lang="EN-US" style="line-height: 33px;">10.BIO</span><span style="line-height: 33px; font-family: 黑体;">链的定位操作</span><span lang="EN-US" style="line-height: 33px;"><o p style="line-height: 33px;"></o:p></span></h2><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">这里讲的是在一个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">链中，怎么查找一个特定的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，怎么遍历</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">链中的每一个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，这组函数定义如下（</span><span lang="EN-US" style="line-height: 22px;">openssl/bio.h</span><span style="line-height: 22px; font-family: 宋体;">）：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO * BIO_find_type(BIO *b,int bio_type);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO * BIO_next(BIO *b);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;">&nbsp;</o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_method_type(b) ((b)-&gt;method-&gt;type)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">可以看到，这组函数中有两个是真正的函数，另一个则是宏定义，其中，</span><span lang="EN-US" style="line-height: 22px;">bio_type</span><span style="line-height: 22px; font-family: 宋体;">的值定义如下：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_TYPE_NONE 0<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_TYPE_MEM (1|0x0400)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_TYPE_FILE (2|0x0400)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;">&nbsp;</o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_TYPE_FD (4|0x0400|0x0100)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_TYPE_SOCKET (5|0x0400|0x0100)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_TYPE_NULL (6|0x0400)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_TYPE_SSL (7|0x0200)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_TYPE_MD (8|0x0200)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_TYPE_BUFFER (9|0x0200)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_TYPE_CIPHER (10|0x0200)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_TYPE_BASE64 (11|0x0200)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_TYPE_CONNECT (12|0x0400|0x0100)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_TYPE_ACCEPT (13|0x0400|0x0100)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_TYPE_PROXY_CLIENT (14|0x0200)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_TYPE_PROXY_SERVER (15|0x0200)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_TYPE_NBIO_TEST (16|0x0200)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_TYPE_NULL_FILTER (17|0x0200)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_TYPE_BER (18|0x0200)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_TYPE_BIO (19|0x0400)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;">&nbsp;</o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_TYPE_DESCRIPTOR 0x0100<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_TYPE_FILTER 0x0200<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_TYPE_SOURCE_SINK 0x0400<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">可以看到，这些定义大部分都是根据各种</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">类型来命名的，但并不是跟现有的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">类型是一一对应的，在以后的文章里，我会对这些</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">类型一一进行介绍，现在大家只要有一个概念就可以了。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">10.1 BIO_find_type<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数在给定的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">链中根据特定的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">类型</span><span lang="EN-US" style="line-height: 22px;">bio_type</span><span style="line-height: 22px; font-family: 宋体;">进行搜索，搜索的起始位置就是</span><span lang="EN-US" style="line-height: 22px;">b</span><span style="line-height: 22px; font-family: 宋体;">。如果给定的类型是一个特定的实现类型，那么就会搜索一个给类型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">；如果只是一个总体的类型定义，如</span><span lang="EN-US" style="line-height: 22px;">BIO_TYPE_SOURCE_SINK</span><span style="line-height: 22px; font-family: 宋体;">（就是</span><span lang="EN-US" style="line-height: 22px;">sourc/sink</span><span style="line-height: 22px; font-family: 宋体;">类型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">），那么属于这种类型的最先找到的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">就是符合条件的。在找到符合的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">后，</span><span lang="EN-US" style="line-height: 22px;">BIO_find_type</span><span style="line-height: 22px; font-family: 宋体;">返回该</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，否则返回</span><span lang="EN-US" style="line-height: 22px;">NULL</span><span style="line-height: 22px; font-family: 宋体;">。需要注意的是，如果你使用的</span><st1 chsdate isrocdate="False" islunardate="False" day="30" month="12" year="1899" wst="on" style="line-height: 22px;"><span lang="EN-US" style="line-height: 22px;">0.<st1 chmetcnv tcsc="0" numbertype="1" negative="False" hasspace="False" sourcevalue="9.5" unitname="a" wst="on" style="line-height: 22px;">9.5a</st1:chmetcnv></span></st1:chsdate><span style="line-height: 22px; font-family: 宋体;">以前版本，如果给输入参数</span><span lang="EN-US" style="line-height: 22px;">b</span><span style="line-height: 22px; font-family: 宋体;">赋值为</span><span lang="EN-US" style="line-height: 22px;">NULL</span><span style="line-height: 22px; font-family: 宋体;">，可能引起异常错误！</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">10.2 BIO_next<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数顾名思义，是返回当前</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">所在的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">链中的下一个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，所以，它可以用来遍历整个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">链，并且可以跟</span><span lang="EN-US" style="line-height: 22px;">BIO_find_type</span><span style="line-height: 22px; font-family: 宋体;">函数结合起来，在整个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">链中找出所有特定类型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">。这个函数是在</span><st1 chsdate isrocdate="False" islunardate="False" day="30" month="12" year="1899" wst="on" style="line-height: 22px;"><span lang="EN-US" style="line-height: 22px;">0.9.6</span></st1:chsdate><span style="line-height: 22px; font-family: 宋体;">版本新加的，以前的版本要使用这个功能，只能使用</span><span lang="EN-US" style="line-height: 22px;">bio-&gt;next_bio</span><span style="line-height: 22px; font-family: 宋体;">来定位了。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">10.3 BIO_method_type<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数返回给定的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的类型。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">下面给出一个在一个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">链中找出所有</span><span lang="EN-US" style="line-height: 22px;">digest</span><span style="line-height: 22px; font-family: 宋体;">类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的例子：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO *btmp;<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">btmp = in_bio; /* in_bio&nbsp;</span><span style="line-height: 22px; font-family: 宋体;">是被搜索的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">链</span><span lang="EN-US" style="line-height: 22px;">&nbsp;*/<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;">&nbsp;</o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">do {<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">btmp = BIO_find_type(btmp, BIO_TYPE_MD);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;"> break; /*&nbsp;</span><span style="line-height: 22px; font-family: 宋体;">如果没有找到</span><span lang="EN-US" style="line-height: 22px;">*/<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">/* btmp&nbsp;</span><span style="line-height: 22px; font-family: 宋体;">是一个</span><span lang="EN-US" style="line-height: 22px;">digest</span><span style="line-height: 22px; font-family: 宋体;">类型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，做些你需要做的处理</span><span lang="EN-US" style="line-height: 22px;">&nbsp;...*/<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">……<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">btmp = BIO_next(btmp);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">} while(btmp);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">到此为止，就已经基本写完了</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的基础知识方面的东西，下面的文章将开始对每一个具体的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">类型进行介绍。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h2 style="line-height: 33px;"><span lang="EN-US" style="line-height: 33px;">11.</span><span style="line-height: 33px; font-family: 黑体;">文件</span><span lang="EN-US" style="line-height: 33px;">(file)</span><span style="line-height: 33px; font-family: 黑体;">类型</span><span lang="EN-US" style="line-height: 33px;">BIO<o p style="line-height: 33px;"></o:p></span></h2><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">文件</span><span lang="EN-US" style="line-height: 22px;">(file)</span><span style="line-height: 22px; font-family: 宋体;">类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的相关函数和定义如下（</span><span lang="EN-US" style="line-height: 22px;">openssl\bio.h</span><span style="line-height: 22px; font-family: 宋体;">）：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_METHOD * BIO_s_file(void);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO *BIO_new_file(const char *filename, const char *mode);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO *BIO_new_fp(FILE *stream, int flags);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;">&nbsp;</o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_set_fp(BIO *b,FILE *fp, int flags);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_get_fp(BIO *b,FILE **fpp);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;">&nbsp;</o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">int BIO_read_filename(BIO *b, char *name)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">int BIO_write_filename(BIO *b, char *name)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">int BIO_append_filename(BIO *b, char *name)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">int BIO_rw_filename(BIO *b, char *name)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">下面逐一介绍它们的作用和用法。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">11.1 BIO_s_file<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">经过前面的介绍，大家应该对这种类型的函数结构很熟悉了，他们就是生成</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">类型的基本构造函数，</span><span lang="EN-US" style="line-height: 22px;">BIO_s_file</span><span style="line-height: 22px; font-family: 宋体;">返回</span><span lang="EN-US" style="line-height: 22px;">file</span><span style="line-height: 22px; font-family: 宋体;">类型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，</span><span lang="EN-US" style="line-height: 22px;">file</span><span style="line-height: 22px; font-family: 宋体;">类型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">封装了一个标准的文件结构，它是一种</span><span lang="EN-US" style="line-height: 22px;">source/sink</span><span style="line-height: 22px; font-family: 宋体;">型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">。</span><span lang="EN-US" style="line-height: 22px;">file</span><span style="line-height: 22px; font-family: 宋体;">类型的</span><span lang="EN-US" style="line-height: 22px;">BIO_METHOD</span><span style="line-height: 22px; font-family: 宋体;">结构定义如下：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">static BIO_METHOD methods_filep=<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">{<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_TYPE_FILE,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">"FILE pointer",<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">file_write,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">file_read,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">file_puts,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">file_gets,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">file_ctrl,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">file_new,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">file_free,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">NULL,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 22px;">};<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">可以看到，</span><span lang="EN-US" style="line-height: 22px;">file</span><span style="line-height: 22px; font-family: 宋体;">类型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">定义了</span><span lang="EN-US" style="line-height: 22px;">7</span><span style="line-height: 22px; font-family: 宋体;">个函数，这些函数的实现都在</span><span lang="EN-US" style="line-height: 22px;">Crypto\bio\bss_file.c</span><span style="line-height: 22px; font-family: 宋体;">里面，大家如果要了解该类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的函数实现，可以参考该文件。事实上，</span><span lang="EN-US" style="line-height: 22px;">BIO_s_file</span><span style="line-height: 22px; font-family: 宋体;">只是简单返回一个</span><span lang="EN-US" style="line-height: 22px;">file</span><span style="line-height: 22px; font-family: 宋体;">类型的</span><span lang="EN-US" style="line-height: 22px;">BIO_METHOD</span><span style="line-height: 22px; font-family: 宋体;">的结构的指针，其函数实现如下：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_METHOD *BIO_s_file(void)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">{<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">return(&amp;methods_filep);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 22px;">}<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">其实，从这个结构可以略见</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的实现的一斑，即</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的所有动作都是根据它的</span><span lang="EN-US" style="line-height: 22px;">BIO_METHOD</span><span style="line-height: 22px; font-family: 宋体;">的类型（第一个参数）来决定它的动作和行为的，从而实现</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对各种类型的多态实现。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">在</span><span lang="EN-US" style="line-height: 22px;">file</span><span style="line-height: 22px; font-family: 宋体;">类型中，使用前面介绍过的</span><span lang="EN-US" style="line-height: 22px;">BIO_read</span><span style="line-height: 22px; font-family: 宋体;">和</span><span lang="EN-US" style="line-height: 22px;">BIO_write</span><span style="line-height: 22px; font-family: 宋体;">对底层的</span><span lang="EN-US" style="line-height: 22px;">file</span><span style="line-height: 22px; font-family: 宋体;">数据流进行读写操作，</span><span lang="EN-US" style="line-height: 22px;">file</span><span style="line-height: 22px; font-family: 宋体;">类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">是支持</span><span lang="EN-US" style="line-height: 22px;">BIO_gets</span><span style="line-height: 22px; font-family: 宋体;">和</span><span lang="EN-US" style="line-height: 22px;">BIO_puts</span><span style="line-height: 22px; font-family: 宋体;">函数的。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_flush</span><span style="line-height: 22px; font-family: 宋体;">函数在</span><span lang="EN-US" style="line-height: 22px;">file</span><span style="line-height: 22px; font-family: 宋体;">类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">中只是简单调用了</span><span lang="EN-US" style="line-height: 22px;">API</span><span style="line-height: 22px; font-family: 宋体;">函数</span><span lang="EN-US" style="line-height: 22px;">fflush</span><span style="line-height: 22px; font-family: 宋体;">。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_reset</span><span style="line-height: 22px; font-family: 宋体;">函数则将文件指针重新指向文件的开始位置，它调用</span><span lang="EN-US" style="line-height: 22px;">fseek(stream,0,0)</span><span style="line-height: 22px; font-family: 宋体;">函数实现该功能。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_seek</span><span style="line-height: 22px; font-family: 宋体;">函数将文件指针位置至于所定义的位置</span><span lang="EN-US" style="line-height: 22px;">ofs</span><span style="line-height: 22px; font-family: 宋体;">上（从文件开头开始计算的偏移</span><span lang="EN-US" style="line-height: 22px;">ofs</span><span style="line-height: 22px; font-family: 宋体;">），它调用了文件的操作函数</span><span lang="EN-US" style="line-height: 22px;">fseek(stream,ofs,0)</span><span style="line-height: 22px; font-family: 宋体;">，是一个宏定义形式的函数，需要注意的是，因为该函数调用了</span><span lang="EN-US" style="line-height: 22px;">fseek</span><span style="line-height: 22px; font-family: 宋体;">函数，所以成功的时候返回</span><span lang="EN-US" style="line-height: 22px;">0</span><span style="line-height: 22px; font-family: 宋体;">，失败的时候返回－</span><span lang="EN-US" style="line-height: 22px;">1</span><span style="line-height: 22px; font-family: 宋体;">，这是跟标准</span><span lang="EN-US" style="line-height: 22px;">BIO_seek</span><span style="line-height: 22px; font-family: 宋体;">函数定义不一样的，因为标准的定义是成功返回</span><span lang="EN-US" style="line-height: 22px;">1</span><span style="line-height: 22px; font-family: 宋体;">，失败返回非正值。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_eof</span><span style="line-height: 22px; font-family: 宋体;">调用了</span><span lang="EN-US" style="line-height: 22px;">feof</span><span style="line-height: 22px; font-family: 宋体;">函数。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">如果在</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">结构中设置了</span><span lang="EN-US" style="line-height: 22px;">BIO_CLOSE</span><span style="line-height: 22px; font-family: 宋体;">的标志，则在</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">释放的时候会自动调用</span><span lang="EN-US" style="line-height: 22px;">fclose</span><span style="line-height: 22px; font-family: 宋体;">函数。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">11.2 BIO_new_file<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数根据给定的</span><span lang="EN-US" style="line-height: 22px;">mode</span><span style="line-height: 22px; font-family: 宋体;">类型创建了一个文件</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，</span><span lang="EN-US" style="line-height: 22px;">mode</span><span style="line-height: 22px; font-family: 宋体;">参数的函数跟</span><span lang="EN-US" style="line-height: 22px;">fopen</span><span style="line-height: 22px; font-family: 宋体;">函数中</span><span lang="EN-US" style="line-height: 22px;">mode</span><span style="line-height: 22px; font-family: 宋体;">参数的含义是一样的。返回的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">设置了</span><span lang="EN-US" style="line-height: 22px;">BIO_CLOSE</span><span style="line-height: 22px; font-family: 宋体;">标志。调用成功返回一个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，否则返回</span><span lang="EN-US" style="line-height: 22px;">NULL</span><span style="line-height: 22px; font-family: 宋体;">。事实上，该函数先调用了</span><span lang="EN-US" style="line-height: 22px;">fopen</span><span style="line-height: 22px; font-family: 宋体;">函数打开一个文件，然后调用</span><span lang="EN-US" style="line-height: 22px;">BIO_new</span><span style="line-height: 22px; font-family: 宋体;">函数创建一个</span><span lang="EN-US" style="line-height: 22px;">file</span><span style="line-height: 22px; font-family: 宋体;">类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，最后调用函数</span><span lang="EN-US" style="line-height: 22px;">BIO_set_fp</span><span style="line-height: 22px; font-family: 宋体;">函数给</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">结构跟相关的</span><span lang="EN-US" style="line-height: 22px;">file</span><span style="line-height: 22px; font-family: 宋体;">帮定。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">11.3 BIO_new_fp<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">用文件描述符创建一个</span><span lang="EN-US" style="line-height: 22px;">file</span><span style="line-height: 22px; font-family: 宋体;">类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，参数</span><span lang="EN-US" style="line-height: 22px;">Flags</span><span style="line-height: 22px; font-family: 宋体;">可以为</span><span lang="EN-US" style="line-height: 22px;">BIO_CLOSE,BIO_NOCLOSE</span><span style="line-height: 22px; font-family: 宋体;">（关闭标志）以及</span><span lang="EN-US" style="line-height: 22px;">BIO_FP_TEXT</span><span style="line-height: 22px; font-family: 宋体;">（将文件设置为文本模式，默认的是二进制模式，该选项只对</span><span lang="EN-US" style="line-height: 22px;">Win32</span><span style="line-height: 22px; font-family: 宋体;">平台有效）。事实上，该函数调用</span><span lang="EN-US" style="line-height: 22px;">BIO_new</span><span style="line-height: 22px; font-family: 宋体;">函数创建一个</span><span lang="EN-US" style="line-height: 22px;">file</span><span style="line-height: 22px; font-family: 宋体;">类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，然后调用函数</span><span lang="EN-US" style="line-height: 22px;">BIO_set_fp</span><span style="line-height: 22px; font-family: 宋体;">函数给</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">结构跟相关的</span><span lang="EN-US" style="line-height: 22px;">file</span><span style="line-height: 22px; font-family: 宋体;">绑定。需要注意的是，如果下层封装的是</span><span lang="EN-US" style="line-height: 22px;">stdout,stdin</span><span style="line-height: 22px; font-family: 宋体;">和</span><span lang="EN-US" style="line-height: 22px;">stderr</span><span style="line-height: 22px; font-family: 宋体;">，他们因为跟一般的是不关闭的，所以应该设置</span><span lang="EN-US" style="line-height: 22px;">BIO_NOCLOSE</span><span style="line-height: 22px; font-family: 宋体;">标志。调用成功返回一个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，否则返回</span><span lang="EN-US" style="line-height: 22px;">NULL</span><span style="line-height: 22px; font-family: 宋体;">。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">11.4 BIO_set_fp<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数将</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">跟文件描述符</span><span lang="EN-US" style="line-height: 22px;">fp</span><span style="line-height: 22px; font-family: 宋体;">帮定在一起，其参数</span><span lang="EN-US" style="line-height: 22px;">flags</span><span style="line-height: 22px; font-family: 宋体;">的含义跟</span><span lang="EN-US" style="line-height: 22px;">BIO_new_fp</span><span style="line-height: 22px; font-family: 宋体;">是一样的。该函数是一个宏定义函数。调用成功返回</span><span lang="EN-US" style="line-height: 22px;">1</span><span style="line-height: 22px; font-family: 宋体;">，否则返回</span><span lang="EN-US" style="line-height: 22px;">0</span><span style="line-height: 22px; font-family: 宋体;">，不过目前的实现是从来不会出现失败情况的。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">11.5 BIO_get_fp<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数返回</span><span lang="EN-US" style="line-height: 22px;">file</span><span style="line-height: 22px; font-family: 宋体;">类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">中文件描述符，也是一个宏定义。调用成功返回</span><span lang="EN-US" style="line-height: 22px;">1</span><span style="line-height: 22px; font-family: 宋体;">，否则返回</span><span lang="EN-US" style="line-height: 22px;">0</span><span style="line-height: 22px; font-family: 宋体;">，不过目前的实现是从来不会出现失败情况的。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">11.6 BIO_tell<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">返回位置指针的值。是一个宏定义函数。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">11.7 BIO_read_filename</span><span style="line-height: 25px; font-family: 宋体;">、</span><span lang="EN-US" style="line-height: 25px;">BIO_write_filename</span><span style="line-height: 25px; font-family: 宋体;">、</span><span lang="EN-US" style="line-height: 25px;">BIO_append_filename</span><span style="line-height: 25px; font-family: 宋体;">、</span><span lang="EN-US" style="line-height: 25px;">BIO_rw_filename<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">这四个函数分别设置</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的读文件名，写文件名，附加文件名以及读写的文件名。他们都是一些宏定义函数。调用成功返回</span><span lang="EN-US" style="line-height: 22px;">1</span><span style="line-height: 22px; font-family: 宋体;">，否则返回</span><span lang="EN-US" style="line-height: 22px;">0</span><span style="line-height: 22px; font-family: 宋体;">。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">从上面各函数的介绍可以看出，因为</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">调用了底层的各种操作函数，所以，如果底层函数的调用有任何异常，都会反映在</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的调用上。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">下面举几个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">文件类型操作的简单例子：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 22px;">1.</span><span style="line-height: 22px; font-family: 宋体;">最简单的实例程序</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO *bio_out;<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">bio_out = BIO_new_fp(stdout, BIO_NOCLOSE);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_printf(bio_out, "Hello World\n");<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 22px;">2.</span><span style="line-height: 22px; font-family: 宋体;">上述例子的另一种实现方法</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO *bio_out;<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">bio_out = BIO_new(BIO_s_file());<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;"> /*&nbsp;</span><span style="line-height: 22px; font-family: 宋体;">出错</span><span lang="EN-US" style="line-height: 22px;">*/<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">) /*&nbsp;</span><span style="line-height: 22px; font-family: 宋体;">出错则将文件流定向到标准输出</span><span lang="EN-US" style="line-height: 22px;">*/<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_printf(bio_out, "Hello World\n");<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 22px;">3.</span><span style="line-height: 22px; font-family: 宋体;">写文件操作</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO *out;<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">out = BIO_new_file("filename.txt", "w");<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;"> /*</span><span style="line-height: 22px; font-family: 宋体;">出错</span><span lang="EN-US" style="line-height: 22px;">&nbsp;*/<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_printf(out, "Hello World\n");<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_free(out);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 22px;">4.</span><span style="line-height: 22px; font-family: 宋体;">上述例子的另一种实现方法</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO *out;<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">out = BIO_new(BIO_s_file());<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;"> /* Error ... */<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">) /* Error ... */<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_printf(out, "Hello World\n");<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_free(out);<o p style="line-height: 22px;"></o:p></span></p><h2 style="line-height: 33px;"><span lang="EN-US" style="line-height: 33px;">12.</span><span style="line-height: 33px; font-family: 黑体;">文件描述符</span><span lang="EN-US" style="line-height: 33px;">(fd)</span><span style="line-height: 33px; font-family: 黑体;">类型</span><span lang="EN-US" style="line-height: 33px;">BIO<o p style="line-height: 33px;"></o:p></span></h2><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">文件描述符类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">也是一个</span><span lang="EN-US" style="line-height: 22px;">source/sink</span><span style="line-height: 22px; font-family: 宋体;">型的</span><span lang="EN-US" style="line-height: 22px;">BIO,</span><span style="line-height: 22px; font-family: 宋体;">它定义了以下一些类型的函数（</span><span lang="EN-US" style="line-height: 22px;">openssl\bio.h</span><span style="line-height: 22px; font-family: 宋体;">）：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_METHOD * BIO_s_fd(void);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_set_fd(b,fd,c) BIO_int_ctrl(b,BIO_C_SET_FD,c,fd)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_get_fd(b,c) BIO_ctrl(b,BIO_C_GET_FD,0,(char *)c)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO *BIO_new_fd(int fd, int close_flag);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">有一点需要说明的是，虽然存在</span><span lang="EN-US" style="line-height: 22px;">bss_fd.c</span><span style="line-height: 22px; font-family: 宋体;">文件，但是关于</span><span lang="EN-US" style="line-height: 22px;">fd</span><span style="line-height: 22px; font-family: 宋体;">类型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的实现函数，并非真正在</span><span lang="EN-US" style="line-height: 22px;">bss_fd.c</span><span style="line-height: 22px; font-family: 宋体;">里面，而是在</span><span lang="EN-US" style="line-height: 22px;">bss_sock.c</span><span style="line-height: 22px; font-family: 宋体;">里面，</span><span lang="EN-US" style="line-height: 22px;">bss_fd.c</span><span style="line-height: 22px; font-family: 宋体;">这是简单包含了</span><span lang="EN-US" style="line-height: 22px;">bss_sock.c</span><span style="line-height: 22px; font-family: 宋体;">文件，所以大家要找实现函数，应该到</span><span lang="EN-US" style="line-height: 22px;">bss_sock.c</span><span style="line-height: 22px; font-family: 宋体;">里面找。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">12.1 BIO_s_fd<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数返回一个文件描述符类型的</span><span lang="EN-US" style="line-height: 22px;">BIO_METHOD</span><span style="line-height: 22px; font-family: 宋体;">结构，它封装了文件描述符类型的一些规则，如</span><span lang="EN-US" style="line-height: 22px;">read()</span><span style="line-height: 22px; font-family: 宋体;">和</span><span lang="EN-US" style="line-height: 22px;">write()</span><span style="line-height: 22px; font-family: 宋体;">函数等。</span><span lang="EN-US" style="line-height: 22px;">fd</span><span style="line-height: 22px; font-family: 宋体;">类型的</span><span lang="EN-US" style="line-height: 22px;">BIO_METHOD</span><span style="line-height: 22px; font-family: 宋体;">结构如下：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">static BIO_METHOD methods_fdp=<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">{<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_TYPE_FD,"file descriptor",<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">fd_write,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">fd_read,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">fd_puts,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">NULL, /* fd_gets, */<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">fd_ctrl,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">fd_new,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">fd_free,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">NULL,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 22px;">};<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">可见，跟</span><span lang="EN-US" style="line-height: 22px;">file</span><span style="line-height: 22px; font-family: 宋体;">类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">相比，它没有实现</span><span lang="EN-US" style="line-height: 22px;">gets</span><span style="line-height: 22px; font-family: 宋体;">的方法。下面对一些同样的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">操作函数作些简单说明：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_read</span><span style="line-height: 22px; font-family: 宋体;">和</span><span lang="EN-US" style="line-height: 22px;">BIO_write</span><span style="line-height: 22px; font-family: 宋体;">对底层的文件描述符结构进行读写操作。这两个函数的一些行为取决于他们所在的平台的文件描述符的读写函数的行为，如果底层的文件描述符是非阻塞型的，那么他们基本上是跟我们前面介绍过得</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的</span><span lang="EN-US" style="line-height: 22px;">IO</span><span style="line-height: 22px; font-family: 宋体;">操作函数一样的。请参看前面的文章和资料。</span><span lang="EN-US" style="line-height: 22px;">socket</span><span style="line-height: 22px; font-family: 宋体;">是一类特殊的描述符，不应该使用文件描述符类型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">来封装它，而应该使用专门的</span><span lang="EN-US" style="line-height: 22px;">socke</span><span style="line-height: 22px; font-family: 宋体;">类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，在以后我们会进行介绍。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_puts</span><span style="line-height: 22px; font-family: 宋体;">是支持的，但是</span><span lang="EN-US" style="line-height: 22px;">BIO_gets</span><span style="line-height: 22px; font-family: 宋体;">在本类型描述符中是不支持的。如果设置了关闭标志，那么当</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">被释放的时候底层的文件描述符就会被关闭。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_reset</span><span style="line-height: 22px; font-family: 宋体;">调用</span><span lang="EN-US" style="line-height: 22px;">lseek(fd,0,0)</span><span style="line-height: 22px; font-family: 宋体;">函数，使文件指针指向开始的位置。调用成功返回</span><span lang="EN-US" style="line-height: 22px;">0</span><span style="line-height: 22px; font-family: 宋体;">，失败返回－</span><span lang="EN-US" style="line-height: 22px;">1</span><span style="line-height: 22px; font-family: 宋体;">。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_seek</span><span style="line-height: 22px; font-family: 宋体;">调用了</span><span lang="EN-US" style="line-height: 22px;">lseek(fd,ofs,0)</span><span style="line-height: 22px; font-family: 宋体;">函数，设置文件指针的位置到从文件头偏移</span><span lang="EN-US" style="line-height: 22px;">ofs</span><span style="line-height: 22px; font-family: 宋体;">的位置，成功返回文件指针的位置，失败返回－</span><span lang="EN-US" style="line-height: 22px;">1</span><span style="line-height: 22px; font-family: 宋体;">。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_tell</span><span style="line-height: 22px; font-family: 宋体;">返回目前文件指针的位置，它其实调用了</span><span lang="EN-US" style="line-height: 22px;">lseek(fd,0,1)</span><span style="line-height: 22px; font-family: 宋体;">函数，失败返回－</span><span lang="EN-US" style="line-height: 22px;">1</span><span style="line-height: 22px; font-family: 宋体;">。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">12.2 BIO_set_fd<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数将</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的底层文件描述符设置为</span><span lang="EN-US" style="line-height: 22px;">fd</span><span style="line-height: 22px; font-family: 宋体;">，关闭标志也同时做了设置，其含义与文件类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">相应的含义一样。返回</span><span lang="EN-US" style="line-height: 22px;">1</span><span style="line-height: 22px; font-family: 宋体;">。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">12.3 BIO_get_fd<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">返回相应</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的底层文件描述符，存于参数</span><span lang="EN-US" style="line-height: 22px;">c</span><span style="line-height: 22px; font-family: 宋体;">，不过，同时也作为返回值返回。</span><span lang="EN-US" style="line-height: 22px;">c</span><span style="line-height: 22px; font-family: 宋体;">应该为</span><span lang="EN-US" style="line-height: 22px;">int *</span><span style="line-height: 22px; font-family: 宋体;">类型的指针。如果</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">没有初始化，调用该函数将失败，返回－</span><span lang="EN-US" style="line-height: 22px;">1</span><span style="line-height: 22px; font-family: 宋体;">。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">12.4 BIO_new_fd<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">创建并返回一个底层描述符为</span><span lang="EN-US" style="line-height: 22px;">fd</span><span style="line-height: 22px; font-family: 宋体;">，关闭标志为</span><span lang="EN-US" style="line-height: 22px;">close_flag</span><span style="line-height: 22px; font-family: 宋体;">的文件描述符类型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">。其实，该函数依次调用了</span><span lang="EN-US" style="line-height: 22px;">BIO_s_fd</span><span style="line-height: 22px; font-family: 宋体;">、</span><span lang="EN-US" style="line-height: 22px;">BIO_new</span><span style="line-height: 22px; font-family: 宋体;">和</span><span lang="EN-US" style="line-height: 22px;">BIO_set_fd</span><span style="line-height: 22px; font-family: 宋体;">完成了该功能。该函数如果调用失败返回</span><span lang="EN-US" style="line-height: 22px;">NULL</span><span style="line-height: 22px; font-family: 宋体;">。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">下面是一个简单的例子：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO *out;<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">out = BIO_new_fd(fileno(stdout), BIO_NOCLOSE);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_printf(out, "Hello World\n");<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_free(out);<o p style="line-height: 22px;"></o:p></span></p><h2 style="line-height: 33px;"><span lang="EN-US" style="line-height: 33px;">13.Socket</span><span style="line-height: 33px; font-family: 黑体;">类型</span><span lang="EN-US" style="line-height: 33px;">BIO<o p style="line-height: 33px;"></o:p></span></h2><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">Socket</span><span style="line-height: 22px; font-family: 宋体;">类型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">也是一种</span><span lang="EN-US" style="line-height: 22px;">source/sink</span><span style="line-height: 22px; font-family: 宋体;">型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，封装了</span><span lang="EN-US" style="line-height: 22px;">Socket</span><span style="line-height: 22px; font-family: 宋体;">的</span><span lang="EN-US" style="line-height: 22px;">IO</span><span style="line-height: 22px; font-family: 宋体;">操作，它相关的一些函数定义如下（</span><span lang="EN-US" style="line-height: 22px;">openssl\bio.h</span><span style="line-height: 22px; font-family: 宋体;">）：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_METHOD * BIO_s_socket(void);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_set_fd(b,fd,c) BIO_int_ctrl(b,BIO_C_SET_FD,c,fd)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_get_fd(b,c) BIO_ctrl(b,BIO_C_GET_FD,0,(char *)c)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO *BIO_new_socket(int sock, int close_flag);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">前面我们在介绍</span><span lang="EN-US" style="line-height: 22px;">fd</span><span style="line-height: 22px; font-family: 宋体;">类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的时候曾经说过，它的函数的实现文件跟</span><span lang="EN-US" style="line-height: 22px;">Soket</span><span style="line-height: 22px; font-family: 宋体;">类型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">其实是放在一起的，都在文件</span><span lang="EN-US" style="line-height: 22px;">bss_socket.c</span><span style="line-height: 22px; font-family: 宋体;">里面，从这些定义我们就可以知道，之所以这样做，是因为这两种类型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">实现的函数基本是相同的，并且具有很多的共性。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">13.1 BIO_s_socket<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数返回一个</span><span lang="EN-US" style="line-height: 22px;">Socket</span><span style="line-height: 22px; font-family: 宋体;">类型的</span><span lang="EN-US" style="line-height: 22px;">BIO_METHOD</span><span style="line-height: 22px; font-family: 宋体;">结构，</span><span lang="EN-US" style="line-height: 22px;">BIO_METHOD</span><span style="line-height: 22px; font-family: 宋体;">结构的定义如下：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">static BIO_METHOD methods_sockp=<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">{<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_TYPE_SOCKET,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">"socket",<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">sock_write,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">sock_read,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">sock_puts,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">NULL, /* sock_gets, */<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">sock_ctrl,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">sock_new,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">sock_free,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">NULL,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 22px;">};<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">可以看到，它跟</span><span lang="EN-US" style="line-height: 22px;">fd</span><span style="line-height: 22px; font-family: 宋体;">类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">在实现的动作上基本上是一样的。只不过是前缀名和类型字段的名称不一样。其实在象</span><span lang="EN-US" style="line-height: 22px;">Linux</span><span style="line-height: 22px; font-family: 宋体;">这样的系统里，</span><span lang="EN-US" style="line-height: 22px;">Socket</span><span style="line-height: 22px; font-family: 宋体;">类型跟</span><span lang="EN-US" style="line-height: 22px;">fd</span><span style="line-height: 22px; font-family: 宋体;">类型是一样，他们是可以通用的，但是，为什么要分开来实现呢，那是因为有些系统如</span><span lang="EN-US" style="line-height: 22px;">windows</span><span style="line-height: 22px; font-family: 宋体;">系统，</span><span lang="EN-US" style="line-height: 22px;">socket</span><span style="line-height: 22px; font-family: 宋体;">跟文件描述符是不一样的，所以，为了平台的兼容性，</span><span lang="EN-US" style="line-height: 22px;">openssl</span><span style="line-height: 22px; font-family: 宋体;">就将这两类分开来了。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_read</span><span style="line-height: 22px; font-family: 宋体;">和</span><span lang="EN-US" style="line-height: 22px;">BIO_write</span><span style="line-height: 22px; font-family: 宋体;">对底层的</span><span lang="EN-US" style="line-height: 22px;">Socket</span><span style="line-height: 22px; font-family: 宋体;">结构进行读写操作。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_puts</span><span style="line-height: 22px; font-family: 宋体;">是支持的，但是</span><span lang="EN-US" style="line-height: 22px;">BIO_gets</span><span style="line-height: 22px; font-family: 宋体;">在</span><span lang="EN-US" style="line-height: 22px;">Socket</span><span style="line-height: 22px; font-family: 宋体;">类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">中是不支持的，大家如果看源代码就可以知道，虽然</span><span lang="EN-US" style="line-height: 22px;">BIO_gets</span><span style="line-height: 22px; font-family: 宋体;">在</span><span lang="EN-US" style="line-height: 22px;">Socket</span><span style="line-height: 22px; font-family: 宋体;">类型是不支持的，但是如果调用该函数，不会出现异常，只会返回</span><span lang="EN-US" style="line-height: 22px;">-1</span><span style="line-height: 22px; font-family: 宋体;">的出错信息。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">如果设置了关闭标志，那么当</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">被释放的时候底层的</span><span lang="EN-US" style="line-height: 22px;">Socket</span><span style="line-height: 22px; font-family: 宋体;">连接就会被关闭。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">13.2 BIO_set_fd<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数将</span><span lang="EN-US" style="line-height: 22px;">Socket</span><span style="line-height: 22px; font-family: 宋体;">描述符</span><span lang="EN-US" style="line-height: 22px;">fd</span><span style="line-height: 22px; font-family: 宋体;">设置为</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的底层</span><span lang="EN-US" style="line-height: 22px;">IO</span><span style="line-height: 22px; font-family: 宋体;">结构，同时可以设置关闭标志</span><span lang="EN-US" style="line-height: 22px;">c</span><span style="line-height: 22px; font-family: 宋体;">。该函数返回</span><span lang="EN-US" style="line-height: 22px;">1</span><span style="line-height: 22px; font-family: 宋体;">。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">13.3 BIO_get_fd<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数返回指定</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的</span><span lang="EN-US" style="line-height: 22px;">Socket</span><span style="line-height: 22px; font-family: 宋体;">描述符，如果</span><span lang="EN-US" style="line-height: 22px;">c</span><span style="line-height: 22px; font-family: 宋体;">参数不是</span><span lang="EN-US" style="line-height: 22px;">NULL</span><span style="line-height: 22px; font-family: 宋体;">，那么就将该描述符存在参数</span><span lang="EN-US" style="line-height: 22px;">c</span><span style="line-height: 22px; font-family: 宋体;">里面，当然，</span><span lang="EN-US" style="line-height: 22px;">Socket</span><span style="line-height: 22px; font-family: 宋体;">描述符同时也作为返回值，如果</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">没有初始化则调用失败，返回－</span><span lang="EN-US" style="line-height: 22px;">1</span><span style="line-height: 22px; font-family: 宋体;">。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">13.4 BIO_new_socket<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数根据给定的参数返回一个</span><span lang="EN-US" style="line-height: 22px;">socket</span><span style="line-height: 22px; font-family: 宋体;">类型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，成功返回该</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">指针，失败返回</span><span lang="EN-US" style="line-height: 22px;">NULL</span><span style="line-height: 22px; font-family: 宋体;">。其实，该函数依次调用了</span><span lang="EN-US" style="line-height: 22px;">BIO_s_socket</span><span style="line-height: 22px; font-family: 宋体;">，</span><span lang="EN-US" style="line-height: 22px;">BIO_new</span><span style="line-height: 22px; font-family: 宋体;">和</span><span lang="EN-US" style="line-height: 22px;">BIO_set_fd</span><span style="line-height: 22px; font-family: 宋体;">实现它的功能。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h2 style="line-height: 33px;"><span lang="EN-US" style="line-height: 33px;">14.source/sink</span><span style="line-height: 33px; font-family: 黑体;">型</span><span lang="EN-US" style="line-height: 33px;">BIO<o p style="line-height: 33px;"></o:p></span></h2><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">这是一个空的</span><span lang="EN-US" style="line-height: 22px;">source/sink</span><span style="line-height: 22px; font-family: 宋体;">型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，写到这个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的数据都被丢掉了，从这里执行读操作也总是返回</span><span lang="EN-US" style="line-height: 22px;">EOF</span><span style="line-height: 22px; font-family: 宋体;">。该</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">非常简单，其相关函数的定义如下</span><span lang="EN-US" style="line-height: 22px;">(openssl\bio.h)</span><span style="line-height: 22px; font-family: 宋体;">：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_METHOD * BIO_s_null(void);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">其相关的源文件实现函数在</span><span lang="EN-US" style="line-height: 22px;">bss_null.c</span><span style="line-height: 22px; font-family: 宋体;">里面。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">14.1 BIO_s_null<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数返回一个</span><span lang="EN-US" style="line-height: 22px;">NULL</span><span style="line-height: 22px; font-family: 宋体;">型的</span><span lang="EN-US" style="line-height: 22px;">BIO_METHOD</span><span style="line-height: 22px; font-family: 宋体;">结构，该结构定义如下：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">static BIO_METHOD null_method=<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">{<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_TYPE_NULL,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">"NULL",<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">null_write,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">null_read,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">null_puts,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">null_gets,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">null_ctrl,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">null_new,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">null_free,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">NULL,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 22px;">};<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">从结构上看，这个类型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">实现了不少的函数，但是，仔细看看源文件，就会发现所有这些函数都只是简单返回</span><span lang="EN-US" style="line-height: 22px;">0</span><span style="line-height: 22px; font-family: 宋体;">、</span><span lang="EN-US" style="line-height: 22px;">1</span><span style="line-height: 22px; font-family: 宋体;">或者输入数据的长度，而不作任何事情。熟悉</span><span lang="EN-US" style="line-height: 22px;">Linux</span><span style="line-height: 22px; font-family: 宋体;">系统的技术人员可能知道，这跟</span><span lang="EN-US" style="line-height: 22px;">Linux</span><span style="line-height: 22px; font-family: 宋体;">系统的</span><span lang="EN-US" style="line-height: 22px;">/dev/null</span><span style="line-height: 22px; font-family: 宋体;">设备的行为是一样的。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">一般来说，在</span><span lang="EN-US" style="line-height: 22px;">openssl</span><span style="line-height: 22px; font-family: 宋体;">里面，这种类型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">是置放在</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">链的末尾的，比如在应用程序中，如果你要将一些数据通过</span><span lang="EN-US" style="line-height: 22px;">filter</span><span style="line-height: 22px; font-family: 宋体;">型的</span><span lang="EN-US" style="line-height: 22px;">BIO digest</span><span style="line-height: 22px; font-family: 宋体;">进行摘要算法，但不需要把它送往任何地方，又因为一个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">链要求以</span><span lang="EN-US" style="line-height: 22px;">source/sink</span><span style="line-height: 22px; font-family: 宋体;">型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">开始或结束，所以这时候就可以在</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">链的末尾添加一个</span><span lang="EN-US" style="line-height: 22px;">source/sink</span><span style="line-height: 22px; font-family: 宋体;">型的</span><span lang="EN-US" style="line-height: 22px;">NUll</span><span style="line-height: 22px; font-family: 宋体;">类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">来实现这个功能。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h2 style="line-height: 33px;"><span lang="EN-US" style="line-height: 33px;">15.mem</span><span style="line-height: 33px; font-family: 黑体;">类型</span><span lang="EN-US" style="line-height: 33px;">BIO<o p style="line-height: 33px;"></o:p></span></h2><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">内存（</span><span lang="EN-US" style="line-height: 22px;">mem</span><span style="line-height: 22px; font-family: 宋体;">）类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">所定义的相关系列函数如下（</span><span lang="EN-US" style="line-height: 22px;">openssl\bio.h</span><span style="line-height: 22px; font-family: 宋体;">）：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_METHOD * BIO_s_mem(void);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_set_mem_eof_return(BIO *b,int v)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">long BIO_get_mem_data(BIO *b, char **pp)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_set_mem_buf(BIO *b,BUF_MEM *bm,int c)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_get_mem_ptr(BIO *b,BUF_MEM **pp)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO *BIO_new_mem_buf(void *buf, int len);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">内存型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">是</span><span lang="EN-US" style="line-height: 22px;">source/sink</span><span style="line-height: 22px; font-family: 宋体;">型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，它使用内存作为它的</span><span lang="EN-US" style="line-height: 22px;">I/O</span><span style="line-height: 22px; font-family: 宋体;">。写进该类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的数据被存储在</span><span lang="EN-US" style="line-height: 22px;">BUF_MEM</span><span style="line-height: 22px; font-family: 宋体;">结构中，该结构被定义为适合存储数据的一种结构，其结构定义如下：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">typedef struct buf_mem_st<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">{<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">int length</span><span style="line-height: 22px; font-family: 宋体;">；</span><span lang="EN-US" style="line-height: 22px;">&nbsp;/* current number of bytes */<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">char *data;<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">int max; /* size of buffer */<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 22px;">} BUF_MEM;<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">可见，该结构定义了内存数据长度，数据存储空间以及最大长度三个变量来表述一段内存存储数据。但值得注意的是，内存型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的内存是可以无限扩大的，也就是说，不过你往里面写多少数据，都能成功执行。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">一般来说，任何写入内存型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的数据都能被读出，除非该内存型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">是只读类型的，那么，这时候如果对只读的内存型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">执行读操作，那么相关数据就会从该</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">删除掉（其实没有删掉，只是指针往后面移动，访问不了了，如果调用</span><span lang="EN-US" style="line-height: 22px;">BIO_reset</span><span style="line-height: 22px; font-family: 宋体;">就可以再访问）。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">15.1 BIO_s_mem<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数返回一个内存型的</span><span lang="EN-US" style="line-height: 22px;">BIO_METHOD</span><span style="line-height: 22px; font-family: 宋体;">结构，期定义如下：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">static BIO_METHOD mem_method=<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">{<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_TYPE_MEM,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">"memory buffer",<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">mem_write,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">mem_read,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">mem_puts,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">mem_gets,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">mem_ctrl,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">mem_new,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">mem_free,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">NULL,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 22px;">};<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_write</span><span style="line-height: 22px; font-family: 宋体;">和</span><span lang="EN-US" style="line-height: 22px;">BIO_read</span><span style="line-height: 22px; font-family: 宋体;">函数是支持的。对内存型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">执行写操作总是成功的，因为内存型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的内存能够无限扩大。任何一个对可读写的内存型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的读操作都会在使用内部拷贝操作从</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">里面删除该段数据，这样一来，如果</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">里面有大量的数据，而读的却只是很小的一些片断，那么会导致操作非常慢。使用只读的内存型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">避免了这个问题。在使用的时候，如果内存型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">必须使用可读写的，那么可以加一个</span><span lang="EN-US" style="line-height: 22px;">Buffer</span><span style="line-height: 22px; font-family: 宋体;">型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">到</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">链中，这可以使操作速度更快。在以后的版本（该文档所述版本为</span><st1 chsdate isrocdate="False" islunardate="False" day="30" month="12" year="1899" wst="on" style="line-height: 22px;"><span lang="EN-US" style="line-height: 22px;">0.<st1 chmetcnv tcsc="0" numbertype="1" negative="False" hasspace="False" sourcevalue="9.6" unitname="a" wst="on" style="line-height: 22px;">9.6a</st1:chmetcnv></span></st1:chsdate><span style="line-height: 22px; font-family: 宋体;">）</span><span lang="EN-US" style="line-height: 22px;">,</span><span style="line-height: 22px; font-family: 宋体;">可能会优化速度操作的问题。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_gets</span><span style="line-height: 22px; font-family: 宋体;">和</span><span lang="EN-US" style="line-height: 22px;">BIO_puts</span><span style="line-height: 22px; font-family: 宋体;">操作在该类型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">是支持的。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">如果设置了</span><span lang="EN-US" style="line-height: 22px;">BIO_CLOSE</span><span style="line-height: 22px; font-family: 宋体;">标志，那么内存型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">被释放的时候其底层的</span><span lang="EN-US" style="line-height: 22px;">BUF_MEM</span><span style="line-height: 22px; font-family: 宋体;">型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">也同时被释放。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_reset</span><span style="line-height: 22px; font-family: 宋体;">函数被调用时，如果该</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">是可读写的，那么该</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">所有数据都会被清空；如果该</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">是只读的，那么该操作只会简单将指针指向原始位置，里面的数据可以再读。该文档所述版本的（</span><st1 chsdate isrocdate="False" islunardate="False" day="30" month="12" year="1899" wst="on" style="line-height: 22px;"><span lang="EN-US" style="line-height: 22px;">0.<st1 chmetcnv tcsc="0" numbertype="1" negative="False" hasspace="False" sourcevalue="9.6" unitname="a" wst="on" style="line-height: 22px;">9.6a</st1:chmetcnv></span></st1:chsdate><span style="line-height: 22px; font-family: 宋体;">）的内存型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对读写模式的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">没有提供一个可以将指针重置但不破坏原有数据的方法，在以后的版本可能会增加的。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_eof</span><span style="line-height: 22px; font-family: 宋体;">返回</span><span lang="EN-US" style="line-height: 22px;">true</span><span style="line-height: 22px; font-family: 宋体;">，表明只时候</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">里面没有可读数据。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_ctrl_pending</span><span style="line-height: 22px; font-family: 宋体;">返回目前</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">里面存储的数据的字节</span><span lang="EN-US" style="line-height: 22px;">(byte)</span><span style="line-height: 22px; font-family: 宋体;">数。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">15.2 BIO_set_mem_eof_return<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数设置一个没有数据的内存型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的执行读动作的行为。如果参数</span><span lang="EN-US" style="line-height: 22px;">v</span><span style="line-height: 22px; font-family: 宋体;">是</span><span lang="EN-US" style="line-height: 22px;">0</span><span style="line-height: 22px; font-family: 宋体;">，那么该空的内存型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">就会返回</span><span lang="EN-US" style="line-height: 22px;">EOF</span><span style="line-height: 22px; font-family: 宋体;">，也就是说，这时候返回为</span><span lang="EN-US" style="line-height: 22px;">0</span><span style="line-height: 22px; font-family: 宋体;">，如果调用</span><span lang="EN-US" style="line-height: 22px;">BIO_should_retry</span><span style="line-height: 22px; font-family: 宋体;">就会返回</span><span lang="EN-US" style="line-height: 22px;">false</span><span style="line-height: 22px; font-family: 宋体;">。如果参数</span><span lang="EN-US" style="line-height: 22px;">v</span><span style="line-height: 22px; font-family: 宋体;">为非零，那么就会返回</span><span lang="EN-US" style="line-height: 22px;">v</span><span style="line-height: 22px; font-family: 宋体;">，并且同时会设置重试标志，也就是说此时调用</span><span lang="EN-US" style="line-height: 22px;">BIO_read_retry</span><span style="line-height: 22px; font-family: 宋体;">会返回</span><span lang="EN-US" style="line-height: 22px;">true</span><span style="line-height: 22px; font-family: 宋体;">。为了跟正常的返回正值避免混淆，</span><span lang="EN-US" style="line-height: 22px;">v</span><span style="line-height: 22px; font-family: 宋体;">应该设置为负值，典型来说是－</span><span lang="EN-US" style="line-height: 22px;">1</span><span style="line-height: 22px; font-family: 宋体;">。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">15.3 BIO_get_mem_data<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数是一个宏定义函数，它将参数</span><span lang="EN-US" style="line-height: 22px;">pp</span><span style="line-height: 22px; font-family: 宋体;">的指针指向内存型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的数据开始处，返回所有有效的数据。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">15.4 BIO_set_mem_buf<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数将参数</span><span lang="EN-US" style="line-height: 22px;">bm</span><span style="line-height: 22px; font-family: 宋体;">所代表的</span><span lang="EN-US" style="line-height: 22px;">BUF_MEM</span><span style="line-height: 22px; font-family: 宋体;">结构作为该</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的底层结构，并把关闭标志设置为参数</span><span lang="EN-US" style="line-height: 22px;">c</span><span style="line-height: 22px; font-family: 宋体;">，</span><span lang="EN-US" style="line-height: 22px;">c</span><span style="line-height: 22px; font-family: 宋体;">可以是</span><span lang="EN-US" style="line-height: 22px;">BIO_CLOSE</span><span style="line-height: 22px; font-family: 宋体;">或</span><span lang="EN-US" style="line-height: 22px;">BIO_NOCLOSE</span><span style="line-height: 22px; font-family: 宋体;">，该函数也是一个宏定义。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">15.5 BIO_get_mem_ptr<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数也是一个宏定义函数，它将底层的</span><span lang="EN-US" style="line-height: 22px;">BUF_MEM</span><span style="line-height: 22px; font-family: 宋体;">结构放在指针</span><span lang="EN-US" style="line-height: 22px;">pp</span><span style="line-height: 22px; font-family: 宋体;">中。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">15.6 BIO_new_mem_buf<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数创建一个内存型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，其数据为</span><span lang="EN-US" style="line-height: 22px;">buf</span><span style="line-height: 22px; font-family: 宋体;">里面长度为</span><span lang="EN-US" style="line-height: 22px;">len</span><span style="line-height: 22px; font-family: 宋体;">的数据（单位为</span><span lang="EN-US" style="line-height: 22px;">byte</span><span style="line-height: 22px; font-family: 宋体;">），如果参数</span><span lang="EN-US" style="line-height: 22px;">len</span><span style="line-height: 22px; font-family: 宋体;">是－</span><span lang="EN-US" style="line-height: 22px;">1</span><span style="line-height: 22px; font-family: 宋体;">，那么就默认</span><span lang="EN-US" style="line-height: 22px;">buf</span><span style="line-height: 22px; font-family: 宋体;">是以</span><span lang="EN-US" style="line-height: 22px;">null</span><span style="line-height: 22px; font-family: 宋体;">结束的，使用</span><span lang="EN-US" style="line-height: 22px;">strlen</span><span style="line-height: 22px; font-family: 宋体;">解决长度。这时候</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">被设置为只读的，不能执行写操作。它用于数据需要存储在一块静态内存中并以</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">形式存在的时候。所需要的数据是直接从内存中读取的，而不是先要执行拷贝操作（读写方式的内存</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">就是要先拷贝），这也就要求这块内存是只读的，不能改变，一直维持到</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">被释放。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">例子</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 22px;">1.</span><span style="line-height: 22px; font-family: 宋体;">创建一个内存型</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">并写入数据</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO *mem = BIO_new(BIO_s_mem());<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_puts(mem, "Hello World\n");<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 22px;">2.</span><span style="line-height: 22px; font-family: 宋体;">创建一个只读的内存型</span><span lang="EN-US" style="line-height: 22px;">BIO<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">char data[] = "Hello World";<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO *mem;<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">mem = BIO_new_mem_buf(data, -1);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 22px;">3.</span><span style="line-height: 22px; font-family: 宋体;">把一个</span><span lang="EN-US" style="line-height: 22px;">BUF_MEM</span><span style="line-height: 22px; font-family: 宋体;">结构从一个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">中取出并释放该</span><span lang="EN-US" style="line-height: 22px;">BIO<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BUF_MEM *bptr;<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_get_mem_ptr(mem, &amp;bptr);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_set_close(mem, BIO_NOCLOSE); /* BIO_free()&nbsp;</span><span style="line-height: 22px; font-family: 宋体;">不释放</span><span lang="EN-US" style="line-height: 22px;">BUF_MEM</span><span style="line-height: 22px; font-family: 宋体;">结构</span><span lang="EN-US" style="line-height: 22px;">&nbsp;*/<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_free(mem);<o p style="line-height: 22px;"></o:p></span></p><h2 style="line-height: 33px;"><span lang="EN-US" style="line-height: 33px;">16.BIO</span><span style="line-height: 33px; font-family: 黑体;">对</span><span lang="EN-US" style="line-height: 33px;">(pair)</span><span style="line-height: 33px; font-family: 黑体;">类型</span><span lang="EN-US" style="line-height: 33px;">BIO<o p style="line-height: 33px;"></o:p></span></h2><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对也是作为一种</span><span lang="EN-US" style="line-height: 22px;">source/sink</span><span style="line-height: 22px; font-family: 宋体;">类型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">来处理的，也就是说，</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">里面还提供了一种专门的</span><span lang="EN-US" style="line-height: 22px;">BIO_METHO</span><span style="line-height: 22px; font-family: 宋体;">方法来处理</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对的各种操作。</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对的各种相关的函数定义如下</span><span lang="EN-US" style="line-height: 22px;">(openssl\bio.h)</span><span style="line-height: 22px; font-family: 宋体;">：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_METHOD *BIO_s_bio(void);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;">&nbsp;</o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_make_bio_pair(b1,b2) (int)BIO_ctrl(b1,BIO_C_MAKE_BIO_PAIR,0,b2)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_destroy_bio_pair(b) (int)BIO_ctrl(b,BIO_C_DESTROY_BIO_PAIR,0,NULL)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;">&nbsp;</o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_shutdown_wr(b) (int)BIO_ctrl(b, BIO_C_SHUTDOWN_WR, 0, NULL)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;">&nbsp;</o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_set_write_buf_size(b,size) (int)BIO_ctrl(b,BIO_C_SET_WRITE_BUF_SIZE,size,NULL)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_get_write_buf_size(b,size) (size_t)BIO_ctrl(b,BIO_C_GET_WRITE_BUF_SIZE,size,NULL)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;">&nbsp;</o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">int BIO_new_bio_pair(BIO **bio1, size_t writebuf1, BIO **bio2, size_t writebuf2);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;">&nbsp;</o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_get_write_guarantee(b) (int)BIO_ctrl(b,BIO_C_GET_WRITE_GUARANTEE,0,NULL)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">size_t BIO_ctrl_get_write_guarantee(BIO *b);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;">&nbsp;</o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">#define BIO_get_read_request(b) (int)BIO_ctrl(b,BIO_C_GET_READ_REQUEST,0,NULL)<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">size_t BIO_ctrl_get_read_request(BIO *b);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;">&nbsp;</o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">int BIO_ctrl_reset_read_request(BIO *b);<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">可以看到，这些函数中大多数是宏定义函数并且都是基于</span><span lang="EN-US" style="line-height: 22px;">BIO_ctrl</span><span style="line-height: 22px; font-family: 宋体;">函数的。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对类型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">是一对</span><span lang="EN-US" style="line-height: 22px;">source/sink</span><span style="line-height: 22px; font-family: 宋体;">型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，数据通常是从一个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">缓冲写入，从另一个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">读出。其实，从源代码（</span><span lang="EN-US" style="line-height: 22px;">bss_bio.c</span><span style="line-height: 22px; font-family: 宋体;">）可以看出，所谓的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对只是将两个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的终端输出（</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">结构中参数</span><span lang="EN-US" style="line-height: 22px;">peer</span><span style="line-height: 22px; font-family: 宋体;">的</span><span lang="EN-US" style="line-height: 22px;">ptr</span><span style="line-height: 22px; font-family: 宋体;">成员）相互设置为对方，从而形成一种对称的结构，如下：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">bio1-&gt;peer-&gt;ptr=bio2<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">bio2-&gt;peer-&gt;ptr=bio1<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;">&nbsp;</o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">数据流向</span><span lang="EN-US" style="line-height: 22px;">1(</span><span style="line-height: 22px; font-family: 宋体;">写</span><span lang="EN-US" style="line-height: 22px;">bio1,</span><span style="line-height: 22px; font-family: 宋体;">读</span><span lang="EN-US" style="line-height: 22px;">bio2)</span><span style="line-height: 22px; font-family: 宋体;">：</span><span lang="EN-US" style="line-height: 22px;">---&gt;bio1---&gt;bio2---&gt;<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">数据流行</span><span lang="EN-US" style="line-height: 22px;">2(</span><span style="line-height: 22px; font-family: 宋体;">写</span><span lang="EN-US" style="line-height: 22px;">bio2,</span><span style="line-height: 22px; font-family: 宋体;">读</span><span lang="EN-US" style="line-height: 22px;">bio1)</span><span style="line-height: 22px; font-family: 宋体;">：</span><span lang="EN-US" style="line-height: 22px;">---&gt;bio2---&gt;bio1---&gt;<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">因为没有提供内部数据结构的内存锁结构</span><span lang="EN-US" style="line-height: 22px;">(lock)</span><span style="line-height: 22px; font-family: 宋体;">，所以，一般来说这个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对的两个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">都必须在一个线程下使用。因为</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">链通常是以一个</span><span lang="EN-US" style="line-height: 22px;">source/sink BIO</span><span style="line-height: 22px; font-family: 宋体;">结束的，所以就可以实现应用程序通过控制</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对的一个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">从而控制整个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">链的数据处理。其实，也就相当于</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对给应用程序提供了一个处理整个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">链的入口。上次我们说</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对的时候就说过，</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对的一个典型应用就是在应用程序里面控制</span><span lang="EN-US" style="line-height: 22px;">TLS/SSL</span><span style="line-height: 22px; font-family: 宋体;">的</span><span lang="EN-US" style="line-height: 22px;">I/O</span><span style="line-height: 22px; font-family: 宋体;">接口，一般来说，在应用程序想在</span><span lang="EN-US" style="line-height: 22px;">TLS/SSL</span><span style="line-height: 22px; font-family: 宋体;">中使用非标准的传输方法或者不适合使用标准的</span><span lang="EN-US" style="line-height: 22px;">socket</span><span style="line-height: 22px; font-family: 宋体;">方法的时候就可以采用这样的方法来实现。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">前面提过，</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对释放的时候，需要分别释放两个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，如果在使用</span><span lang="EN-US" style="line-height: 22px;">BIO_free</span><span style="line-height: 22px; font-family: 宋体;">或者</span><span lang="EN-US" style="line-height: 22px;">BIO_free_all</span><span style="line-height: 22px; font-family: 宋体;">释放了其中一个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的时候，另一个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">就也必须要释放。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">当</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对使用在双向应用程序的时候，如</span><span lang="EN-US" style="line-height: 22px;">TLS/SSL</span><span style="line-height: 22px; font-family: 宋体;">，一定要对写缓冲区里面的数据执行</span><span lang="EN-US" style="line-height: 22px;">flush</span><span style="line-height: 22px; font-family: 宋体;">操作。当然，也可以通过在</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对中的另一个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">调用</span><span lang="EN-US" style="line-height: 22px;">BIO_pending</span><span style="line-height: 22px; font-family: 宋体;">函数，如果有数据在缓冲区中，那么就将它们读出并发送到底层的传输通道中区。为了使请求或</span><span lang="EN-US" style="line-height: 22px;">BIO_should_read</span><span style="line-height: 22px; font-family: 宋体;">函数调用成功（为</span><span lang="EN-US" style="line-height: 22px;">true</span><span style="line-height: 22px; font-family: 宋体;">），在执行任何正常的操作（如</span><span lang="EN-US" style="line-height: 22px;">select</span><span style="line-height: 22px; font-family: 宋体;">）之前，都必须这样做才行。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">下面举一个例子说明执行</span><span lang="EN-US" style="line-height: 22px;">flush</span><span style="line-height: 22px; font-family: 宋体;">操作的重要性：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">考虑在</span><span lang="EN-US" style="line-height: 22px;">TLS/SSL</span><span style="line-height: 22px; font-family: 宋体;">握手过程中，采用了</span><span lang="EN-US" style="line-height: 22px;">BIO_write</span><span style="line-height: 22px; font-family: 宋体;">函数发送了数据，相应的操作应该使</span><span lang="EN-US" style="line-height: 22px;">BIO_read</span><span style="line-height: 22px; font-family: 宋体;">。</span><span lang="EN-US" style="line-height: 22px;">BIO_write</span><span style="line-height: 22px; font-family: 宋体;">操作成功执行并将数据写入到写缓冲区中。</span><span lang="EN-US" style="line-height: 22px;">BIO_read</span><span style="line-height: 22px; font-family: 宋体;">调用开始会失败，</span><span lang="EN-US" style="line-height: 22px;">BIO_should_retry</span><span style="line-height: 22px; font-family: 宋体;">返回</span><span lang="EN-US" style="line-height: 22px;">true</span><span style="line-height: 22px; font-family: 宋体;">。如果此时对写缓冲区不执行</span><span lang="EN-US" style="line-height: 22px;">flush</span><span style="line-height: 22px; font-family: 宋体;">操作，那么</span><span lang="EN-US" style="line-height: 22px;">BIO_read</span><span style="line-height: 22px; font-family: 宋体;">调用永远不会成功，因为底层传输通道会一直等待直到数据有效（但数据却在写缓冲区里，没有传到底层通道）。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">16.1 BIO_s_bio<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数返回一个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对类型的</span><span lang="EN-US" style="line-height: 22px;">BIO_METHOD</span><span style="line-height: 22px; font-family: 宋体;">，其定义如下：</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">static BIO_METHOD methods_biop =<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">{<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_TYPE_BIO,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">"BIO pair",<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">bio_write,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">bio_read,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">bio_puts,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">NULL /*&nbsp;</span><span style="line-height: 22px; font-family: 宋体;">没有定义</span><span lang="EN-US" style="line-height: 22px;">&nbsp;bio_gets */,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">bio_ctrl,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">bio_new,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">bio_free,<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">NULL /*&nbsp;</span><span style="line-height: 22px; font-family: 宋体;">没有定义</span><span lang="EN-US" style="line-height: 22px;">&nbsp;bio_callback_ctrl */<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 21pt; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 22px;">};<o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">从定义中可以看到，该类型的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">不支持</span><span lang="EN-US" style="line-height: 22px;">BIO_gets</span><span style="line-height: 22px; font-family: 宋体;">的功能。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_read</span><span style="line-height: 22px; font-family: 宋体;">函数从缓冲</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">中读取数据，如果没有数据，则发出一个重试请求。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_write</span><span style="line-height: 22px; font-family: 宋体;">函数往缓冲</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">中写入数据，如果缓冲区已满，则发出一个重试请求。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_ctrl_pending</span><span style="line-height: 22px; font-family: 宋体;">和</span><span lang="EN-US" style="line-height: 22px;">BIO_ctrl_wpending</span><span style="line-height: 22px; font-family: 宋体;">函数可以用来查看在读或写缓冲区里面有效的数据的数量。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span lang="EN-US" style="line-height: 22px;">BIO_reset</span><span style="line-height: 22px; font-family: 宋体;">函数将写缓冲区里面的数据清除。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">16.2 BIO_make_bio_pair<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数将两个单独的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">连接起来成为一个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">16.3 BIO_destroy_pair<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数跟上面的函数相反，它将两个连接起来的</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对拆开；如果一个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对中的任何一个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">被释放，该操作会自动执行。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">16.4 BIO_shutdown_wr<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数关闭</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对的其中一个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">，一个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">被关闭后，针对该</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的任何写操作都会返回错误。从另一个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">读数据的时候要么返回剩余的有效数据，要么返回</span><span lang="EN-US" style="line-height: 22px;">EOF</span><span style="line-height: 22px; font-family: 宋体;">。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">16.5 BIO_set_write_buf_size<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数设置</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的缓冲区大小。如果该</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的缓存区大小没有初始化，那么就会使用默认的值，大小为</span><span lang="EN-US" style="line-height: 22px;">17k</span><span style="line-height: 22px; font-family: 宋体;">，这对于一个</span><span lang="EN-US" style="line-height: 22px;">TLS</span><span style="line-height: 22px; font-family: 宋体;">记录来说是足够大的了。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">16.6 BIO_get_write_buf_size<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数返回写缓冲区的大小。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">16.7 BIO_new_bio_pair<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数我们在前面的《</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">系列之</span><span lang="EN-US" style="line-height: 22px;">9---BIO</span><span style="line-height: 22px; font-family: 宋体;">对的创建和应用》中已经做了详细的介绍，其实，它是调用了</span><span lang="EN-US" style="line-height: 22px;">BIO_new,BIO_make_bio_pair</span><span style="line-height: 22px; font-family: 宋体;">和</span><span lang="EN-US" style="line-height: 22px;">BIO_set_write_buf_size</span><span style="line-height: 22px; font-family: 宋体;">函数来创建一对</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对的。如果两个缓冲区长度的参数都为零，那么就会使用默认的缓冲区长度。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">16.8 BIO_get_write_guarantee</span><span style="line-height: 25px; font-family: 宋体;">和</span><span lang="EN-US" style="line-height: 25px;">BIO_ctrl_get_write_guarantee<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">这两个函数返回当前能够写入</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">的数据的最大长度。如果往</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">写入的数据长度比该函数返回的数据长度大，那么</span><span lang="EN-US" style="line-height: 22px;">BIO_write</span><span style="line-height: 22px; font-family: 宋体;">返回的写入数据长度会小于要求写入的数据，如果缓冲区已经满了，则会发出一个重试的请求。这两个函数的唯一不同之处是一个使用函数实现的，一个是使用宏定义实现的。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">16.9 BIO_get_read_request</span><span style="line-height: 25px; font-family: 宋体;">和</span><span lang="EN-US" style="line-height: 25px;">BIO_ctrl_get_read_request<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">这两个函数返回要求发送的数据的长度，这通常是在对该</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">对的另一个</span><span lang="EN-US" style="line-height: 22px;">BIO</span><span style="line-height: 22px; font-family: 宋体;">执行读操作时因为缓冲区数据为空导致失败时发出的请求。所以，这通常用来表明现在应该写入多少数据才能使接下来的读操作能够成功执行，这在</span><span lang="EN-US" style="line-height: 22px;">TLS/SSL</span><span style="line-height: 22px; font-family: 宋体;">应用程序中是非常有用的，因为对于这个协议来说，读取的数据长度比缓冲区的数据长度通常要有意义的多。如果在读操作成功之后调用这两个函数会返回</span><span lang="EN-US" style="line-height: 22px;">0</span><span style="line-height: 22px; font-family: 宋体;">，如果在调用该函数之前有新的数据写入（不管是部分还是全部满足需要读取的数据的要求），那么调用该函数也会返回</span><span lang="EN-US" style="line-height: 22px;">0</span><span style="line-height: 22px; font-family: 宋体;">。理所当然，该函数返回的数据长度肯定不会大于</span><span lang="EN-US" style="line-height: 22px;">BIO_get_write_guarantee</span><span style="line-height: 22px; font-family: 宋体;">函数返回的数据长度。</span><span lang="EN-US" style="line-height: 22px;"><o p style="line-height: 22px;"></o:p></span></p><h3 style="line-height: 25px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px;"><span lang="EN-US" style="line-height: 25px;">16.10 BIO_ctrl_reset_read_request<o p style="line-height: 25px;"></o:p></span></h3><p style="line-height: 22px; margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; text-indent: 21pt;"><span style="line-height: 22px; font-family: 宋体;">该函数就是把</span><span lang="EN-US" style="line-height: 22px;">BIO_get_read_request</span><span style="line-height: 22px; font-family: 宋体;">要返回值设置为</span><span lang="EN-US" style="line-height: 22px;">0</span><span style="line-height: 22px; font-family: 宋体;">。</span></p></span></h2>
</body></html>